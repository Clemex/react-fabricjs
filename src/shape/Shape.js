import React, { PropTypes } from 'react';

export let attributes = {
	angle: PropTypes.number,
	backgroundColor: PropTypes.string,
	borderColor: PropTypes.string,
	borderOpacityWhenMoving: PropTypes.number,
	borderScaleFactor: PropTypes.number,
	centeredRotation: PropTypes.bool,
	centeredScaling: PropTypes.bool,
	clipTo: PropTypes.func,
	cornerColor: PropTypes.string,
	cornerSize: PropTypes.number,
	// endAngle: PropTypes.number,
	evented: PropTypes.bool,
	fill: PropTypes.string,
	fillRule: PropTypes.string,
	flipX: PropTypes.bool,
	flipY: PropTypes.bool,
	globalCompositeOperation: PropTypes.string,
	hasBorders: PropTypes.bool,
	hasControls: PropTypes.bool,
	hasRotatingPoint: PropTypes.bool,
	// height: PropTypes.number,
	hoverCursor: PropTypes.string,
	includeDefaultValues: PropTypes.bool,
	left: PropTypes.number,
	lockMovementX: PropTypes.bool,
	lockMovementY: PropTypes.bool,
	lockRotation: PropTypes.bool,
	lockScalingFlip: PropTypes.bool,
	lockScalingX: PropTypes.bool,
	lockScalingY: PropTypes.bool,
	lockUniScaling: PropTypes.bool,
	minScaleLimit: PropTypes.number,
	oCoords: PropTypes.object,
	opacity: PropTypes.number,
	originX: PropTypes.oneOf(['left', 'right', 'center']),
	originY: PropTypes.oneOf(['left', 'right', 'center']),
	padding: PropTypes.number,
	perPixelTargetFind: PropTypes.bool,
	// radius: PropTypes.number,
	rotatingPointOffset: PropTypes.number,

	scaleX: PropTypes.number,
	scaleY: PropTypes.number,
	selectable: PropTypes.bool,
	shadow: PropTypes.object,
	// startAngle: PropTypes.number,
	stateProperties: PropTypes.array,

	stroke: PropTypes.string,
	strokeDashArray: PropTypes.array,
	strokeLineCap: PropTypes.oneOf(['butt', 'round', 'square']),
	strokeLineJoin: PropTypes.oneOf(['bevil', 'round', 'miter']),
	strokeMiterLimit: PropTypes.number, // used for strokeLineJoin = "miter"
	strokeWidth: PropTypes.number,
	top: PropTypes.number,
	transformMatrix: PropTypes.array,
	transparentCorners: PropTypes.bool,
	type: PropTypes.string,
	visible: PropTypes.bool,
	width: PropTypes.number,
};