{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///main.min.js","webpack:///webpack/bootstrap 881e179fb8fc5ab4faf2","webpack:///./src/react-fabric.js","webpack:///./~/fabric/dist/fabric.js","webpack:///./~/prop-types/index.js","webpack:///./src/base/Object.jsx","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js","webpack:///./~/buffer/index.js","webpack:///./~/process/browser.js","webpack:///./~/stream-browserify/index.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/events/events.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_transform.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_writable.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./src/StaticCanvas.jsx","webpack:///./src/Text.jsx","webpack:///./src/mixin/observable.js","webpack:///./src/shape/Path.jsx","webpack:///./~/deep-diff/index.js","webpack:///./~/http-browserify/index.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_readable.js","webpack:///./~/string_decoder/index.js","webpack:///./~/url/url.js","webpack:///./~/Base64/base64.js","webpack:///./src/Canvas.jsx","webpack:///./src/Color.js","webpack:///./src/IText.jsx","webpack:///./src/Image.jsx","webpack:///./src/ImageFilters.js","webpack:///./src/mixin/collection.js","webpack:///./src/shape/Circle.jsx","webpack:///./src/shape/Ellipse.jsx","webpack:///./src/shape/Line.jsx","webpack:///./src/shape/PathGroup.jsx","webpack:///./src/shape/Polygon.jsx","webpack:///./src/shape/Polyline.jsx","webpack:///./src/shape/Rect.jsx","webpack:///./src/shape/Triangle.jsx","webpack:///./~/base64-js/index.js","webpack:///./~/http-browserify/lib/request.js","webpack:///./~/http-browserify/lib/response.js","webpack:///./~/https-browserify/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/prop-types/~/fbjs/lib/emptyFunction.js","webpack:///./~/prop-types/~/fbjs/lib/invariant.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///./~/stream-browserify/~/isarray/index.js","webpack:///./~/stream-browserify/~/readable-stream/duplex.js","webpack:///./~/stream-browserify/~/readable-stream/passthrough.js","webpack:///./~/stream-browserify/~/readable-stream/readable.js","webpack:///./~/stream-browserify/~/readable-stream/transform.js","webpack:///./~/stream-browserify/~/readable-stream/writable.js","webpack:///./~/url/~/punycode/punycode.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/util/util.js","webpack:///(webpack)/buildin/module.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_13__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","concat","_interopRequireDefault","obj","__esModule","default","defineProperty","value","color","imageFilter","Itext","Text","Image","Triangle","Rect","Polyline","Polygon","PathGroup","Path","Line","Ellipse","Circle","Canvas","StaticCanvas","undefined","_StaticCanvas2","_StaticCanvas3","_Canvas2","_Canvas3","_Circle2","_Circle3","_Ellipse2","_Ellipse3","_Line2","_Line3","_Path2","_Path3","_PathGroup2","_PathGroup3","_Polygon2","_Polygon3","_Polyline2","_Polyline3","_Rect2","_Rect3","_Triangle2","_Triangle3","_Image2","_Image3","_Text2","_Text3","_IText","_IText2","_ImageFilters","_ImageFilters2","_Color","_Color2","Buffer","process","fabric","version","document","window","jsdom","decodeURIComponent","createWindow","parentWindow","isTouchSupported","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","fire","options","listenersForEvent","len","filter","Observable","off","trigger","Collection","_objects","add","_onObjectAdded","renderOnAddRemove","renderAll","insertAt","object","index","nonSplicing","objects","getObjects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","type","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","_set","key","get","toggle","global","sqrt","Math","atan2","pow","abs","PiBy180","PI","removeFromArray","idx","getRandomInt","min","max","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","sin","cos","rx","ry","transformPoint","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","width","yPoints","minY","maxY","height","left","top","invertTransform","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","resolveNamespace","parts","split","loadImage","url","crossOrigin","img","createImage","onload","onerror","log","src","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forceAsync","forEach","klass","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","sourcePath","populateWithProperties","destination","properties","toString","drawDashedLine","ctx","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","canvasEl","createElement","getContext","G_vmlCanvasManager","initElement","createAccessors","propName","capitalizedPropName","setterName","getterName","proto","stateProperties","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","angle","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","setAngle","String","match","isTransparent","tolerance","temp","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","alignX","alignY","aspectRatioAttrs","pop","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","arcToSegments","toX","toY","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","Array","join","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","invoke","method","byProperty","find","value1","value2","k","condition","searchElement","TypeError","n","POSITIVE_INFINITY","NEGATIVE_INFINITY","map","every","some","val","rv","extend","deep","Element","clone","replace","character","capitalize","firstLetterOnly","toLowerCase","escapeXml","trim","Dummy","bind","thisArg","_this","Subclass","callSuper","methodName","parentMethod","constructor","superclass","superClassMethod","console","createClass","initialize","parent","shift","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","valueOf","areHostMethods","methodNames","test","createListener","uid","wrappedHandler","createWrappedHandler","e","getElement","event","createDispatcher","handlers","handlersForEvent","getPointer","element","srcElement","unknown","scroll","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","styles","elementStyle","style","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","getElementById","makeElement","tagName","attributes","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","parentNode","replaceChild","appendChild","docElement","body","scrollLeft","scrollTop","host","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","parseInt","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","err","arr","defaultView","getComputedStyle","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","addParamToUrl","param","emptyFn","request","onComplete","xhr","makeXHR","parameters","open","setRequestHeader","send","factories","ActiveXObject","XMLHttpRequest","req","warn","noop","animate","requestAnimFrame","timestamp","time","start","Date","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","calculateColor","begin","end","pos","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","posValue","colorEasing","normalize","asin","elastic","opts","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","parsed","isArray","transformMatrix","parseTransformAttribute","visible","isNaN","_setStrokeFillOpacity","colorAttributes","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","parseStyleString","oStyle","chunk","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","matcher","classNames","getAttribute","RegExp","elementById","node","nodelist","parseUseDirectives","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","reViewBoxTagNames","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","hasAncestorWithNodeName","reAllowedSVGTagNames","reNotAllowedAncestors","reAllowedParents","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","operation","combinedMatrix","parseSVGDocument","parsingOptions","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","fontStyle","fontWeight","lineHeight","tagArray","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","ElementsParser","parse","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","_options","loadSVGFromString","DOMParser","parser","parseFromString","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","instanceFillValue","gradientId","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aqua","black","blue","fuchsia","gray","grey","green","lime","maroon","navy","olive","orange","purple","red","silver","teal","white","yellow","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","substring","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","position","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","group","reverse","minRadius","maxRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","forObject","repeat","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","BLUR_BOX","CANVAS_INIT_ERROR","Error","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeGroup","_activeGroup","ignoreVpt","skipAbsolute","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","canvas","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","iVpt","tl","br","tr","bl","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","_char","charIndex","fontList","_setSVGObject","sendToBack","objs","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","BaseBrush","strokeLineCap","strokeLineJoin","strokeDashArray","setShadow","_setBrushStyles","contextTop","strokeStyle","lineWidth","lineCap","lineJoin","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Group","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","STROKE_OFFSET","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","freeDrawingBrush","_chooseObjectsToRender","getActiveGroup","activeObject","getActiveObject","objsToRender","activeGroupObjects","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","ignoreZoom","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","hasBorders","transparentCorners","contextCache","originalColor","selectionBackgroundColor","active","_renderControls","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lastAngle","curAngle","hasRoated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","targets","_searchPossibleTargets","_fireOverOutEvents","overOpt","outOpt","hoveredTarget","_hoveredTarget","previousTarget","nextTarget","_checkTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","_setActiveObject","_activeObject","onDeselect","setActiveObject","currentActiveObject","_discardActiveObject","discardActiveObject","_setActiveGroup","setActiveGroup","_discardActiveGroup","destroy","discardActiveGroup","deactivateAll","allObjects","deactivateAllWithDispatch","removeListeners","removeChild","_drawObjectsControls","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","layoutProps","realizeTransform","_setCursorFromEvent","checkClick","which","button","cursorOffset","mr","mb","ml","RIGHT_CLICK","MIDDLE_CLICK","LEFT_CLICK","cursorMap","_bindEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","passive","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","eventsBinded","_onMouseUp","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","_handleEvent","_isCurrentlyDrawing","_onMouseUpInDrawingMode","searchTarget","isClick","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","__corner","eventType","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","currentAction","_setCornerCursor","_getRotatedCornerCursor","hasRotatingPoint","getAngle","_updateActiveGroup","_createActiveGroup","saveCoords","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","_groupSelectedObjects","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","intersectsWithRect","isContainedWithinRect","setObjectsCoords","supportQuality","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","__toDataURL","toDataURLWithMultiplier","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","ALIASING_LIMIT","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","strokeMiterLimit","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockRotation","lockUniScaling","statefullCache","noScaleCache","dirty","cacheProperties","_cacheProperties","_cacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","maximumSide","cacheSideLimit","limitedDims","zoomX","zoomY","_getCacheCanvasDimensions","objectScale","getObjectScaling","retina","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","sizeShrinking","setTransform","cacheTranslationX","cacheTranslationY","fromLeft","_transformDone","_removeDefaultValues","scaling","shouldConstrainValue","isChanged","_constrainScale","setOnGroup","setSourcePath","getViewportTransform","isNotVisible","noTransform","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","shouldCache","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","isCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","drawImage","skipCanvas","_removeShadow","miterLimit","dashArray","alternative","drawBordersInGroup","drawBorders","multX","multY","_applyPatternGradientTransform","patternTransform","_renderFill","_renderStroke","_renderDashedStroke","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","getLeft","getTop","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","_fromObject","extraParam","originXOffset","originYOffset","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","xFull","yFull","_originalOriginX","_originalOriginY","getCoords","multiplyMatrices","oCoords","aCoords","absolute","calculate","calcCoords","pointTL","pointBR","intersection","other","lines","_getImageLines","_findCrossPoints","centerPoint","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getBoundingRectWidth","getBoundingRectHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","_setCornerCoords","_calcRotateMatrix","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","w","bbox","dimX","dimY","getSvgColorString","str","getSvgStyles","skipShadow","getSvgFilter","getSvgId","getSvgTransform","getSkewX","getSkewY","translatePart","anglePart","scalePart","skewXPart","skewYPart","addTranslateX","flipXPart","addTranslateY","flipYPart","getSvgTransformMatrix","_createBaseSVGMarkup","saveProps","props","tmpObj","_isEqual","origValue","currentValue","firstPass","keys","originalSet","dashedPropertySet","isVML","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","cp","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","_callback","line","isValidRadius","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","widthBy2","heightBy2","piBy2","getRx","getRy","ellipse","_initRxRy","isRounded","_calcDimensions","pathOffset","diffX","diffY","commonRender","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","calcDim","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","addTransform","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","deltaY","pathUrl","paths","parseDimensionsFromPaths","xC","yC","parentCache","caching","isSameColor","pathsToObject","originalDefaults","firstPathFill","pathFill","total","originalPaths","pathGroup","_lockProperties","isAlreadyGrouped","_updateObjectsCoords","_updateObjectsACoords","_calcBounds","skipCoordsChange","_updateObjectCoords","__origHasControls","objectLeft","objectTop","_restoreObjectsState","_setObjectActive","delegatedProperties","textDecoration","textAlign","objsToObject","_renderObject","originalHasRotatingPoint","_restoreObjectState","_originalLeft","_originalTop","hasMoved","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","_lastScaleX","_lastScaleY","minimumScaleTrigger","filters","resizeFilters","_initElement","_element","_originalElement","_initConfig","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","filtered","getSvgSrc","origFill","_src","setSrc","imgElement","forResizing","replacement","retinaScaling","minimumScale","applyTo","toBuffer","pngCompression","elementToDraw","imageMargins","_findMargins","_needsResize","marginX","marginY","scales","_resetWidthHeight","CSS_CANVAS","_initFilters","fromURL","imgOptions","preserveAR","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","BaseFilter","Brightness","brightness","putImageData","Convolute","opaque","dstOff","scx","scy","srcOff","wt","weights","pixels","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","GradientTransparency","Grayscale","Invert","Mask","mask","channel","maskEl","maskCanvasEl","maskImageData","maskData","Noise","noise","rand","Pixelate","blocksize","_i","_ilen","_j","_jlen","RemoveWhite","distance","limit","Sepia","avg","Sepia2","Tint","tintR","tintG","tintB","alpha1","Multiply","Blend","mode","tg","_r","_g","_b","isImage","_el","tmpCanvas","context2","Resize","resizeType","lanczosLobes","rcpScaleX","rcpScaleY","oW","oH","dW","dH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","multW","multH","signW","signH","doneW","doneH","stepW","stepH","tmpCtx","lanczosCreate","lobes","xx","u","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","srcImg","xDiff","yDiff","chnl","origPix","w4","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","ColorMatrix","Contrast","contrast","contrastF","Saturate","saturate","adjust","MIN_TEXT_WIDTH","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","__skipDimension","_initDimensions","_setTextStyles","_textLines","_splitTextIntoLines","_clearCache","_getTextWidth","cursorWidth","_getTextHeight","_renderTextLinesBackground","_renderText","_renderTextDecoration","_renderTextFill","_renderTextStroke","textBaseline","_getFontDeclaration","_getHeightOfSingleLine","_getHeightOfLine","maxWidth","_getLineWidth","currentLineWidth","_renderChars","chars","shortM","additionalSpace","_getWidthOfCharSpacing","measureText","_renderTextLine","lineIndex","word","words","charOffset","wordsWidth","_getWidthOfWords","widthDiff","numSpaces","spaceWidth","leftOffset","charCount","_getLeftOffset","_getTopOffset","isEmptyStyles","_renderTextCommon","lineHeights","heightOfLine","maxHeight","_getLineLeftOffset","lineLeftOffset","lineTopOffset","originalFill","__lineWidths","__lineHeights","_shouldClearDimensionCache","shouldClear","_forceClearCache","wordCount","_measureLine","finalWidth","renderLinesAtOffset","offsets","oLen","halfOfVerticalBox","additionalProperties","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textBgRects","textSpans","svgStyle","textTopOffset","textLeftOffset","_setSVGBg","_setSVGTextLineBg","_setSVGTextLineText","yPos","_setSVGTextLineJustifed","_getFillAttributes","fillColor","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","IText","selectionStart","selectionEnd","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","initBehavior","p3","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","getSelectionStyles","startIndex","endIndex","loc","get2DCursorLocation","_getStyleDeclaration","setSelectionStyles","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","clearContextTop","cursorOffsetCache","renderCursorOrSelection","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","getCurrentCharStyle","getCurrentCharFontSize","getCurrentCharColor","typeOfBoundaries","_getCursorBoundariesOffsets","lineLeft","topOffset","_getWidthOfChar","cursorLocation","charHeight","__isMousedown","startLine","endLine","lineOffset","realLineHeight","boxWidth","j2","j2len","_renderCharsFast","prevStyle","thisStyle","charsToRender","_hasStyleChanged","_renderChar","skipFillStrokeCheck","charWidth","shouldFill","shouldStroke","_charWidth","decl","_getHeightOfChar","_applyCharStylesGetWidth","jChar","fillText","strokeText","_renderCharDecoration","decoration","decorationWeight","positions","underline","line-through","overline","decorations","leftCache","topCache","widthCache","heightCache","colorCache","_getWidthOfCharsAt","_getCacheProp","styleDeclaration","_getFontCache","cacheProp","charDecl","_applyFontStyles","returnCloneOrEmpty","_deleteStyleDeclaration","_deleteLineStyle","_isMeasuring","_getWidthOfSpace","currentCharHeight","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","selected","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","clearTimeout","_currentTickCompleteState","initDelayedCursor","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","getNumNewLinesInSelectedText","selectedText","numNewLines","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","inCompositionMode","_calcTextareaPosition","upperCanvas","_savedProps","_restoreEditingProps","overCursor","isTextChanged","_removeExtraneousStyles","_removeCharsFromTo","_removeSingleCharAndStyle","isBeginningOfLine","indexStyle","removeStyleObject","insertChars","_chars","useCopiedStyle","insertChar","copiedTextStyle","skipUpdate","styleObject","isEndOfLine","insertStyleObjects","insertNewlineStyleObject","shiftLineStyles","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","clonedStyles","numericLine","_removeStyleObject","_getTextOnPreviousLine","lIndex","textOnPreviousLine","newCharIndexOnPrevLine","insertNewline","setSelectionStartEndWithShift","newSelection","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","isDoubleClick","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","widthOfLine","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","cut","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","8","9","27","13","33","34","35","36","37","38","39","40","46","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","diff","charsToInsert","offsetEnd","textLength","newTextLength","prevCompositionLength","compositionStart","forwardDelete","moveCursorRight","removeChars","clipboardData","_getClipboardData","setData","copiedText","getData","_getWidthBeforeCursor","textBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","foundMatch","textOnLine","widthOfCharsOnLine","indexOnLine","widthOfChar","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","_removeCharsNearCursor","leftLineBoundary","leftWordBoundary","_setSVGTextLineChars","_getSVGLineTopOffset","styleDecl","_createTextCharSpan","_createTextCharBg","lastHeight","fillStyles","Textbox","minWidth","dynamicMinWidth","__cachedLines","getTextboxControlVisibility","_generateStyleMap","realLineCount","realLineCharCount","_styleMap","_wrapText","wrapped","_wrapLine","_measureText","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","originalAlign","__oldScaleX","numLines","removed","lineLen","lineChars","getMinWidth","setObjectScaleOverridden","_refreshControlsVisibility","override","tmp","oURL","URL","port","protocol","reqHandler","HTTPS","HTTP","hostname","response","setEncoding","statusCode","errno","ECONNREFUSED","message","requestFs","fs","readFile","createImageAndCallBack","eval","createCanvasForNode","nodeCanvasOptions","nodeCanvas","nodeCacheCanvas","FabricCanvas","fabricCanvas","Font","originaInitStatic","createPNGStream","createJPEGStream","origSetBackstoreDimension","_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_propTypes","_propTypes2","_fabric","_deepDiff","_deepDiff2","_observable","_observable2","FabricObject","_React$Component","getPrototypeOf","state","getClipTo","getFill","getFlipX","getFlipY","getOpacity","getOriginX","getOriginY","getScaleX","getScaleY","getShadow","getStrokeWidth","getTransformMatrix","getVisible","renderf","setClipTo","setFill","setFlipX","setFlipY","setLeft","setOriginX","setOriginY","setScaleX","setScaleY","setStroke","setStrokeWidth","setTop","setTransformMatrix","setVisible","getObject","nextProps","_this2","difference","comparsion","rhs","eventChanged","_this3","setState","initEvent","onAdded","onRemoved","onSelected","onModified","onRotating","onScaling","onMoving","onMousedown","onMouseup","Component","propTypes","bool","func","oneOf","oneOfType","instanceOf","defaultProps","ctor","superCtor","super_","TempCtor","Duplex","Readable","Writable","readable","allowHalfOpen","once","onend","_writableState","ended","nextTick","xs","f","objectKeys","inherits","typedArraySupport","Uint8Array","foo","subarray","byteLength","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","RangeError","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","fromArrayBuffer","fromString","assertSize","alloc","checked","isEncoding","actual","write","fromArrayLike","byteOffset","isBuffer","buffer","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","title","browser","env","argv","versions","removeAllListeners","emit","prependListener","prependOnceListener","name","binding","cwd","chdir","umask","Stream","EE","EventEmitter","Transform","PassThrough","pipe","dest","ondata","pause","ondrain","resume","didOnEnd","onclose","er","cleanup","listenerCount","_isStdio","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","isObject","isDate","isError","isFunction","isPrimitive","_events","_maxListeners","defaultMaxListeners","setMaxListeners","newListener","warned","trace","fired","evlistener","emitter","TransformState","stream","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","rs","_readableState","reading","needReadable","highWaterMark","_read","sync","_flush","done","ws","_transform","_write","writeencoding","WriteReq","WritableState","hwm","defaultHwm","objectMode","writableObjectMode","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","bufferProcessing","onwrite","writelen","pendingcb","prefinished","errorEmitted","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","writev","_writev","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","cbs","entry","prefinish","need","endWritable","cork","uncork","_collection","_collection2","allOnTop","getChild","ref","prevRef","prevProps","prevState","_this4","Children","children","child","doNotAdd","beforeRender","afterRender","onCanvasCleared","onObjectAdded","onObjectRemoved","_this5","_props","cloneElement","emptyJSON","_get","desc","getOwnPropertyDescriptor","getter","_Object","_Object2","_FabricObject","defaultSvgFontSize","assign","observableMixin","delgete","Diff","kind","DiffEdit","DiffNew","DiffDeleted","DiffArray","arrayRemove","rest","realTypeOf","subject","deepDiff","lhs","changes","prefilter","stack","alt","ltype","rtype","ldefined","rdefined","akeys","pkeys","accumulateDiff","accum","applyArrayChange","it","applyChange","last","revertArrayChange","revertChange","applyDiff","$scope","conflict","conflictResolution","DeepDiff","observableDiff","isConflict","noConflict","http","Request","params","location","scheme","xhrHttp","Agent","defaultMaxSockets","axs","ax","ax_","STATUS_CODES","100","101","102","200","201","202","203","204","205","206","207","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","422","423","424","425","426","428","429","431","500","501","502","503","504","505","506","507","509","510","511","ReadableState","pipes","pipesCount","flowing","endEmitted","emittedReadable","readableListening","readableObjectMode","ranOut","awaitDrain","readingMore","decoder","StringDecoder","readableAddChunk","addToFront","chunkInvalid","onEofChunk","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","resumeScheduled","resume_","fromList","stringMode","cpy","endReadable","debuglog","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","unpipe","doEnd","stdout","stderr","endFn","dests","ev","wrap","paused","events","_fromList","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","cr","Url","slashes","auth","hash","search","query","pathname","href","urlParse","parseQueryString","slashesDenoteHost","urlFormat","urlResolve","relative","resolve","urlResolveObject","resolveObject","punycode","protocolPattern","portPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","domainArray","newOut","encode","ae","esc","encodeURIComponent","escape","qm","rel","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","up","isAbsolute","InvalidCharacterError","btoa","input","block","atob","bs","bc","_StaticCanvas","_Text","onChanged","onSelectionChanged","onEditingEntered","onEditingExited","css","collectionMixin","_delgete$state$canvas","_delgete$state$canvas2","_Path","placeHoldersCount","b64","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","maxChunkLength","len2","Response","Base64","uri","withCredentials","responseType","_headers","headers","isSafeRequestHeader","setHeader","__aborted","handle","getHeader","removeHeader","isXHR2Compatible","unsafeHeaders","headerName","Blob","FormData","parseHeaders","getAllResponseHeaders","capable","streaming","status2","getResponse","respType","responseBlob","_emitData","respBody","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","invariant","ReactPropTypesSecret","shim","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","symbol","any","arrayOf","objectOf","shape","exact","checkPropTypes","PropTypes","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","validateFormat","argIndex","framesToPop","qs","sep","regexp","maxKeys","kstr","vstr","stringifyPrimitive","ks","decode","NODE_ENV","READABLE_STREAM","__WEBPACK_AMD_DEFINE_RESULT__","errors","mapDomain","regexSeparators","labels","encoded","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","base","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","damp","baseMinusTMin","tMax","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","freeGlobal","overflow","not-basic","invalid-input","ucs2","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","numLinesEst","prev","cur","pad","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","_","deprecate","msg","deprecated","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","pid","bold","italic","inverse","cyan","magenta","special","boolean","null","date","webpackPolyfill"],"mappings":"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","file":"main.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-fabricjs\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-fabricjs\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_13__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-fabricjs\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-fabricjs\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_13__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.color = exports.imageFilter = exports.Itext = exports.Text = exports.Image = exports.Triangle = exports.Rect = exports.Polyline = exports.Polygon = exports.PathGroup = exports.Path = exports.Line = exports.Ellipse = exports.Circle = exports.Canvas = exports.StaticCanvas = undefined;\n\t\n\tvar _StaticCanvas2 = __webpack_require__(15);\n\t\n\tvar _StaticCanvas3 = _interopRequireDefault(_StaticCanvas2);\n\t\n\tvar _Canvas2 = __webpack_require__(26);\n\t\n\tvar _Canvas3 = _interopRequireDefault(_Canvas2);\n\t\n\tvar _Circle2 = __webpack_require__(32);\n\t\n\tvar _Circle3 = _interopRequireDefault(_Circle2);\n\t\n\tvar _Ellipse2 = __webpack_require__(33);\n\t\n\tvar _Ellipse3 = _interopRequireDefault(_Ellipse2);\n\t\n\tvar _Line2 = __webpack_require__(34);\n\t\n\tvar _Line3 = _interopRequireDefault(_Line2);\n\t\n\tvar _Path2 = __webpack_require__(18);\n\t\n\tvar _Path3 = _interopRequireDefault(_Path2);\n\t\n\tvar _PathGroup2 = __webpack_require__(35);\n\t\n\tvar _PathGroup3 = _interopRequireDefault(_PathGroup2);\n\t\n\tvar _Polygon2 = __webpack_require__(36);\n\t\n\tvar _Polygon3 = _interopRequireDefault(_Polygon2);\n\t\n\tvar _Polyline2 = __webpack_require__(37);\n\t\n\tvar _Polyline3 = _interopRequireDefault(_Polyline2);\n\t\n\tvar _Rect2 = __webpack_require__(38);\n\t\n\tvar _Rect3 = _interopRequireDefault(_Rect2);\n\t\n\tvar _Triangle2 = __webpack_require__(39);\n\t\n\tvar _Triangle3 = _interopRequireDefault(_Triangle2);\n\t\n\tvar _Image2 = __webpack_require__(29);\n\t\n\tvar _Image3 = _interopRequireDefault(_Image2);\n\t\n\tvar _Text2 = __webpack_require__(16);\n\t\n\tvar _Text3 = _interopRequireDefault(_Text2);\n\t\n\tvar _IText = __webpack_require__(28);\n\t\n\tvar _IText2 = _interopRequireDefault(_IText);\n\t\n\tvar _ImageFilters = __webpack_require__(30);\n\t\n\tvar _ImageFilters2 = _interopRequireDefault(_ImageFilters);\n\t\n\tvar _Color = __webpack_require__(27);\n\t\n\tvar _Color2 = _interopRequireDefault(_Color);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Main Bundle\n\texports.default = {\n\t\tStaticCanvas: _StaticCanvas3.default,\n\t\tCanvas: _Canvas3.default,\n\t\n\t\tCircle: _Circle3.default,\n\t\tEllipse: _Ellipse3.default,\n\t\tLine: _Line3.default,\n\t\tPath: _Path3.default,\n\t\tPathGroup: _PathGroup3.default,\n\t\tPolygon: _Polygon3.default,\n\t\tPolyline: _Polyline3.default,\n\t\tRect: _Rect3.default,\n\t\tTriangle: _Triangle3.default,\n\t\n\t\tImage: _Image3.default,\n\t\tText: _Text3.default,\n\t\tItext: _IText2.default,\n\t\n\t\timageFilter: _ImageFilters2.default,\n\t\tcolor: _Color2.default\n\t};\n\t\n\t// Canvas\n\t\n\tvar StaticCanvas = exports.StaticCanvas = _StaticCanvas3.default;\n\tvar Canvas = exports.Canvas = _Canvas3.default;\n\t\n\t// Shape\n\tvar Circle = exports.Circle = _Circle3.default;\n\tvar Ellipse = exports.Ellipse = _Ellipse3.default;\n\tvar Line = exports.Line = _Line3.default;\n\tvar Path = exports.Path = _Path3.default;\n\tvar PathGroup = exports.PathGroup = _PathGroup3.default;\n\tvar Polygon = exports.Polygon = _Polygon3.default;\n\tvar Polyline = exports.Polyline = _Polyline3.default;\n\tvar Rect = exports.Rect = _Rect3.default;\n\tvar Triangle = exports.Triangle = _Triangle3.default;\n\t\n\tvar Image = exports.Image = _Image3.default;\n\tvar Text = exports.Text = _Text3.default;\n\tvar Itext = exports.Itext = _IText2.default;\n\t\n\t// utils\n\tvar imageFilter = exports.imageFilter = _ImageFilters2.default;\n\tvar color = exports.color = _Color2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, process) {/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n\t /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\t\n\tvar fabric = fabric || { version: \"1.7.20\" };\n\tif (true) {\n\t  exports.fabric = fabric;\n\t}\n\t\n\tif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t  fabric.document = document;\n\t  fabric.window = window;\n\t  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n\t  window.fabric = fabric;\n\t}\n\telse {\n\t  // assume we're running under node.js when document/window are not present\n\t  fabric.document = __webpack_require__(65)\n\t    .jsdom(\n\t      decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\")\n\t    );\n\t\n\t  if (fabric.document.createWindow) {\n\t    fabric.window = fabric.document.createWindow();\n\t  } else {\n\t    fabric.window = fabric.document.parentWindow;\n\t  }\n\t}\n\t\n\t/**\n\t * True when in environment that supports touch events\n\t * @type boolean\n\t */\n\t\n\tfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\t\n\t/**\n\t * True when in environment that's probably Node.js\n\t * @type boolean\n\t */\n\tfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n\t                      typeof window === 'undefined';\n\t\n\t/* _FROM_SVG_START_ */\n\t/**\n\t * Attributes parsed from all SVG elements\n\t * @type array\n\t */\n\tfabric.SHARED_ATTRIBUTES = [\n\t  \"display\",\n\t  \"transform\",\n\t  \"fill\", \"fill-opacity\", \"fill-rule\",\n\t  \"opacity\",\n\t  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n\t  \"stroke-linejoin\", \"stroke-miterlimit\",\n\t  \"stroke-opacity\", \"stroke-width\",\n\t  \"id\"\n\t];\n\t/* _FROM_SVG_END_ */\n\t\n\t/**\n\t * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n\t */\n\tfabric.DPI = 96;\n\tfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\n\tfabric.fontPaths = { };\n\tfabric.iMatrix = [1, 0, 0, 1, 0, 0];\n\tfabric.canvasModule = 'canvas';\n\t\n\t/**\n\t * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n\t * @since 1.7.14\n\t * @type Number\n\t * @default\n\t */\n\tfabric.perfLimitSizeTotal = 2097152;\n\t\n\t/**\n\t * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n\t * @since 1.7.14\n\t * @type Number\n\t * @default\n\t */\n\tfabric.maxCacheSideLimit = 4096;\n\t\n\t/**\n\t * Lowest pixel limit for cache canvases, set at 256PX\n\t * @since 1.7.14\n\t * @type Number\n\t * @default\n\t */\n\tfabric.minCacheSideLimit = 256;\n\t\n\t/**\n\t * Cache Object for widths of chars in text rendering.\n\t */\n\tfabric.charWidthsCache = { };\n\t\n\t/**\n\t * Device Pixel Ratio\n\t * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n\t */\n\tfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n\t                          fabric.window.webkitDevicePixelRatio ||\n\t                          fabric.window.mozDevicePixelRatio ||\n\t                          1;\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  function _removeEventListener(eventName, handler) {\n\t    if (!this.__eventListeners[eventName]) {\n\t      return;\n\t    }\n\t    var eventListener = this.__eventListeners[eventName];\n\t    if (handler) {\n\t      eventListener[eventListener.indexOf(handler)] = false;\n\t    }\n\t    else {\n\t      fabric.util.array.fill(eventListener, false);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Observes specified event\n\t   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias on\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function observe(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      this.__eventListeners = { };\n\t    }\n\t    // one object with key/value pairs was passed\n\t    if (arguments.length === 1) {\n\t      for (var prop in eventName) {\n\t        this.on(prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      if (!this.__eventListeners[eventName]) {\n\t        this.__eventListeners[eventName] = [];\n\t      }\n\t      this.__eventListeners[eventName].push(handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Stops event observing for a particular event handler. Calling this method\n\t   * without arguments removes all handlers for all events\n\t   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias off\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function to be deleted from EventListeners\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function stopObserving(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    // remove all key/value pairs (event name -> event handler)\n\t    if (arguments.length === 0) {\n\t      for (eventName in this.__eventListeners) {\n\t        _removeEventListener.call(this, eventName);\n\t      }\n\t    }\n\t    // one object with key/value pairs was passed\n\t    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n\t      for (var prop in eventName) {\n\t        _removeEventListener.call(this, prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      _removeEventListener.call(this, eventName, handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Fires event with an optional options object\n\t   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias trigger\n\t   * @param {String} eventName Event name to fire\n\t   * @param {Object} [options] Options object\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function fire(eventName, options) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    var listenersForEvent = this.__eventListeners[eventName];\n\t    if (!listenersForEvent) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n\t      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n\t    }\n\t    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n\t      return value !== false;\n\t    });\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.Observable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n\t   * @see {@link http://fabricjs.com/events|Events demo}\n\t   */\n\t  fabric.Observable = {\n\t    observe: observe,\n\t    stopObserving: stopObserving,\n\t    fire: fire,\n\t\n\t    on: observe,\n\t    off: stopObserving,\n\t    trigger: fire\n\t  };\n\t})();\n\t\n\t\n\t/**\n\t * @namespace fabric.Collection\n\t */\n\tfabric.Collection = {\n\t\n\t  _objects: [],\n\t\n\t  /**\n\t   * Adds objects to collection, Canvas or Group, then renders canvas\n\t   * (if `renderOnAddRemove` is not `false`).\n\t   * in case of Group no changes to bounding box are made.\n\t   * Objects should be instances of (or inherit from) fabric.Object\n\t   * Use of this function is highly discouraged for groups.\n\t   * you can add a bunch of objects with the add method but then you NEED\n\t   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  add: function () {\n\t    this._objects.push.apply(this._objects, arguments);\n\t    if (this._onObjectAdded) {\n\t      for (var i = 0, length = arguments.length; i < length; i++) {\n\t        this._onObjectAdded(arguments[i]);\n\t      }\n\t    }\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * An object should be an instance of (or inherit from) fabric.Object\n\t   * Use of this function is highly discouraged for groups.\n\t   * you can add a bunch of objects with the insertAt method but then you NEED\n\t   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n\t   * @param {Object} object Object to insert\n\t   * @param {Number} index Index to insert object at\n\t   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  insertAt: function (object, index, nonSplicing) {\n\t    var objects = this.getObjects();\n\t    if (nonSplicing) {\n\t      objects[index] = object;\n\t    }\n\t    else {\n\t      objects.splice(index, 0, object);\n\t    }\n\t    this._onObjectAdded && this._onObjectAdded(object);\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  remove: function() {\n\t    var objects = this.getObjects(),\n\t        index, somethingRemoved = false;\n\t\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      index = objects.indexOf(arguments[i]);\n\t\n\t      // only call onObjectRemoved if an object was actually removed\n\t      if (index !== -1) {\n\t        somethingRemoved = true;\n\t        objects.splice(index, 1);\n\t        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n\t      }\n\t    }\n\t\n\t    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Executes given function for each object in this group\n\t   * @param {Function} callback\n\t   *                   Callback invoked with current object as first argument,\n\t   *                   index - as second and an array of all objects - as third.\n\t   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n\t   *                   when no `context` argument is given\n\t   *\n\t   * @param {Object} context Context (aka thisObject)\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  forEachObject: function(callback, context) {\n\t    var objects = this.getObjects();\n\t    for (var i = 0, len = objects.length; i < len; i++) {\n\t      callback.call(context, objects[i], i, objects);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Returns an array of children objects of this instance\n\t   * Type parameter introduced in 1.3.10\n\t   * @param {String} [type] When specified, only objects of this type are returned\n\t   * @return {Array}\n\t   */\n\t  getObjects: function(type) {\n\t    if (typeof type === 'undefined') {\n\t      return this._objects;\n\t    }\n\t    return this._objects.filter(function(o) {\n\t      return o.type === type;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Returns object at specified index\n\t   * @param {Number} index\n\t   * @return {Self} thisArg\n\t   */\n\t  item: function (index) {\n\t    return this.getObjects()[index];\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains no objects\n\t   * @return {Boolean} true if collection is empty\n\t   */\n\t  isEmpty: function () {\n\t    return this.getObjects().length === 0;\n\t  },\n\t\n\t  /**\n\t   * Returns a size of a collection (i.e: length of an array containing its objects)\n\t   * @return {Number} Collection size\n\t   */\n\t  size: function() {\n\t    return this.getObjects().length;\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains an object\n\t   * @param {Object} object Object to check against\n\t   * @return {Boolean} `true` if collection contains an object\n\t   */\n\t  contains: function(object) {\n\t    return this.getObjects().indexOf(object) > -1;\n\t  },\n\t\n\t  /**\n\t   * Returns number representation of a collection complexity\n\t   * @return {Number} complexity\n\t   */\n\t  complexity: function () {\n\t    return this.getObjects().reduce(function (memo, current) {\n\t      memo += current.complexity ? current.complexity() : 0;\n\t      return memo;\n\t    }, 0);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * @namespace fabric.CommonMethods\n\t */\n\tfabric.CommonMethods = {\n\t\n\t  /**\n\t   * Sets object's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  _setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this.set(prop, options[prop]);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [filler] Options object\n\t   * @param {String} [property] property to set the Gradient to\n\t   */\n\t  _initGradient: function(filler, property) {\n\t    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n\t      this.set(property, new fabric.Gradient(filler));\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [filler] Options object\n\t   * @param {String} [property] property to set the Pattern to\n\t   * @param {Function} [callback] callback to invoke after pattern load\n\t   */\n\t  _initPattern: function(filler, property, callback) {\n\t    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n\t      this.set(property, new fabric.Pattern(filler, callback));\n\t    }\n\t    else {\n\t      callback && callback();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [options] Options object\n\t   */\n\t  _initClipping: function(options) {\n\t    if (!options.clipTo || typeof options.clipTo !== 'string') {\n\t      return;\n\t    }\n\t\n\t    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\t    if (typeof functionBody !== 'undefined') {\n\t      this.clipTo = new Function('ctx', functionBody);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _setObject: function(obj) {\n\t    for (var prop in obj) {\n\t      this._set(prop, obj[prop]);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n\t   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n\t   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  set: function(key, value) {\n\t    if (typeof key === 'object') {\n\t      this._setObject(key);\n\t    }\n\t    else {\n\t      if (typeof value === 'function' && key !== 'clipTo') {\n\t        this._set(key, value(this.get(key)));\n\t      }\n\t      else {\n\t        this._set(key, value);\n\t      }\n\t    }\n\t    return this;\n\t  },\n\t\n\t  _set: function(key, value) {\n\t    this[key] = value;\n\t  },\n\t\n\t  /**\n\t   * Toggles specified property from `true` to `false` or from `false` to `true`\n\t   * @param {String} property Property to toggle\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  toggle: function(property) {\n\t    var value = this.get(property);\n\t    if (typeof value === 'boolean') {\n\t      this.set(property, !value);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Basic getter\n\t   * @param {String} property Property name\n\t   * @return {*} value of a property\n\t   */\n\t  get: function(property) {\n\t    return this[property];\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  var sqrt = Math.sqrt,\n\t      atan2 = Math.atan2,\n\t      pow = Math.pow,\n\t      abs = Math.abs,\n\t      PiBy180 = Math.PI / 180;\n\t\n\t  /**\n\t   * @namespace fabric.util\n\t   */\n\t  fabric.util = {\n\t\n\t    /**\n\t     * Removes value from an array.\n\t     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} array\n\t     * @param {*} value\n\t     * @return {Array} original array\n\t     */\n\t    removeFromArray: function(array, value) {\n\t      var idx = array.indexOf(value);\n\t      if (idx !== -1) {\n\t        array.splice(idx, 1);\n\t      }\n\t      return array;\n\t    },\n\t\n\t    /**\n\t     * Returns random number between 2 specified ones.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} min lower limit\n\t     * @param {Number} max upper limit\n\t     * @return {Number} random value (between min and max)\n\t     */\n\t    getRandomInt: function(min, max) {\n\t      return Math.floor(Math.random() * (max - min + 1)) + min;\n\t    },\n\t\n\t    /**\n\t     * Transforms degrees to radians.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} degrees value in degrees\n\t     * @return {Number} value in radians\n\t     */\n\t    degreesToRadians: function(degrees) {\n\t      return degrees * PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Transforms radians to degrees.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} radians value in radians\n\t     * @return {Number} value in degrees\n\t     */\n\t    radiansToDegrees: function(radians) {\n\t      return radians / PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Rotates `point` around `origin` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Point} point The point to rotate\n\t     * @param {fabric.Point} origin The origin of the rotation\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {fabric.Point} The new rotated point\n\t     */\n\t    rotatePoint: function(point, origin, radians) {\n\t      point.subtractEquals(origin);\n\t      var v = fabric.util.rotateVector(point, radians);\n\t      return new fabric.Point(v.x, v.y).addEquals(origin);\n\t    },\n\t\n\t    /**\n\t     * Rotates `vector` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} vector The vector to rotate (x and y)\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {Object} The new rotated point\n\t     */\n\t    rotateVector: function(vector, radians) {\n\t      var sin = Math.sin(radians),\n\t          cos = Math.cos(radians),\n\t          rx = vector.x * cos - vector.y * sin,\n\t          ry = vector.x * sin + vector.y * cos;\n\t      return {\n\t        x: rx,\n\t        y: ry\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Apply transform t to point p\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {fabric.Point} p The point to transform\n\t     * @param  {Array} t The transform\n\t     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n\t     * @return {fabric.Point} The transformed point\n\t     */\n\t    transformPoint: function(p, t, ignoreOffset) {\n\t      if (ignoreOffset) {\n\t        return new fabric.Point(\n\t          t[0] * p.x + t[2] * p.y,\n\t          t[1] * p.x + t[3] * p.y\n\t        );\n\t      }\n\t      return new fabric.Point(\n\t        t[0] * p.x + t[2] * p.y + t[4],\n\t        t[1] * p.x + t[3] * p.y + t[5]\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n\t     * @param {Array} points 4 points array\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    makeBoundingBoxFromPoints: function(points) {\n\t      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n\t          minX = fabric.util.array.min(xPoints),\n\t          maxX = fabric.util.array.max(xPoints),\n\t          width = Math.abs(minX - maxX),\n\t          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n\t          minY = fabric.util.array.min(yPoints),\n\t          maxY = fabric.util.array.max(yPoints),\n\t          height = Math.abs(minY - maxY);\n\t\n\t      return {\n\t        left: minX,\n\t        top: minY,\n\t        width: width,\n\t        height: height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Invert transformation t\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} t The transform\n\t     * @return {Array} The inverted transform\n\t     */\n\t    invertTransform: function(t) {\n\t      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n\t          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n\t          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n\t      r[4] = -o.x;\n\t      r[5] = -o.y;\n\t      return r;\n\t    },\n\t\n\t    /**\n\t     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number|String} number number to operate on\n\t     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n\t     * @return {Number}\n\t     */\n\t    toFixed: function(number, fractionDigits) {\n\t      return parseFloat(Number(number).toFixed(fractionDigits));\n\t    },\n\t\n\t    /**\n\t     * Converts from attribute value to pixel value if applicable.\n\t     * Returns converted pixels or original value not converted.\n\t     * @param {Number|String} value number to operate on\n\t     * @param {Number} fontSize\n\t     * @return {Number|String}\n\t     */\n\t    parseUnit: function(value, fontSize) {\n\t      var unit = /\\D{0,2}$/.exec(value),\n\t          number = parseFloat(value);\n\t      if (!fontSize) {\n\t        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t      }\n\t      switch (unit[0]) {\n\t        case 'mm':\n\t          return number * fabric.DPI / 25.4;\n\t\n\t        case 'cm':\n\t          return number * fabric.DPI / 2.54;\n\t\n\t        case 'in':\n\t          return number * fabric.DPI;\n\t\n\t        case 'pt':\n\t          return number * fabric.DPI / 72; // or * 4 / 3\n\t\n\t        case 'pc':\n\t          return number * fabric.DPI / 72 * 12; // or * 16\n\t\n\t        case 'em':\n\t          return number * fontSize;\n\t\n\t        default:\n\t          return number;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Function which always returns `false`.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {Boolean}\n\t     */\n\t    falseFunction: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Returns klass \"Class\" object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} type Type of object (eg. 'circle')\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @return {Object} klass \"Class\"\n\t     */\n\t    getKlass: function(type, namespace) {\n\t      // capitalize first letter only\n\t      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n\t      return fabric.util.resolveNamespace(namespace)[type];\n\t    },\n\t\n\t    /**\n\t     * Returns object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n\t     * @return {Object} Object for given namespace (default fabric)\n\t     */\n\t    resolveNamespace: function(namespace) {\n\t      if (!namespace) {\n\t        return fabric;\n\t      }\n\t\n\t      var parts = namespace.split('.'),\n\t          len = parts.length, i,\n\t          obj = global || fabric.window;\n\t\n\t      for (i = 0; i < len; ++i) {\n\t        obj = obj[parts[i]];\n\t      }\n\t\n\t      return obj;\n\t    },\n\t\n\t    /**\n\t     * Loads image element from given url and passes it to a callback\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL representing an image\n\t     * @param {Function} callback Callback; invoked with loaded image\n\t     * @param {*} [context] Context to invoke callback in\n\t     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n\t     */\n\t    loadImage: function(url, callback, context, crossOrigin) {\n\t      if (!url) {\n\t        callback && callback.call(context, url);\n\t        return;\n\t      }\n\t\n\t      var img = fabric.util.createImage();\n\t\n\t      /** @ignore */\n\t      img.onload = function () {\n\t        callback && callback.call(context, img);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      /** @ignore */\n\t      img.onerror = function() {\n\t        fabric.log('Error loading ' + img.src);\n\t        callback && callback.call(context, null, true);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      // data-urls appear to be buggy with crossOrigin\n\t      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n\t      // see https://code.google.com/p/chromium/issues/detail?id=315152\n\t      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\t      if (url.indexOf('data') !== 0 && crossOrigin) {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t    },\n\t\n\t    /**\n\t     * Creates corresponding fabric instances from their object representations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenObjects: function(objects, callback, namespace, reviver) {\n\t      objects = objects || [];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedObjects === numTotalObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }\n\t      }\n\t\n\t      var enlivenedObjects = [],\n\t          numLoadedObjects = 0,\n\t          numTotalObjects = objects.length,\n\t          forceAsync = true;\n\t\n\t      if (!numTotalObjects) {\n\t        callback && callback(enlivenedObjects);\n\t        return;\n\t      }\n\t\n\t      objects.forEach(function (o, index) {\n\t        // if sparse array\n\t        if (!o || !o.type) {\n\t          onLoaded();\n\t          return;\n\t        }\n\t        var klass = fabric.util.getKlass(o.type, namespace);\n\t        klass.fromObject(o, function (obj, error) {\n\t          error || (enlivenedObjects[index] = obj);\n\t          reviver && reviver(o, obj, error);\n\t          onLoaded();\n\t        }, forceAsync);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Create and wait for loading of patterns\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenPatterns: function(patterns, callback) {\n\t      patterns = patterns || [];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedPatterns === numPatterns) {\n\t          callback && callback(enlivenedPatterns);\n\t        }\n\t      }\n\t\n\t      var enlivenedPatterns = [],\n\t          numLoadedPatterns = 0,\n\t          numPatterns = patterns.length;\n\t\n\t      if (!numPatterns) {\n\t        callback && callback(enlivenedPatterns);\n\t        return;\n\t      }\n\t\n\t      patterns.forEach(function (p, index) {\n\t        if (p && p.source) {\n\t          new fabric.Pattern(p, function(pattern) {\n\t            enlivenedPatterns[index] = pattern;\n\t            onLoaded();\n\t          });\n\t        }\n\t        else {\n\t          enlivenedPatterns[index] = p;\n\t          onLoaded();\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Groups SVG elements (usually those retrieved from SVG document)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} elements SVG elements to group\n\t     * @param {Object} [options] Options object\n\t     * @param {String} path Value to set sourcePath to\n\t     * @return {fabric.Object|fabric.PathGroup}\n\t     */\n\t    groupSVGElements: function(elements, options, path) {\n\t      var object;\n\t\n\t      object = new fabric.PathGroup(elements, options);\n\t\n\t      if (typeof path !== 'undefined') {\n\t        object.sourcePath = path;\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Populates an object with properties of another object\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} source Source object\n\t     * @param {Object} destination Destination object\n\t     * @return {Array} properties Propertie names to include\n\t     */\n\t    populateWithProperties: function(source, destination, properties) {\n\t      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n\t        for (var i = 0, len = properties.length; i < len; i++) {\n\t          if (properties[i] in source) {\n\t            destination[properties[i]] = source[properties[i]];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a dashed line between two points\n\t     *\n\t     * This method is used to draw dashed line around selection area.\n\t     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x  start x coordinate\n\t     * @param {Number} y start y coordinate\n\t     * @param {Number} x2 end x coordinate\n\t     * @param {Number} y2 end y coordinate\n\t     * @param {Array} da dash array pattern\n\t     */\n\t    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n\t      var dx = x2 - x,\n\t          dy = y2 - y,\n\t          len = sqrt(dx * dx + dy * dy),\n\t          rot = atan2(dy, dx),\n\t          dc = da.length,\n\t          di = 0,\n\t          draw = true;\n\t\n\t      ctx.save();\n\t      ctx.translate(x, y);\n\t      ctx.moveTo(0, 0);\n\t      ctx.rotate(rot);\n\t\n\t      x = 0;\n\t      while (len > x) {\n\t        x += da[di++ % dc];\n\t        if (x > len) {\n\t          x = len;\n\t        }\n\t        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n\t        draw = !draw;\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Creates canvas element and initializes it via excanvas if necessary\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n\t     * when not given, element is created implicitly\n\t     * @return {CanvasElement} initialized canvas element\n\t     */\n\t    createCanvasElement: function(canvasEl) {\n\t      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n\t      /* eslint-disable camelcase */\n\t      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n\t        G_vmlCanvasManager.initElement(canvasEl);\n\t      }\n\t      /* eslint-enable camelcase */\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * Creates image element (works on client and node)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {HTMLImageElement} HTML image element\n\t     */\n\t    createImage: function() {\n\t      return fabric.isLikelyNode\n\t        ? new (__webpack_require__(14).Image)()\n\t        : fabric.document.createElement('img');\n\t    },\n\t\n\t    /**\n\t     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} klass \"Class\" to create accessors for\n\t     */\n\t    createAccessors: function(klass) {\n\t      var proto = klass.prototype, i, propName,\n\t          capitalizedPropName, setterName, getterName;\n\t\n\t      for (i = proto.stateProperties.length; i--; ) {\n\t\n\t        propName = proto.stateProperties[i];\n\t        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n\t        setterName = 'set' + capitalizedPropName;\n\t        getterName = 'get' + capitalizedPropName;\n\t\n\t        // using `new Function` for better introspection\n\t        if (!proto[getterName]) {\n\t          proto[getterName] = (function(property) {\n\t            return new Function('return this.get(\"' + property + '\")');\n\t          })(propName);\n\t        }\n\t        if (!proto[setterName]) {\n\t          proto[setterName] = (function(property) {\n\t            return new Function('value', 'return this.set(\"' + property + '\", value)');\n\t          })(propName);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Object} receiver Object implementing `clipTo` method\n\t     * @param {CanvasRenderingContext2D} ctx Context to clip\n\t     */\n\t    clipContext: function(receiver, ctx) {\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      receiver.clipTo(ctx);\n\t      ctx.clip();\n\t    },\n\t\n\t    /**\n\t     * Multiply matrix A by matrix B to nest transformations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a First transformMatrix\n\t     * @param  {Array} b Second transformMatrix\n\t     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n\t     * @return {Array} The product of the two transform matrices\n\t     */\n\t    multiplyTransformMatrices: function(a, b, is2x2) {\n\t      // Matrix multiply a * b\n\t      return [\n\t        a[0] * b[0] + a[2] * b[1],\n\t        a[1] * b[0] + a[3] * b[1],\n\t        a[0] * b[2] + a[2] * b[3],\n\t        a[1] * b[2] + a[3] * b[3],\n\t        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n\t        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Decomposes standard 2x2 matrix into transform componentes\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a transformMatrix\n\t     * @return {Object} Components of transform\n\t     */\n\t    qrDecompose: function(a) {\n\t      var angle = atan2(a[1], a[0]),\n\t          denom = pow(a[0], 2) + pow(a[1], 2),\n\t          scaleX = sqrt(denom),\n\t          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n\t          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n\t      return {\n\t        angle: angle  / PiBy180,\n\t        scaleX: scaleX,\n\t        scaleY: scaleY,\n\t        skewX: skewX / PiBy180,\n\t        skewY: 0,\n\t        translateX: a[4],\n\t        translateY: a[5]\n\t      };\n\t    },\n\t\n\t    customTransformMatrix: function(scaleX, scaleY, skewX) {\n\t      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n\t          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n\t      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n\t    },\n\t\n\t    resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.flipX = false;\n\t      target.flipY = false;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of function body\n\t     * @param {Function} fn Function to get body of\n\t     * @return {String} Function body\n\t     */\n\t    getFunctionBody: function(fn) {\n\t      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n\t    },\n\t\n\t    /**\n\t     * Returns true if context has transparent pixel\n\t     * at specified location (taking tolerance into account)\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x x coordinate\n\t     * @param {Number} y y coordinate\n\t     * @param {Number} tolerance Tolerance\n\t     */\n\t    isTransparent: function(ctx, x, y, tolerance) {\n\t\n\t      // If tolerance is > 0 adjust start coords to take into account.\n\t      // If moves off Canvas fix to 0\n\t      if (tolerance > 0) {\n\t        if (x > tolerance) {\n\t          x -= tolerance;\n\t        }\n\t        else {\n\t          x = 0;\n\t        }\n\t        if (y > tolerance) {\n\t          y -= tolerance;\n\t        }\n\t        else {\n\t          y = 0;\n\t        }\n\t      }\n\t\n\t      var _isTransparent = true, i, temp,\n\t          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n\t          l = imageData.data.length;\n\t\n\t      // Split image data - for tolerance > 1, pixelDataSize = 4;\n\t      for (i = 3; i < l; i += 4) {\n\t        temp = imageData.data[i];\n\t        _isTransparent = temp <= 0;\n\t        if (_isTransparent === false) {\n\t          break; // Stop if colour found\n\t        }\n\t      }\n\t\n\t      imageData = null;\n\t\n\t      return _isTransparent;\n\t    },\n\t\n\t    /**\n\t     * Parse preserveAspectRatio attribute from element\n\t     * @param {string} attribute to be parsed\n\t     * @return {Object} an object containing align and meetOrSlice attribute\n\t     */\n\t    parsePreserveAspectRatioAttribute: function(attribute) {\n\t      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n\t          aspectRatioAttrs = attribute.split(' '), align;\n\t\n\t      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n\t        meetOrSlice = aspectRatioAttrs.pop();\n\t        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n\t          align = meetOrSlice;\n\t          meetOrSlice = 'meet';\n\t        }\n\t        else if (aspectRatioAttrs.length) {\n\t          align = aspectRatioAttrs.pop();\n\t        }\n\t      }\n\t      //divide align in alignX and alignY\n\t      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n\t      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n\t      return {\n\t        meetOrSlice: meetOrSlice,\n\t        alignX: alignX,\n\t        alignY: alignY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Clear char widths cache for a font family.\n\t     * @memberOf fabric.util\n\t     * @param {String} [fontFamily] font family to clear\n\t     */\n\t    clearFabricFontCache: function(fontFamily) {\n\t      if (!fontFamily) {\n\t        fabric.charWidthsCache = { };\n\t      }\n\t      else if (fabric.charWidthsCache[fontFamily]) {\n\t        delete fabric.charWidthsCache[fontFamily];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Clear char widths cache for a font family.\n\t     * @memberOf fabric.util\n\t     * @param {Number} ar aspect ratio\n\t     * @param {Number} maximumArea Maximum area you want to achieve\n\t     * @param {Number} maximumSide biggest side allowed\n\t     * @return {Object.x} Limited dimensions by X\n\t     * @return {Object.y} Limited dimensions by Y\n\t     */\n\t    limitDimsByArea: function(ar, maximumArea) {\n\t      var roughWidth = Math.sqrt(maximumArea * ar),\n\t          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n\t      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n\t    },\n\t\n\t    capValue: function(min, value, max) {\n\t      return Math.max(min, Math.min(value, max));\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var arcToSegmentsCache = { },\n\t      segmentToBezierCache = { },\n\t      boundsOfCurveCache = { },\n\t      _join = Array.prototype.join;\n\t\n\t  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n\t   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n\t   * http://mozilla.org/MPL/2.0/\n\t   */\n\t  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n\t    var argsString = _join.call(arguments);\n\t    if (arcToSegmentsCache[argsString]) {\n\t      return arcToSegmentsCache[argsString];\n\t    }\n\t\n\t    var PI = Math.PI, th = rotateX * PI / 180,\n\t        sinTh = Math.sin(th),\n\t        cosTh = Math.cos(th),\n\t        fromX = 0, fromY = 0;\n\t\n\t    rx = Math.abs(rx);\n\t    ry = Math.abs(ry);\n\t\n\t    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n\t        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n\t        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n\t        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n\t        root = 0;\n\t\n\t    if (pl < 0) {\n\t      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n\t      rx *= s;\n\t      ry *= s;\n\t    }\n\t    else {\n\t      root = (large === sweep ? -1.0 : 1.0) *\n\t              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n\t    }\n\t\n\t    var cx = root * rx * py / ry,\n\t        cy = -root * ry * px / rx,\n\t        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n\t        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n\t        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n\t        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\t\n\t    if (sweep === 0 && dtheta > 0) {\n\t      dtheta -= 2 * PI;\n\t    }\n\t    else if (sweep === 1 && dtheta < 0) {\n\t      dtheta += 2 * PI;\n\t    }\n\t\n\t    // Convert into cubic bezier segments <= 90deg\n\t    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n\t        result = [], mDelta = dtheta / segments,\n\t        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n\t        th3 = mTheta + mDelta;\n\t\n\t    for (var i = 0; i < segments; i++) {\n\t      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n\t      fromX = result[i][4];\n\t      fromY = result[i][5];\n\t      mTheta = th3;\n\t      th3 += mDelta;\n\t    }\n\t    arcToSegmentsCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n\t    var argsString2 = _join.call(arguments);\n\t    if (segmentToBezierCache[argsString2]) {\n\t      return segmentToBezierCache[argsString2];\n\t    }\n\t\n\t    var costh2 = Math.cos(th2),\n\t        sinth2 = Math.sin(th2),\n\t        costh3 = Math.cos(th3),\n\t        sinth3 = Math.sin(th3),\n\t        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n\t        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n\t        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n\t        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n\t        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n\t        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\t\n\t    segmentToBezierCache[argsString2] = [\n\t      cp1X, cp1Y,\n\t      cp2X, cp2Y,\n\t      toX, toY\n\t    ];\n\t    return segmentToBezierCache[argsString2];\n\t  }\n\t\n\t  /*\n\t   * Private\n\t   */\n\t  function calcVectorAngle(ux, uy, vx, vy) {\n\t    var ta = Math.atan2(uy, ux),\n\t        tb = Math.atan2(vy, vx);\n\t    if (tb >= ta) {\n\t      return tb - ta;\n\t    }\n\t    else {\n\t      return 2 * Math.PI - (ta - tb);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Draws arc\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {Number} fx\n\t   * @param {Number} fy\n\t   * @param {Array} coords\n\t   */\n\t  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n\t    var rx = coords[0],\n\t        ry = coords[1],\n\t        rot = coords[2],\n\t        large = coords[3],\n\t        sweep = coords[4],\n\t        tx = coords[5],\n\t        ty = coords[6],\n\t        segs = [[], [], [], []],\n\t        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segsNorm.length; i < len; i++) {\n\t      segs[i][0] = segsNorm[i][0] + fx;\n\t      segs[i][1] = segsNorm[i][1] + fy;\n\t      segs[i][2] = segsNorm[i][2] + fx;\n\t      segs[i][3] = segsNorm[i][3] + fy;\n\t      segs[i][4] = segsNorm[i][4] + fx;\n\t      segs[i][5] = segsNorm[i][5] + fy;\n\t      ctx.bezierCurveTo.apply(ctx, segs[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a elliptic-arc\n\t   * @param {Number} fx start point of arc\n\t   * @param {Number} fy\n\t   * @param {Number} rx horizontal radius\n\t   * @param {Number} ry vertical radius\n\t   * @param {Number} rot angle of horizontal axe\n\t   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n\t   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n\t   * @param {Number} tx end point of arc\n\t   * @param {Number} ty\n\t   */\n\t  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\t\n\t    var fromX = 0, fromY = 0, bound, bounds = [],\n\t        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segs.length; i < len; i++) {\n\t      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n\t      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n\t      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n\t      fromX = segs[i][4];\n\t      fromY = segs[i][5];\n\t    }\n\t    return bounds;\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a beziercurve\n\t   * @param {Number} x0 starting point\n\t   * @param {Number} y0\n\t   * @param {Number} x1 first control point\n\t   * @param {Number} y1\n\t   * @param {Number} x2 secondo control point\n\t   * @param {Number} y2\n\t   * @param {Number} x3 end of beizer\n\t   * @param {Number} y3\n\t   */\n\t  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\t  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var argsString = _join.call(arguments);\n\t    if (boundsOfCurveCache[argsString]) {\n\t      return boundsOfCurveCache[argsString];\n\t    }\n\t\n\t    var sqrt = Math.sqrt,\n\t        min = Math.min, max = Math.max,\n\t        abs = Math.abs, tvalues = [],\n\t        bounds = [[], []],\n\t        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t\n\t    b = 6 * x0 - 12 * x1 + 6 * x2;\n\t    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t    c = 3 * x1 - 3 * x0;\n\t\n\t    for (var i = 0; i < 2; ++i) {\n\t      if (i > 0) {\n\t        b = 6 * y0 - 12 * y1 + 6 * y2;\n\t        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t        c = 3 * y1 - 3 * y0;\n\t      }\n\t\n\t      if (abs(a) < 1e-12) {\n\t        if (abs(b) < 1e-12) {\n\t          continue;\n\t        }\n\t        t = -c / b;\n\t        if (0 < t && t < 1) {\n\t          tvalues.push(t);\n\t        }\n\t        continue;\n\t      }\n\t      b2ac = b * b - 4 * c * a;\n\t      if (b2ac < 0) {\n\t        continue;\n\t      }\n\t      sqrtb2ac = sqrt(b2ac);\n\t      t1 = (-b + sqrtb2ac) / (2 * a);\n\t      if (0 < t1 && t1 < 1) {\n\t        tvalues.push(t1);\n\t      }\n\t      t2 = (-b - sqrtb2ac) / (2 * a);\n\t      if (0 < t2 && t2 < 1) {\n\t        tvalues.push(t2);\n\t      }\n\t    }\n\t\n\t    var x, y, j = tvalues.length, jlen = j, mt;\n\t    while (j--) {\n\t      t = tvalues[j];\n\t      mt = 1 - t;\n\t      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t      bounds[0][j] = x;\n\t\n\t      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t      bounds[1][j] = y;\n\t    }\n\t\n\t    bounds[0][jlen] = x0;\n\t    bounds[1][jlen] = y0;\n\t    bounds[0][jlen + 1] = x3;\n\t    bounds[1][jlen + 1] = y3;\n\t    var result = [\n\t      {\n\t        x: min.apply(null, bounds[0]),\n\t        y: min.apply(null, bounds[1])\n\t      },\n\t      {\n\t        x: max.apply(null, bounds[0]),\n\t        y: max.apply(null, bounds[1])\n\t      }\n\t    ];\n\t    boundsOfCurveCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t\n\t  if (!Array.prototype.indexOf) {\n\t    /**\n\t     * Finds index of an element in an array\n\t     * @param {*} searchElement\n\t     * @return {Number}\n\t     */\n\t    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t      if (this === void 0 || this === null) {\n\t        throw new TypeError();\n\t      }\n\t      var t = Object(this), len = t.length >>> 0;\n\t      if (len === 0) {\n\t        return -1;\n\t      }\n\t      var n = 0;\n\t      if (arguments.length > 0) {\n\t        n = Number(arguments[1]);\n\t        if (n !== n) { // shortcut for verifying if it's NaN\n\t          n = 0;\n\t        }\n\t        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n\t          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t        }\n\t      }\n\t      if (n >= len) {\n\t        return -1;\n\t      }\n\t      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t      for (; k < len; k++) {\n\t        if (k in t && t[k] === searchElement) {\n\t          return k;\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.forEach) {\n\t    /**\n\t     * Iterates an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.forEach = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.map) {\n\t    /**\n\t     * Returns a result of iterating over an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.map = function(fn, context) {\n\t      var result = [];\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          result[i] = fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.every) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for all elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.every = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && !fn.call(context, this[i], i, this)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.some) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for at least one element in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.some = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && fn.call(context, this[i], i, this)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.filter) {\n\t    /**\n\t     * Returns the result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.filter = function(fn, context) {\n\t      var result = [], val;\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          val = this[i]; // in case fn mutates this\n\t          if (fn.call(context, val, i, this)) {\n\t            result.push(val);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.reduce) {\n\t    /**\n\t     * Returns \"folded\" (reduced) result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @return {*}\n\t     */\n\t    Array.prototype.reduce = function(fn /*, initial*/) {\n\t      var len = this.length >>> 0,\n\t          i = 0,\n\t          rv;\n\t\n\t      if (arguments.length > 1) {\n\t        rv = arguments[1];\n\t      }\n\t      else {\n\t        do {\n\t          if (i in this) {\n\t            rv = this[i++];\n\t            break;\n\t          }\n\t          // if array contains no values, no initial value to return\n\t          if (++i >= len) {\n\t            throw new TypeError();\n\t          }\n\t        }\n\t        while (true);\n\t      }\n\t      for (; i < len; i++) {\n\t        if (i in this) {\n\t          rv = fn.call(null, rv, this[i], i, this);\n\t        }\n\t      }\n\t      return rv;\n\t    };\n\t  }\n\t\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Invokes method on all items in a given array\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} method Name of a method to invoke\n\t   * @return {Array}\n\t   */\n\t  function invoke(array, method) {\n\t    var args = slice.call(arguments, 2), result = [];\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Finds maximum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function max(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 >= value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Finds minimum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function min(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 < value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function fill(array, value) {\n\t    var k = array.length;\n\t    while (k--) {\n\t      array[k] = value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function find(array, byProperty, condition) {\n\t    if (!array || array.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var i = array.length - 1,\n\t        result = byProperty ? array[i][byProperty] : array[i];\n\t    if (byProperty) {\n\t      while (i--) {\n\t        if (condition(array[i][byProperty], result)) {\n\t          result = array[i][byProperty];\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      while (i--) {\n\t        if (condition(array[i], result)) {\n\t          result = array[i];\n\t        }\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.util.array\n\t   */\n\t  fabric.util.array = {\n\t    fill: fill,\n\t    invoke: invoke,\n\t    min: min,\n\t    max: max\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t  /**\n\t   * Copies all enumerable properties of one js object to another\n\t   * Does not clone or extend fabric.Object subclasses.\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} destination Where to copy to\n\t   * @param {Object} source Where to copy from\n\t   * @return {Object}\n\t   */\n\t\n\t  function extend(destination, source, deep) {\n\t    // JScript DontEnum bug is not taken care of\n\t    // the deep clone is for internal use, is not meant to avoid\n\t    // javascript traps or cloning html element or self referenced objects.\n\t    if (deep) {\n\t      if (!fabric.isLikelyNode && source instanceof Element) {\n\t        // avoid cloning deep images, canvases,\n\t        destination = source;\n\t      }\n\t      else if (source instanceof Array) {\n\t        destination = [];\n\t        for (var i = 0, len = source.length; i < len; i++) {\n\t          destination[i] = extend({ }, source[i], deep);\n\t        }\n\t      }\n\t      else if (source && typeof source === 'object') {\n\t        for (var property in source) {\n\t          if (source.hasOwnProperty(property)) {\n\t            destination[property] = extend({ }, source[property], deep);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        // this sounds odd for an extend but is ok for recursive use\n\t        destination = source;\n\t      }\n\t    }\n\t    else {\n\t      for (var property in source) {\n\t        destination[property] = source[property];\n\t      }\n\t    }\n\t    return destination;\n\t  }\n\t\n\t  /**\n\t   * Creates an empty object and copies all enumerable properties of another object to it\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} object Object to clone\n\t   * @return {Object}\n\t   */\n\t  function clone(object, deep) {\n\t    return extend({ }, object, deep);\n\t  }\n\t\n\t  /** @namespace fabric.util.object */\n\t  fabric.util.object = {\n\t    extend: extend,\n\t    clone: clone\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t  if (!String.prototype.trim) {\n\t    /**\n\t     * Trims a string (removing whitespace from the beginning and the end)\n\t     * @function external:String#trim\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n\t     */\n\t    String.prototype.trim = function () {\n\t      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n\t      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n\t    };\n\t  }\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Camelizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to camelize\n\t   * @return {String} Camelized version of a string\n\t   */\n\t  function camelize(string) {\n\t    return string.replace(/-+(.)?/g, function(match, character) {\n\t      return character ? character.toUpperCase() : '';\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Capitalizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to capitalize\n\t   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n\t   * and other letters stay untouched, if false first letter is capitalized\n\t   * and other letters are converted to lowercase.\n\t   * @return {String} Capitalized version of a string\n\t   */\n\t  function capitalize(string, firstLetterOnly) {\n\t    return string.charAt(0).toUpperCase() +\n\t      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n\t  }\n\t\n\t  /**\n\t   * Escapes XML in a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to escape\n\t   * @return {String} Escaped version of a string\n\t   */\n\t  function escapeXml(string) {\n\t    return string.replace(/&/g, '&amp;')\n\t       .replace(/\"/g, '&quot;')\n\t       .replace(/'/g, '&apos;')\n\t       .replace(/</g, '&lt;')\n\t       .replace(/>/g, '&gt;');\n\t  }\n\t\n\t  /**\n\t   * String utilities\n\t   * @namespace fabric.util.string\n\t   */\n\t  fabric.util.string = {\n\t    camelize: camelize,\n\t    capitalize: capitalize,\n\t    escapeXml: escapeXml\n\t  };\n\t})();\n\t\n\t\n\t/* _ES5_COMPAT_START_ */\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice,\n\t      apply = Function.prototype.apply,\n\t      Dummy = function() { };\n\t\n\t  if (!Function.prototype.bind) {\n\t    /**\n\t     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n\t     * @param {Object} thisArg Object to bind function to\n\t     * @param {Any[]} Values to pass to a bound function\n\t     * @return {Function}\n\t     */\n\t    Function.prototype.bind = function(thisArg) {\n\t      var _this = this, args = slice.call(arguments, 1), bound;\n\t      if (args.length) {\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n\t        };\n\t      }\n\t      else {\n\t        /** @ignore */\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n\t        };\n\t      }\n\t      Dummy.prototype = this.prototype;\n\t      bound.prototype = new Dummy();\n\t\n\t      return bound;\n\t    };\n\t  }\n\t\n\t})();\n\t/* _ES5_COMPAT_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice, emptyFunction = function() { },\n\t\n\t      IS_DONTENUM_BUGGY = (function() {\n\t        for (var p in { toString: 1 }) {\n\t          if (p === 'toString') {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      })(),\n\t\n\t      /** @ignore */\n\t      addMethods = function(klass, source, parent) {\n\t        for (var property in source) {\n\t\n\t          if (property in klass.prototype &&\n\t              typeof klass.prototype[property] === 'function' &&\n\t              (source[property] + '').indexOf('callSuper') > -1) {\n\t\n\t            klass.prototype[property] = (function(property) {\n\t              return function() {\n\t\n\t                var superclass = this.constructor.superclass;\n\t                this.constructor.superclass = parent;\n\t                var returnValue = source[property].apply(this, arguments);\n\t                this.constructor.superclass = superclass;\n\t\n\t                if (property !== 'initialize') {\n\t                  return returnValue;\n\t                }\n\t              };\n\t            })(property);\n\t          }\n\t          else {\n\t            klass.prototype[property] = source[property];\n\t          }\n\t\n\t          if (IS_DONTENUM_BUGGY) {\n\t            if (source.toString !== Object.prototype.toString) {\n\t              klass.prototype.toString = source.toString;\n\t            }\n\t            if (source.valueOf !== Object.prototype.valueOf) {\n\t              klass.prototype.valueOf = source.valueOf;\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t  function Subclass() { }\n\t\n\t  function callSuper(methodName) {\n\t    var parentMethod = null,\n\t        _this = this;\n\t\n\t    // climb prototype chain to find method not equal to callee's method\n\t    while (_this.constructor.superclass) {\n\t      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n\t      if (_this[methodName] !== superClassMethod) {\n\t        parentMethod = superClassMethod;\n\t        break;\n\t      }\n\t      // eslint-disable-next-line\n\t      _this = _this.constructor.superclass.prototype;\n\t    }\n\t\n\t    if (!parentMethod) {\n\t      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n\t    }\n\t\n\t    return (arguments.length > 1)\n\t      ? parentMethod.apply(this, slice.call(arguments, 1))\n\t      : parentMethod.call(this);\n\t  }\n\t\n\t  /**\n\t   * Helper for creation of \"classes\".\n\t   * @memberOf fabric.util\n\t   * @param {Function} [parent] optional \"Class\" to inherit from\n\t   * @param {Object} [properties] Properties shared by all instances of this class\n\t   *                  (be careful modifying objects defined here as this would affect all instances)\n\t   */\n\t  function createClass() {\n\t    var parent = null,\n\t        properties = slice.call(arguments, 0);\n\t\n\t    if (typeof properties[0] === 'function') {\n\t      parent = properties.shift();\n\t    }\n\t    function klass() {\n\t      this.initialize.apply(this, arguments);\n\t    }\n\t\n\t    klass.superclass = parent;\n\t    klass.subclasses = [];\n\t\n\t    if (parent) {\n\t      Subclass.prototype = parent.prototype;\n\t      klass.prototype = new Subclass();\n\t      parent.subclasses.push(klass);\n\t    }\n\t    for (var i = 0, length = properties.length; i < length; i++) {\n\t      addMethods(klass, properties[i], parent);\n\t    }\n\t    if (!klass.prototype.initialize) {\n\t      klass.prototype.initialize = emptyFunction;\n\t    }\n\t    klass.prototype.constructor = klass;\n\t    klass.prototype.callSuper = callSuper;\n\t    return klass;\n\t  }\n\t\n\t  fabric.util.createClass = createClass;\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var unknown = 'unknown';\n\t\n\t  /* EVENT HANDLING */\n\t\n\t  function areHostMethods(object) {\n\t    var methodNames = Array.prototype.slice.call(arguments, 1),\n\t        t, i, len = methodNames.length;\n\t    for (i = 0; i < len; i++) {\n\t      t = typeof object[methodNames[i]];\n\t      if (!(/^(?:function|object|unknown)$/).test(t)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /** @ignore */\n\t  var getElement,\n\t      setElement,\n\t      getUniqueId = (function () {\n\t        var uid = 0;\n\t        return function (element) {\n\t          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n\t        };\n\t      })();\n\t\n\t  (function () {\n\t    var elements = { };\n\t    /** @ignore */\n\t    getElement = function (uid) {\n\t      return elements[uid];\n\t    };\n\t    /** @ignore */\n\t    setElement = function (uid, element) {\n\t      elements[uid] = element;\n\t    };\n\t  })();\n\t\n\t  function createListener(uid, handler) {\n\t    return {\n\t      handler: handler,\n\t      wrappedHandler: createWrappedHandler(uid, handler)\n\t    };\n\t  }\n\t\n\t  function createWrappedHandler(uid, handler) {\n\t    return function (e) {\n\t      handler.call(getElement(uid), e || fabric.window.event);\n\t    };\n\t  }\n\t\n\t  function createDispatcher(uid, eventName) {\n\t    return function (e) {\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          handlersForEvent[i].call(this, e || fabric.window.event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var shouldUseAddListenerRemoveListener = (\n\t        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n\t        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\t\n\t      shouldUseAttachEventDetachEvent = (\n\t        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n\t        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\t\n\t      // IE branch\n\t      listeners = { },\n\t\n\t      // DOM L0 branch\n\t      handlers = { },\n\t\n\t      addListener, removeListener;\n\t\n\t  if (shouldUseAddListenerRemoveListener) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler, options) {\n\t      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n\t      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler, options) {\n\t      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n\t    };\n\t  }\n\t\n\t  else if (shouldUseAttachEventDetachEvent) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      if (!element) {\n\t        return;\n\t      }\n\t      var uid = getUniqueId(element);\n\t      setElement(uid, element);\n\t      if (!listeners[uid]) {\n\t        listeners[uid] = { };\n\t      }\n\t      if (!listeners[uid][eventName]) {\n\t        listeners[uid][eventName] = [];\n\t\n\t      }\n\t      var listener = createListener(uid, handler);\n\t      listeners[uid][eventName].push(listener);\n\t      element.attachEvent('on' + eventName, listener.wrappedHandler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      if (!element) {\n\t        return;\n\t      }\n\t      var uid = getUniqueId(element), listener;\n\t      if (listeners[uid] && listeners[uid][eventName]) {\n\t        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n\t          listener = listeners[uid][eventName][i];\n\t          if (listener && listener.handler === handler) {\n\t            element.detachEvent('on' + eventName, listener.wrappedHandler);\n\t            listeners[uid][eventName][i] = null;\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t  else {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      if (!element) {\n\t        return;\n\t      }\n\t      var uid = getUniqueId(element);\n\t      if (!handlers[uid]) {\n\t        handlers[uid] = { };\n\t      }\n\t      if (!handlers[uid][eventName]) {\n\t        handlers[uid][eventName] = [];\n\t        var existingHandler = element['on' + eventName];\n\t        if (existingHandler) {\n\t          handlers[uid][eventName].push(existingHandler);\n\t        }\n\t        element['on' + eventName] = createDispatcher(uid, eventName);\n\t      }\n\t      handlers[uid][eventName].push(handler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      if (!element) {\n\t        return;\n\t      }\n\t      var uid = getUniqueId(element);\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          if (handlersForEvent[i] === handler) {\n\t            handlersForEvent.splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Adds an event listener to an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.addListener = addListener;\n\t\n\t  /**\n\t   * Removes an event listener from an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.removeListener = removeListener;\n\t\n\t  /**\n\t   * Cross-browser wrapper for getting event's coordinates\n\t   * @memberOf fabric.util\n\t   * @param {Event} event Event object\n\t   */\n\t  function getPointer(event) {\n\t    event || (event = fabric.window.event);\n\t\n\t    var element = event.target ||\n\t                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\t\n\t        scroll = fabric.util.getScrollLeftTop(element);\n\t\n\t    return {\n\t      x: pointerX(event) + scroll.left,\n\t      y: pointerY(event) + scroll.top\n\t    };\n\t  }\n\t\n\t  var pointerX = function(event) {\n\t    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n\t    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n\t    // need to investigate later\n\t        return (typeof event.clientX !== unknown ? event.clientX : 0);\n\t      },\n\t\n\t      pointerY = function(event) {\n\t        return (typeof event.clientY !== unknown ? event.clientY : 0);\n\t      };\n\t\n\t  function _getPointer(event, pageProp, clientProp) {\n\t    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\t\n\t    return (event[touchProp] && event[touchProp][0]\n\t      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n\t        || event[clientProp]\n\t      : event[clientProp]);\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    pointerX = function(event) {\n\t      return _getPointer(event, 'pageX', 'clientX');\n\t    };\n\t    pointerY = function(event) {\n\t      return _getPointer(event, 'pageY', 'clientY');\n\t    };\n\t  }\n\t\n\t  fabric.util.getPointer = getPointer;\n\t\n\t  fabric.util.object.extend(fabric.util, fabric.Observable);\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  /**\n\t   * Cross-browser wrapper for setting element's style\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {Object} styles\n\t   * @return {HTMLElement} Element that was passed as a first argument\n\t   */\n\t  function setStyle(element, styles) {\n\t    var elementStyle = element.style;\n\t    if (!elementStyle) {\n\t      return element;\n\t    }\n\t    if (typeof styles === 'string') {\n\t      element.style.cssText += ';' + styles;\n\t      return styles.indexOf('opacity') > -1\n\t        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n\t        : element;\n\t    }\n\t    for (var property in styles) {\n\t      if (property === 'opacity') {\n\t        setOpacity(element, styles[property]);\n\t      }\n\t      else {\n\t        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n\t          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n\t          : property;\n\t        elementStyle[normalizedProperty] = styles[property];\n\t      }\n\t    }\n\t    return element;\n\t  }\n\t\n\t  var parseEl = fabric.document.createElement('div'),\n\t      supportsOpacity = typeof parseEl.style.opacity === 'string',\n\t      supportsFilters = typeof parseEl.style.filter === 'string',\n\t      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\t\n\t      /** @ignore */\n\t      setOpacity = function (element) { return element; };\n\t\n\t  if (supportsOpacity) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      element.style.opacity = value;\n\t      return element;\n\t    };\n\t  }\n\t  else if (supportsFilters) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      var es = element.style;\n\t      if (element.currentStyle && !element.currentStyle.hasLayout) {\n\t        es.zoom = 1;\n\t      }\n\t      if (reOpacity.test(es.filter)) {\n\t        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n\t        es.filter = es.filter.replace(reOpacity, value);\n\t      }\n\t      else {\n\t        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n\t      }\n\t      return element;\n\t    };\n\t  }\n\t\n\t  fabric.util.setStyle = setStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var _slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Takes id and returns an element with that id (if one exists in a document)\n\t   * @memberOf fabric.util\n\t   * @param {String|HTMLElement} id\n\t   * @return {HTMLElement|null}\n\t   */\n\t  function getById(id) {\n\t    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n\t  }\n\t\n\t  var sliceCanConvertNodelists,\n\t      /**\n\t       * Converts an array-like object (e.g. arguments or NodeList) to an array\n\t       * @memberOf fabric.util\n\t       * @param {Object} arrayLike\n\t       * @return {Array}\n\t       */\n\t      toArray = function(arrayLike) {\n\t        return _slice.call(arrayLike, 0);\n\t      };\n\t\n\t  try {\n\t    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n\t  }\n\t  catch (err) { }\n\t\n\t  if (!sliceCanConvertNodelists) {\n\t    toArray = function(arrayLike) {\n\t      var arr = new Array(arrayLike.length), i = arrayLike.length;\n\t      while (i--) {\n\t        arr[i] = arrayLike[i];\n\t      }\n\t      return arr;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates specified element with specified attributes\n\t   * @memberOf fabric.util\n\t   * @param {String} tagName Type of an element to create\n\t   * @param {Object} [attributes] Attributes to set on an element\n\t   * @return {HTMLElement} Newly created element\n\t   */\n\t  function makeElement(tagName, attributes) {\n\t    var el = fabric.document.createElement(tagName);\n\t    for (var prop in attributes) {\n\t      if (prop === 'class') {\n\t        el.className = attributes[prop];\n\t      }\n\t      else if (prop === 'for') {\n\t        el.htmlFor = attributes[prop];\n\t      }\n\t      else {\n\t        el.setAttribute(prop, attributes[prop]);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Adds class to an element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to add class to\n\t   * @param {String} className Class to add to an element\n\t   */\n\t  function addClass(element, className) {\n\t    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n\t      element.className += (element.className ? ' ' : '') + className;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Wraps element with another element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to wrap\n\t   * @param {HTMLElement|String} wrapper Element to wrap with\n\t   * @param {Object} [attributes] Attributes to set on a wrapper\n\t   * @return {HTMLElement} wrapper\n\t   */\n\t  function wrapElement(element, wrapper, attributes) {\n\t    if (typeof wrapper === 'string') {\n\t      wrapper = makeElement(wrapper, attributes);\n\t    }\n\t    if (element.parentNode) {\n\t      element.parentNode.replaceChild(wrapper, element);\n\t    }\n\t    wrapper.appendChild(element);\n\t    return wrapper;\n\t  }\n\t\n\t  /**\n\t   * Returns element scroll offsets\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to operate on\n\t   * @return {Object} Object with left/top values\n\t   */\n\t  function getScrollLeftTop(element) {\n\t\n\t    var left = 0,\n\t        top = 0,\n\t        docElement = fabric.document.documentElement,\n\t        body = fabric.document.body || {\n\t          scrollLeft: 0, scrollTop: 0\n\t        };\n\t\n\t    // While loop checks (and then sets element to) .parentNode OR .host\n\t    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n\t    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n\t    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\t    while (element && (element.parentNode || element.host)) {\n\t\n\t      // Set element to element parent, or 'host' in case of ShadowDOM\n\t      element = element.parentNode || element.host;\n\t\n\t      if (element === fabric.document) {\n\t        left = body.scrollLeft || docElement.scrollLeft || 0;\n\t        top = body.scrollTop ||  docElement.scrollTop || 0;\n\t      }\n\t      else {\n\t        left += element.scrollLeft || 0;\n\t        top += element.scrollTop || 0;\n\t      }\n\t\n\t      if (element.nodeType === 1 &&\n\t          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n\t        break;\n\t      }\n\t    }\n\t\n\t    return { left: left, top: top };\n\t  }\n\t\n\t  /**\n\t   * Returns offset for a given element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get offset for\n\t   * @return {Object} Object with \"left\" and \"top\" properties\n\t   */\n\t  function getElementOffset(element) {\n\t    var docElem,\n\t        doc = element && element.ownerDocument,\n\t        box = { left: 0, top: 0 },\n\t        offset = { left: 0, top: 0 },\n\t        scrollLeftTop,\n\t        offsetAttributes = {\n\t          borderLeftWidth: 'left',\n\t          borderTopWidth:  'top',\n\t          paddingLeft:     'left',\n\t          paddingTop:      'top'\n\t        };\n\t\n\t    if (!doc) {\n\t      return offset;\n\t    }\n\t\n\t    for (var attr in offsetAttributes) {\n\t      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n\t    }\n\t\n\t    docElem = doc.documentElement;\n\t    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n\t      box = element.getBoundingClientRect();\n\t    }\n\t\n\t    scrollLeftTop = getScrollLeftTop(element);\n\t\n\t    return {\n\t      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n\t      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Returns style attribute value of a given element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get style attribute for\n\t   * @param {String} attr Style attribute to get for element\n\t   * @return {String} Style attribute value of the given element.\n\t   */\n\t  var getElementStyle;\n\t  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n\t    getElementStyle = function(element, attr) {\n\t      var style = fabric.document.defaultView.getComputedStyle(element, null);\n\t      return style ? style[attr] : undefined;\n\t    };\n\t  }\n\t  else {\n\t    getElementStyle = function(element, attr) {\n\t      var value = element.style[attr];\n\t      if (!value && element.currentStyle) {\n\t        value = element.currentStyle[attr];\n\t      }\n\t      return value;\n\t    };\n\t  }\n\t\n\t  (function () {\n\t    var style = fabric.document.documentElement.style,\n\t        selectProp = 'userSelect' in style\n\t          ? 'userSelect'\n\t          : 'MozUserSelect' in style\n\t            ? 'MozUserSelect'\n\t            : 'WebkitUserSelect' in style\n\t              ? 'WebkitUserSelect'\n\t              : 'KhtmlUserSelect' in style\n\t                ? 'KhtmlUserSelect'\n\t                : '';\n\t\n\t    /**\n\t     * Makes element unselectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make unselectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementUnselectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = fabric.util.falseFunction;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = 'none';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = 'on';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    /**\n\t     * Makes element selectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make selectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementSelectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = null;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = '';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = '';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    fabric.util.makeElementUnselectable = makeElementUnselectable;\n\t    fabric.util.makeElementSelectable = makeElementSelectable;\n\t  })();\n\t\n\t  (function() {\n\t\n\t    /**\n\t     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL of a script to load\n\t     * @param {Function} callback Callback to execute when script is finished loading\n\t     */\n\t    function getScript(url, callback) {\n\t      var headEl = fabric.document.getElementsByTagName('head')[0],\n\t          scriptEl = fabric.document.createElement('script'),\n\t          loading = true;\n\t\n\t      /** @ignore */\n\t      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n\t        if (loading) {\n\t          if (typeof this.readyState === 'string' &&\n\t              this.readyState !== 'loaded' &&\n\t              this.readyState !== 'complete') {\n\t            return;\n\t          }\n\t          loading = false;\n\t          callback(e || fabric.window.event);\n\t          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n\t        }\n\t      };\n\t      scriptEl.src = url;\n\t      headEl.appendChild(scriptEl);\n\t      // causes issue in Opera\n\t      // headEl.removeChild(scriptEl);\n\t    }\n\t\n\t    fabric.util.getScript = getScript;\n\t  })();\n\t\n\t  fabric.util.getById = getById;\n\t  fabric.util.toArray = toArray;\n\t  fabric.util.makeElement = makeElement;\n\t  fabric.util.addClass = addClass;\n\t  fabric.util.wrapElement = wrapElement;\n\t  fabric.util.getScrollLeftTop = getScrollLeftTop;\n\t  fabric.util.getElementOffset = getElementOffset;\n\t  fabric.util.getElementStyle = getElementStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function addParamToUrl(url, param) {\n\t    return url + (/\\?/.test(url) ? '&' : '?') + param;\n\t  }\n\t\n\t  var makeXHR = (function() {\n\t    var factories = [\n\t      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n\t      function() { return new XMLHttpRequest(); }\n\t    ];\n\t    for (var i = factories.length; i--; ) {\n\t      try {\n\t        var req = factories[i]();\n\t        if (req) {\n\t          return factories[i];\n\t        }\n\t      }\n\t      catch (err) { }\n\t    }\n\t  })();\n\t\n\t  function emptyFn() { }\n\t\n\t  /**\n\t   * Cross-browser abstraction for sending XMLHttpRequest\n\t   * @memberOf fabric.util\n\t   * @param {String} url URL to send XMLHttpRequest to\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.method=\"GET\"]\n\t   * @param {String} [options.parameters] parameters to append to url in GET or in body\n\t   * @param {String} [options.body] body to send with POST or PUT request\n\t   * @param {Function} options.onComplete Callback to invoke when request is completed\n\t   * @return {XMLHttpRequest} request\n\t   */\n\t  function request(url, options) {\n\t\n\t    options || (options = { });\n\t\n\t    var method = options.method ? options.method.toUpperCase() : 'GET',\n\t        onComplete = options.onComplete || function() { },\n\t        xhr = makeXHR(),\n\t        body = options.body || options.parameters;\n\t\n\t    /** @ignore */\n\t    xhr.onreadystatechange = function() {\n\t      if (xhr.readyState === 4) {\n\t        onComplete(xhr);\n\t        xhr.onreadystatechange = emptyFn;\n\t      }\n\t    };\n\t\n\t    if (method === 'GET') {\n\t      body = null;\n\t      if (typeof options.parameters === 'string') {\n\t        url = addParamToUrl(url, options.parameters);\n\t      }\n\t    }\n\t\n\t    xhr.open(method, url, true);\n\t\n\t    if (method === 'POST' || method === 'PUT') {\n\t      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t    }\n\t\n\t    xhr.send(body);\n\t    return xhr;\n\t  }\n\t\n\t  fabric.util.request = request;\n\t})();\n\t\n\t\n\t/**\n\t * Wrapper around `console.log` (when available)\n\t * @param {*} [values] Values to log\n\t */\n\tfabric.log = function() { };\n\t\n\t/**\n\t * Wrapper around `console.warn` (when available)\n\t * @param {*} [values] Values to log as a warning\n\t */\n\tfabric.warn = function() { };\n\t\n\t/* eslint-disable */\n\tif (typeof console !== 'undefined') {\n\t\n\t  ['log', 'warn'].forEach(function(methodName) {\n\t\n\t    if (typeof console[methodName] !== 'undefined' &&\n\t        typeof console[methodName].apply === 'function') {\n\t\n\t      fabric[methodName] = function() {\n\t        return console[methodName].apply(console, arguments);\n\t      };\n\t    }\n\t  });\n\t}\n\t/* eslint-enable */\n\t\n\t\n\t(function() {\n\t\n\t  function noop() {\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Number} [options.startValue=0] Starting value\n\t   * @param {Number} [options.endValue=100] Ending value\n\t   * @param {Number} [options.byValue=100] Value to modify the property by\n\t   * @param {Function} [options.easing] Easing function\n\t   * @param {Number} [options.duration=500] Duration of change (in ms)\n\t   */\n\t  function animate(options) {\n\t\n\t    requestAnimFrame(function(timestamp) {\n\t      options || (options = { });\n\t\n\t      var start = timestamp || +new Date(),\n\t          duration = options.duration || 500,\n\t          finish = start + duration, time,\n\t          onChange = options.onChange || noop,\n\t          abort = options.abort || noop,\n\t          onComplete = options.onComplete || noop,\n\t          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n\t          startValue = 'startValue' in options ? options.startValue : 0,\n\t          endValue = 'endValue' in options ? options.endValue : 100,\n\t          byValue = options.byValue || endValue - startValue;\n\t\n\t      options.onStart && options.onStart();\n\t\n\t      (function tick(ticktime) {\n\t        if (abort()) {\n\t          onComplete(endValue, 1, 1);\n\t          return;\n\t        }\n\t        time = ticktime || +new Date();\n\t        var currentTime = time > finish ? duration : (time - start),\n\t            timePerc = currentTime / duration,\n\t            current = easing(currentTime, startValue, byValue, duration),\n\t            valuePerc = Math.abs((current - startValue) / byValue);\n\t        onChange(current, valuePerc, timePerc);\n\t        if (time > finish) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        requestAnimFrame(tick);\n\t      })(start);\n\t    });\n\t\n\t  }\n\t\n\t  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n\t                          fabric.window.webkitRequestAnimationFrame ||\n\t                          fabric.window.mozRequestAnimationFrame    ||\n\t                          fabric.window.oRequestAnimationFrame      ||\n\t                          fabric.window.msRequestAnimationFrame     ||\n\t                          function(callback) {\n\t                            fabric.window.setTimeout(callback, 1000 / 60);\n\t                          };\n\t\n\t  /**\n\t   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n\t   * @memberOf fabric.util\n\t   * @param {Function} callback Callback to invoke\n\t   * @param {DOMElement} element optional Element to associate with animation\n\t   */\n\t  function requestAnimFrame() {\n\t    return _requestAnimFrame.apply(fabric.window, arguments);\n\t  }\n\t\n\t  fabric.util.animate = animate;\n\t  fabric.util.requestAnimFrame = requestAnimFrame;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t  // Calculate an in-between color. Returns a \"rgba()\" string.\n\t  // Credit: Edwin Martin <edwin@bitstorm.org>\n\t  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n\t  function calculateColor(begin, end, pos) {\n\t    var color = 'rgba('\n\t        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n\t        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n\t        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\t\n\t    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n\t    color += ')';\n\t    return color;\n\t  }\n\t\n\t  /**\n\t   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {String} fromColor The starting color in hex or rgb(a) format.\n\t   * @param {String} toColor The starting color in hex or rgb(a) format.\n\t   * @param {Number} [duration] Duration of change (in ms).\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n\t   */\n\t  function animateColor(fromColor, toColor, duration, options) {\n\t    var startColor = new fabric.Color(fromColor).getSource(),\n\t        endColor = new fabric.Color(toColor).getSource();\n\t\n\t    options = options || {};\n\t\n\t    fabric.util.animate(fabric.util.object.extend(options, {\n\t      duration: duration || 500,\n\t      startValue: startColor,\n\t      endValue: endColor,\n\t      byValue: endColor,\n\t      easing: function (currentTime, startValue, byValue, duration) {\n\t        var posValue = options.colorEasing\n\t              ? options.colorEasing(currentTime, duration)\n\t              : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n\t        return calculateColor(startValue, byValue, posValue);\n\t      }\n\t    }));\n\t  }\n\t\n\t  fabric.util.animateColor = animateColor;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function normalize(a, c, p, s) {\n\t    if (a < Math.abs(c)) {\n\t      a = c;\n\t      s = p / 4;\n\t    }\n\t    else {\n\t      //handle the 0/0 case:\n\t      if (c === 0 && a === 0) {\n\t        s = p / (2 * Math.PI) * Math.asin(1);\n\t      }\n\t      else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t    }\n\t    return { a: a, c: c, p: p, s: s };\n\t  }\n\t\n\t  function elastic(opts, t, d) {\n\t    return opts.a *\n\t      Math.pow(2, 10 * (t -= 1)) *\n\t      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n\t  }\n\t\n\t  /**\n\t   * Cubic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCubic(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Cubic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCubic(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuart(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuart(t, b, c, d) {\n\t    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuart(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t + b;\n\t    }\n\t    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuint(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuint(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuint(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInSine(t, b, c, d) {\n\t    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutSine(t, b, c, d) {\n\t    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutSine(t, b, c, d) {\n\t    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInExpo(t, b, c, d) {\n\t    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutExpo(t, b, c, d) {\n\t    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutExpo(t, b, c, d) {\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    if (t === d) {\n\t      return b + c;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t    }\n\t    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInCirc(t, b, c, d) {\n\t    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCirc(t, b, c, d) {\n\t    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCirc(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n\t    }\n\t    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return -elastic(opts, t, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d / 2;\n\t    if (t === 2) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * (0.3 * 1.5);\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    if (t < 1) {\n\t      return -0.5 * elastic(opts, t, d) + b;\n\t    }\n\t    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n\t      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBounce(t, b, c, d) {\n\t    return c - easeOutBounce (d - t, 0, c, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBounce(t, b, c, d) {\n\t    if ((t /= d) < (1 / 2.75)) {\n\t      return c * (7.5625 * t * t) + b;\n\t    }\n\t    else if (t < (2 / 2.75)) {\n\t      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t    }\n\t    else if (t < (2.5 / 2.75)) {\n\t      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t    }\n\t    else {\n\t      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBounce(t, b, c, d) {\n\t    if (t < d / 2) {\n\t      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n\t    }\n\t    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t  }\n\t\n\t  /**\n\t   * Easing functions\n\t   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n\t   * @namespace fabric.util.ease\n\t   */\n\t  fabric.util.ease = {\n\t\n\t    /**\n\t     * Quadratic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInQuad: function(t, b, c, d) {\n\t      return c * (t /= d) * t + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeOutQuad: function(t, b, c, d) {\n\t      return -c * (t /= d) * (t - 2) + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing in and out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInOutQuad: function(t, b, c, d) {\n\t      t /= (d / 2);\n\t      if (t < 1) {\n\t        return c / 2 * t * t + b;\n\t      }\n\t      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n\t    },\n\t\n\t    /**\n\t     * Cubic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInCubic: function(t, b, c, d) {\n\t      return c * (t /= d) * t * t + b;\n\t    },\n\t\n\t    easeOutCubic: easeOutCubic,\n\t    easeInOutCubic: easeInOutCubic,\n\t    easeInQuart: easeInQuart,\n\t    easeOutQuart: easeOutQuart,\n\t    easeInOutQuart: easeInOutQuart,\n\t    easeInQuint: easeInQuint,\n\t    easeOutQuint: easeOutQuint,\n\t    easeInOutQuint: easeInOutQuint,\n\t    easeInSine: easeInSine,\n\t    easeOutSine: easeOutSine,\n\t    easeInOutSine: easeInOutSine,\n\t    easeInExpo: easeInExpo,\n\t    easeOutExpo: easeOutExpo,\n\t    easeInOutExpo: easeInOutExpo,\n\t    easeInCirc: easeInCirc,\n\t    easeOutCirc: easeOutCirc,\n\t    easeInOutCirc: easeInOutCirc,\n\t    easeInElastic: easeInElastic,\n\t    easeOutElastic: easeOutElastic,\n\t    easeInOutElastic: easeInOutElastic,\n\t    easeInBack: easeInBack,\n\t    easeOutBack: easeOutBack,\n\t    easeInOutBack: easeInOutBack,\n\t    easeInBounce: easeInBounce,\n\t    easeOutBounce: easeOutBounce,\n\t    easeInOutBounce: easeInOutBounce\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t   * @name fabric\n\t   * @namespace\n\t   */\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      parseUnit = fabric.util.parseUnit,\n\t      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\t\n\t      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n\t      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n\t      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata|clipPath|mask)$/i,\n\t      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\t\n\t      attributesMap = {\n\t        cx:                   'left',\n\t        x:                    'left',\n\t        r:                    'radius',\n\t        cy:                   'top',\n\t        y:                    'top',\n\t        display:              'visible',\n\t        visibility:           'visible',\n\t        transform:            'transformMatrix',\n\t        'fill-opacity':       'fillOpacity',\n\t        'fill-rule':          'fillRule',\n\t        'font-family':        'fontFamily',\n\t        'font-size':          'fontSize',\n\t        'font-style':         'fontStyle',\n\t        'font-weight':        'fontWeight',\n\t        'stroke-dasharray':   'strokeDashArray',\n\t        'stroke-linecap':     'strokeLineCap',\n\t        'stroke-linejoin':    'strokeLineJoin',\n\t        'stroke-miterlimit':  'strokeMiterLimit',\n\t        'stroke-opacity':     'strokeOpacity',\n\t        'stroke-width':       'strokeWidth',\n\t        'text-decoration':    'textDecoration',\n\t        'text-anchor':        'originX',\n\t        opacity:              'opacity'\n\t      },\n\t\n\t      colorAttributes = {\n\t        stroke: 'strokeOpacity',\n\t        fill:   'fillOpacity'\n\t      };\n\t\n\t  fabric.cssRules = { };\n\t  fabric.gradientDefs = { };\n\t\n\t  function normalizeAttr(attr) {\n\t    // transform attribute names\n\t    if (attr in attributesMap) {\n\t      return attributesMap[attr];\n\t    }\n\t    return attr;\n\t  }\n\t\n\t  function normalizeValue(attr, value, parentAttributes, fontSize) {\n\t    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n\t        parsed;\n\t\n\t    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n\t      value = '';\n\t    }\n\t    else if (attr === 'strokeDashArray') {\n\t      if (value === 'none') {\n\t        value = null;\n\t      }\n\t      else {\n\t        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n\t          return parseFloat(n);\n\t        });\n\t      }\n\t    }\n\t    else if (attr === 'transformMatrix') {\n\t      if (parentAttributes && parentAttributes.transformMatrix) {\n\t        value = multiplyTransformMatrices(\n\t          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n\t      }\n\t      else {\n\t        value = fabric.parseTransformAttribute(value);\n\t      }\n\t    }\n\t    else if (attr === 'visible') {\n\t      value = (value === 'none' || value === 'hidden') ? false : true;\n\t      // display=none on parent element always takes precedence over child element\n\t      if (parentAttributes && parentAttributes.visible === false) {\n\t        value = false;\n\t      }\n\t    }\n\t    else if (attr === 'opacity') {\n\t      value = parseFloat(value);\n\t      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n\t        value *= parentAttributes.opacity;\n\t      }\n\t    }\n\t    else if (attr === 'originX' /* text-anchor */) {\n\t      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n\t    }\n\t    else {\n\t      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n\t    }\n\t\n\t    return (!isArray && isNaN(parsed) ? value : parsed);\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} attributes Array of attributes to parse\n\t   */\n\t  function _setStrokeFillOpacity(attributes) {\n\t    for (var attr in colorAttributes) {\n\t\n\t      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n\t        continue;\n\t      }\n\t\n\t      if (typeof attributes[attr] === 'undefined') {\n\t        if (!fabric.Object.prototype[attr]) {\n\t          continue;\n\t        }\n\t        attributes[attr] = fabric.Object.prototype[attr];\n\t      }\n\t\n\t      if (attributes[attr].indexOf('url(') === 0) {\n\t        continue;\n\t      }\n\t\n\t      var color = new fabric.Color(attributes[attr]);\n\t      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n\t    }\n\t    return attributes;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _getMultipleNodes(doc, nodeNames) {\n\t    var nodeName, nodeArray = [], nodeList;\n\t    for (var i = 0; i < nodeNames.length; i++) {\n\t      nodeName = nodeNames[i];\n\t      nodeList = doc.getElementsByTagName(nodeName);\n\t      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n\t    }\n\t    return nodeArray;\n\t  }\n\t\n\t  /**\n\t   * Parses \"transform\" attribute, returning an array of values\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {String} attributeValue String containing attribute value\n\t   * @return {Array} Array of 6 elements representing transformation matrix\n\t   */\n\t  fabric.parseTransformAttribute = (function() {\n\t    function rotateMatrix(matrix, args) {\n\t      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n\t          x = 0, y = 0;\n\t      if (args.length === 3) {\n\t        x = args[1];\n\t        y = args[2];\n\t      }\n\t\n\t      matrix[0] = cos;\n\t      matrix[1] = sin;\n\t      matrix[2] = -sin;\n\t      matrix[3] = cos;\n\t      matrix[4] = x - (cos * x - sin * y);\n\t      matrix[5] = y - (sin * x + cos * y);\n\t    }\n\t\n\t    function scaleMatrix(matrix, args) {\n\t      var multiplierX = args[0],\n\t          multiplierY = (args.length === 2) ? args[1] : args[0];\n\t\n\t      matrix[0] = multiplierX;\n\t      matrix[3] = multiplierY;\n\t    }\n\t\n\t    function skewMatrix(matrix, args, pos) {\n\t      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function translateMatrix(matrix, args) {\n\t      matrix[4] = args[0];\n\t      if (args.length === 2) {\n\t        matrix[5] = args[1];\n\t      }\n\t    }\n\t\n\t    // identity matrix\n\t    var iMatrix = [\n\t          1, // a\n\t          0, // b\n\t          0, // c\n\t          1, // d\n\t          0, // e\n\t          0  // f\n\t        ],\n\t\n\t        // == begin transform regexp\n\t        number = fabric.reNum,\n\t\n\t        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\t\n\t        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + ')' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' +\n\t                  '\\\\s*\\\\))',\n\t\n\t        transform = '(?:' +\n\t                    matrix + '|' +\n\t                    translate + '|' +\n\t                    scale + '|' +\n\t                    rotate + '|' +\n\t                    skewX + '|' +\n\t                    skewY +\n\t                    ')',\n\t\n\t        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\t\n\t        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\t\n\t        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n\t        reTransformList = new RegExp(transformList),\n\t        // == end transform regexp\n\t\n\t        reTransform = new RegExp(transform, 'g');\n\t\n\t    return function(attributeValue) {\n\t\n\t      // start with identity matrix\n\t      var matrix = iMatrix.concat(),\n\t          matrices = [];\n\t\n\t      // return if no argument was given or\n\t      // an argument does not match transform attribute regexp\n\t      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n\t        return matrix;\n\t      }\n\t\n\t      attributeValue.replace(reTransform, function(match) {\n\t\n\t        var m = new RegExp(transform).exec(match).filter(function (match) {\n\t              // match !== '' && match != null\n\t              return (!!match);\n\t            }),\n\t            operation = m[1],\n\t            args = m.slice(2).map(parseFloat);\n\t\n\t        switch (operation) {\n\t          case 'translate':\n\t            translateMatrix(matrix, args);\n\t            break;\n\t          case 'rotate':\n\t            args[0] = fabric.util.degreesToRadians(args[0]);\n\t            rotateMatrix(matrix, args);\n\t            break;\n\t          case 'scale':\n\t            scaleMatrix(matrix, args);\n\t            break;\n\t          case 'skewX':\n\t            skewMatrix(matrix, args, 2);\n\t            break;\n\t          case 'skewY':\n\t            skewMatrix(matrix, args, 1);\n\t            break;\n\t          case 'matrix':\n\t            matrix = args;\n\t            break;\n\t        }\n\t\n\t        // snapshot current matrix into matrices array\n\t        matrices.push(matrix.concat());\n\t        // reset\n\t        matrix = iMatrix.concat();\n\t      });\n\t\n\t      var combinedMatrix = matrices[0];\n\t      while (matrices.length > 1) {\n\t        matrices.shift();\n\t        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n\t      }\n\t      return combinedMatrix;\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleString(style, oStyle) {\n\t    var attr, value;\n\t    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n\t      var pair = chunk.split(':');\n\t\n\t      attr = pair[0].trim().toLowerCase();\n\t      value =  pair[1].trim();\n\t\n\t      oStyle[attr] = value;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleObject(style, oStyle) {\n\t    var attr, value;\n\t    for (var prop in style) {\n\t      if (typeof style[prop] === 'undefined') {\n\t        continue;\n\t      }\n\t\n\t      attr = prop.toLowerCase();\n\t      value = style[prop];\n\t\n\t      oStyle[attr] = value;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function getGlobalStylesForElement(element, svgUid) {\n\t    var styles = { };\n\t    for (var rule in fabric.cssRules[svgUid]) {\n\t      if (elementMatchesRule(element, rule.split(' '))) {\n\t        for (var property in fabric.cssRules[svgUid][rule]) {\n\t          styles[property] = fabric.cssRules[svgUid][rule][property];\n\t        }\n\t      }\n\t    }\n\t    return styles;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function elementMatchesRule(element, selectors) {\n\t    var firstMatching, parentMatching = true;\n\t    //start from rightmost selector.\n\t    firstMatching = selectorMatches(element, selectors.pop());\n\t    if (firstMatching && selectors.length) {\n\t      parentMatching = doesSomeParentMatch(element, selectors);\n\t    }\n\t    return firstMatching && parentMatching && (selectors.length === 0);\n\t  }\n\t\n\t  function doesSomeParentMatch(element, selectors) {\n\t    var selector, parentMatching = true;\n\t    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n\t      if (parentMatching) {\n\t        selector = selectors.pop();\n\t      }\n\t      element = element.parentNode;\n\t      parentMatching = selectorMatches(element, selector);\n\t    }\n\t    return selectors.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function selectorMatches(element, selector) {\n\t    var nodeName = element.nodeName,\n\t        classNames = element.getAttribute('class'),\n\t        id = element.getAttribute('id'), matcher;\n\t    // i check if a selector matches slicing away part from it.\n\t    // if i get empty string i should match\n\t    matcher = new RegExp('^' + nodeName, 'i');\n\t    selector = selector.replace(matcher, '');\n\t    if (id && selector.length) {\n\t      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n\t      selector = selector.replace(matcher, '');\n\t    }\n\t    if (classNames && selector.length) {\n\t      classNames = classNames.split(' ');\n\t      for (var i = classNames.length; i--;) {\n\t        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n\t        selector = selector.replace(matcher, '');\n\t      }\n\t    }\n\t    return selector.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * to support IE8 missing getElementById on SVGdocument\n\t   */\n\t  function elementById(doc, id) {\n\t    var el;\n\t    doc.getElementById && (el = doc.getElementById(id));\n\t    if (el) {\n\t      return el;\n\t    }\n\t    var node, i, nodelist = doc.getElementsByTagName('*');\n\t    for (i = 0; i < nodelist.length; i++) {\n\t      node = nodelist[i];\n\t      if (id === node.getAttribute('id')) {\n\t        return node;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseUseDirectives(doc) {\n\t    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\t\n\t    while (nodelist.length && i < nodelist.length) {\n\t      var el = nodelist[i],\n\t          xlink = el.getAttribute('xlink:href').substr(1),\n\t          x = el.getAttribute('x') || 0,\n\t          y = el.getAttribute('y') || 0,\n\t          el2 = elementById(doc, xlink).cloneNode(true),\n\t          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n\t          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\t\n\t      applyViewboxTransform(el2);\n\t      if (/^svg$/i.test(el2.nodeName)) {\n\t        var el3 = el2.ownerDocument.createElement('g');\n\t        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n\t          attr = attrs.item(j);\n\t          el3.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t        // el2.firstChild != null\n\t        while (el2.firstChild) {\n\t          el3.appendChild(el2.firstChild);\n\t        }\n\t        el2 = el3;\n\t      }\n\t\n\t      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n\t        attr = attrs.item(j);\n\t        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n\t          continue;\n\t        }\n\t\n\t        if (attr.nodeName === 'transform') {\n\t          currentTrans = attr.nodeValue + ' ' + currentTrans;\n\t        }\n\t        else {\n\t          el2.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t      }\n\t\n\t      el2.setAttribute('transform', currentTrans);\n\t      el2.setAttribute('instantiated_by_use', '1');\n\t      el2.removeAttribute('id');\n\t      parentNode = el.parentNode;\n\t      parentNode.replaceChild(el2, el);\n\t      // some browsers do not shorten nodelist after replaceChild (IE8)\n\t      if (nodelist.length === oldLength) {\n\t        i++;\n\t      }\n\t    }\n\t  }\n\t\n\t  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n\t  // matches, e.g.: +14.56e-12, etc.\n\t  var reViewBoxAttrValue = new RegExp(\n\t    '^' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n\t    '$'\n\t  );\n\t\n\t  /**\n\t   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n\t   */\n\t  function applyViewboxTransform(element) {\n\t\n\t    var viewBoxAttr = element.getAttribute('viewBox'),\n\t        scaleX = 1,\n\t        scaleY = 1,\n\t        minX = 0,\n\t        minY = 0,\n\t        viewBoxWidth, viewBoxHeight, matrix, el,\n\t        widthAttr = element.getAttribute('width'),\n\t        heightAttr = element.getAttribute('height'),\n\t        x = element.getAttribute('x') || 0,\n\t        y = element.getAttribute('y') || 0,\n\t        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n\t        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n\t                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n\t        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n\t        toBeParsed = missingViewBox && missingDimAttr,\n\t        parsedDim = { }, translateMatrix = '';\n\t\n\t    parsedDim.width = 0;\n\t    parsedDim.height = 0;\n\t    parsedDim.toBeParsed = toBeParsed;\n\t\n\t    if (toBeParsed) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (missingViewBox) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      return parsedDim;\n\t    }\n\t\n\t    minX = -parseFloat(viewBoxAttr[1]);\n\t    minY = -parseFloat(viewBoxAttr[2]);\n\t    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n\t    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\t\n\t    if (!missingDimAttr) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      scaleX = parsedDim.width / viewBoxWidth;\n\t      scaleY = parsedDim.height / viewBoxHeight;\n\t    }\n\t    else {\n\t      parsedDim.width = viewBoxWidth;\n\t      parsedDim.height = viewBoxHeight;\n\t    }\n\t\n\t    // default is to preserve aspect ratio\n\t    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\t    if (preserveAspectRatio.alignX !== 'none') {\n\t      //translate all container for the effect of Mid, Min, Max\n\t      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n\t    }\n\t\n\t    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (x || y) {\n\t      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n\t    }\n\t\n\t    matrix = translateMatrix + ' matrix(' + scaleX +\n\t                  ' 0' +\n\t                  ' 0 ' +\n\t                  scaleY + ' ' +\n\t                  (minX * scaleX) + ' ' +\n\t                  (minY * scaleY) + ') ';\n\t\n\t    if (element.nodeName === 'svg') {\n\t      el = element.ownerDocument.createElement('g');\n\t      // element.firstChild != null\n\t      while (element.firstChild) {\n\t        el.appendChild(element.firstChild);\n\t      }\n\t      element.appendChild(el);\n\t    }\n\t    else {\n\t      el = element;\n\t      matrix = el.getAttribute('transform') + matrix;\n\t    }\n\t\n\t    el.setAttribute('transform', matrix);\n\t    return parsedDim;\n\t  }\n\t\n\t  function hasAncestorWithNodeName(element, nodeName) {\n\t    while (element && (element = element.parentNode)) {\n\t      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n\t        && !element.getAttribute('instantiated_by_use')) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {SVGDocument} doc SVG document to parse\n\t   * @param {Function} callback Callback to call when parsing is finished;\n\t   * It's being passed an array of elements (parsed from a document).\n\t   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t   * @param {Object} [parsingOptions] options for parsing document\n\t   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n\t   */\n\t  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n\t    if (!doc) {\n\t      return;\n\t    }\n\t\n\t    parseUseDirectives(doc);\n\t\n\t    var svgUid =  fabric.Object.__uid++,\n\t        options = applyViewboxTransform(doc),\n\t        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\t    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n\t    options.svgUid = svgUid;\n\t\n\t    if (descendants.length === 0 && fabric.isLikelyNode) {\n\t      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n\t      // https://github.com/ajaxorg/node-o3-xml/issues/21\n\t      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n\t      var arr = [];\n\t      for (var i = 0, len = descendants.length; i < len; i++) {\n\t        arr[i] = descendants[i];\n\t      }\n\t      descendants = arr;\n\t    }\n\t\n\t    var elements = descendants.filter(function(el) {\n\t      applyViewboxTransform(el);\n\t      return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n\t            !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n\t    });\n\t\n\t    if (!elements || (elements && !elements.length)) {\n\t      callback && callback([], {});\n\t      return;\n\t    }\n\t\n\t    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n\t    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n\t    // Precedence of rules:   style > class > attribute\n\t    fabric.parseElements(elements, function(instances) {\n\t      if (callback) {\n\t        callback(instances, options);\n\t      }\n\t    }, clone(options), reviver, parsingOptions);\n\t  };\n\t\n\t  var reFontDeclaration = new RegExp(\n\t    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n\t    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n\t      fabric.reNum +\n\t    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\t\n\t  extend(fabric, {\n\t    /**\n\t     * Parses a short font declaration, building adding its properties to a style object\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {String} value font declaration\n\t     * @param {Object} oStyle definition\n\t     */\n\t    parseFontDeclaration: function(value, oStyle) {\n\t      var match = value.match(reFontDeclaration);\n\t\n\t      if (!match) {\n\t        return;\n\t      }\n\t      var fontStyle = match[1],\n\t          // font variant is not used\n\t          // fontVariant = match[2],\n\t          fontWeight = match[3],\n\t          fontSize = match[4],\n\t          lineHeight = match[5],\n\t          fontFamily = match[6];\n\t\n\t      if (fontStyle) {\n\t        oStyle.fontStyle = fontStyle;\n\t      }\n\t      if (fontWeight) {\n\t        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n\t      }\n\t      if (fontSize) {\n\t        oStyle.fontSize = parseUnit(fontSize);\n\t      }\n\t      if (fontFamily) {\n\t        oStyle.fontFamily = fontFamily;\n\t      }\n\t      if (lineHeight) {\n\t        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Parses an SVG document, returning all of the gradient declarations found in it\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n\t     */\n\t    getGradientDefs: function(doc) {\n\t      var tagArray = [\n\t            'linearGradient',\n\t            'radialGradient',\n\t            'svg:linearGradient',\n\t            'svg:radialGradient'],\n\t          elList = _getMultipleNodes(doc, tagArray),\n\t          el, j = 0, id, xlink,\n\t          gradientDefs = { }, idsToXlinkMap = { };\n\t\n\t      j = elList.length;\n\t\n\t      while (j--) {\n\t        el = elList[j];\n\t        xlink = el.getAttribute('xlink:href');\n\t        id = el.getAttribute('id');\n\t        if (xlink) {\n\t          idsToXlinkMap[id] = xlink.substr(1);\n\t        }\n\t        gradientDefs[id] = el;\n\t      }\n\t\n\t      for (id in idsToXlinkMap) {\n\t        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n\t        el = gradientDefs[id];\n\t        while (el2.firstChild) {\n\t          el.appendChild(el2.firstChild);\n\t        }\n\t      }\n\t      return gradientDefs;\n\t    },\n\t\n\t    /**\n\t     * Returns an object of attributes' name/value, given element and an array of attribute names;\n\t     * Parses parent \"g\" nodes recursively upwards.\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {DOMElement} element Element to parse\n\t     * @param {Array} attributes Array of attributes to parse\n\t     * @return {Object} object containing parsed attributes' names/values\n\t     */\n\t    parseAttributes: function(element, attributes, svgUid) {\n\t\n\t      if (!element) {\n\t        return;\n\t      }\n\t\n\t      var value,\n\t          parentAttributes = { },\n\t          fontSize;\n\t\n\t      if (typeof svgUid === 'undefined') {\n\t        svgUid = element.getAttribute('svgUid');\n\t      }\n\t      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\t      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n\t        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n\t      }\n\t      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n\t                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t\n\t      var ownAttributes = attributes.reduce(function(memo, attr) {\n\t        value = element.getAttribute(attr);\n\t        if (value) { // eslint-disable-line\n\t          memo[attr] = value;\n\t        }\n\t        return memo;\n\t      }, { });\n\t      // add values parsed from style, which take precedence over attributes\n\t      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\t      ownAttributes = extend(ownAttributes,\n\t        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\t\n\t      var normalizedAttr, normalizedValue, normalizedStyle = {};\n\t      for (var attr in ownAttributes) {\n\t        normalizedAttr = normalizeAttr(attr);\n\t        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n\t        normalizedStyle[normalizedAttr] = normalizedValue;\n\t      }\n\t      if (normalizedStyle && normalizedStyle.font) {\n\t        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n\t      }\n\t      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n\t      return reAllowedParents.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n\t    },\n\t\n\t    /**\n\t     * Transforms an array of svg elements to corresponding fabric.* instances\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {Array} elements Array of elements to parse\n\t     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n\t      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n\t    },\n\t\n\t    /**\n\t     * Parses \"style\" attribute, retuning an object with values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {SVGElement} element Element to parse\n\t     * @return {Object} Objects with values parsed from style attribute of an element\n\t     */\n\t    parseStyleAttribute: function(element) {\n\t      var oStyle = { },\n\t          style = element.getAttribute('style');\n\t\n\t      if (!style) {\n\t        return oStyle;\n\t      }\n\t\n\t      if (typeof style === 'string') {\n\t        parseStyleString(style, oStyle);\n\t      }\n\t      else {\n\t        parseStyleObject(style, oStyle);\n\t      }\n\t\n\t      return oStyle;\n\t    },\n\t\n\t    /**\n\t     * Parses \"points\" attribute, returning an array of values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {String} points points attribute string\n\t     * @return {Array} array of points\n\t     */\n\t    parsePointsAttribute: function(points) {\n\t\n\t      // points attribute is required and must not be empty\n\t      if (!points) {\n\t        return null;\n\t      }\n\t\n\t      // replace commas with whitespace and remove bookending whitespace\n\t      points = points.replace(/,/g, ' ').trim();\n\t\n\t      points = points.split(/\\s+/);\n\t      var parsedPoints = [], i, len;\n\t\n\t      i = 0;\n\t      len = points.length;\n\t      for (; i < len; i += 2) {\n\t        parsedPoints.push({\n\t          x: parseFloat(points[i]),\n\t          y: parseFloat(points[i + 1])\n\t        });\n\t      }\n\t\n\t      // odd number of points is an error\n\t      // if (parsedPoints.length % 2 !== 0) {\n\t      //   return null;\n\t      // }\n\t\n\t      return parsedPoints;\n\t    },\n\t\n\t    /**\n\t     * Returns CSS rules for a given SVG document\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} CSS rules of this document\n\t     */\n\t    getCSSRules: function(doc) {\n\t      var styles = doc.getElementsByTagName('style'),\n\t          allRules = { }, rules;\n\t\n\t      // very crude parsing of style contents\n\t      for (var i = 0, len = styles.length; i < len; i++) {\n\t        // IE9 doesn't support textContent, but provides text instead.\n\t        var styleContents = styles[i].textContent || styles[i].text;\n\t\n\t        // remove comments\n\t        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\t        if (styleContents.trim() === '') {\n\t          continue;\n\t        }\n\t        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n\t        rules = rules.map(function(rule) { return rule.trim(); });\n\t        rules.forEach(function(rule) {\n\t\n\t          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n\t              ruleObj = { }, declaration = match[2].trim(),\n\t              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\t\n\t          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n\t            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n\t                property = pair[0],\n\t                value = pair[1];\n\t            ruleObj[property] = value;\n\t          }\n\t          rule = match[1];\n\t          rule.split(',').forEach(function(_rule) {\n\t            _rule = _rule.replace(/^svg/i, '').trim();\n\t            if (_rule === '') {\n\t              return;\n\t            }\n\t            if (allRules[_rule]) {\n\t              fabric.util.object.extend(allRules[_rule], ruleObj);\n\t            }\n\t            else {\n\t              allRules[_rule] = fabric.util.object.clone(ruleObj);\n\t            }\n\t          });\n\t        });\n\t      }\n\t      return allRules;\n\t    },\n\t\n\t    /**\n\t     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n\t     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n\t     * @memberOf fabric\n\t     * @param {String} url\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     * @param {Object} [options] Object containing options for parsing\n\t     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n\t     */\n\t    loadSVGFromURL: function(url, callback, reviver, options) {\n\t\n\t      url = url.replace(/^\\n\\s*/, '').trim();\n\t      new fabric.util.request(url, {\n\t        method: 'get',\n\t        onComplete: onComplete\n\t      });\n\t\n\t      function onComplete(r) {\n\t\n\t        var xml = r.responseXML;\n\t        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n\t          xml = new ActiveXObject('Microsoft.XMLDOM');\n\t          xml.async = 'false';\n\t          //IE chokes on DOCTYPE\n\t          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t        }\n\t        if (!xml || !xml.documentElement) {\n\t          callback && callback(null);\n\t        }\n\t\n\t        fabric.parseSVGDocument(xml.documentElement, function (results, _options) {\n\t          callback && callback(results, _options);\n\t        }, reviver, options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n\t     * @memberOf fabric\n\t     * @param {String} string\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     * @param {Object} [options] Object containing options for parsing\n\t     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n\t     */\n\t    loadSVGFromString: function(string, callback, reviver, options) {\n\t      string = string.trim();\n\t      var doc;\n\t      if (typeof DOMParser !== 'undefined') {\n\t        var parser = new DOMParser();\n\t        if (parser && parser.parseFromString) {\n\t          doc = parser.parseFromString(string, 'text/xml');\n\t        }\n\t      }\n\t      else if (fabric.window.ActiveXObject) {\n\t        doc = new ActiveXObject('Microsoft.XMLDOM');\n\t        doc.async = 'false';\n\t        // IE chokes on DOCTYPE\n\t        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t      }\n\t\n\t      fabric.parseSVGDocument(doc.documentElement, function (results, _options) {\n\t        callback(results, _options);\n\t      }, reviver, options);\n\t    }\n\t  });\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n\t  this.elements = elements;\n\t  this.callback = callback;\n\t  this.options = options;\n\t  this.reviver = reviver;\n\t  this.svgUid = (options && options.svgUid) || 0;\n\t  this.parsingOptions = parsingOptions;\n\t};\n\t\n\tfabric.ElementsParser.prototype.parse = function() {\n\t  this.instances = new Array(this.elements.length);\n\t  this.numElements = this.elements.length;\n\t\n\t  this.createObjects();\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObjects = function() {\n\t  for (var i = 0, len = this.elements.length; i < len; i++) {\n\t    this.elements[i].setAttribute('svgUid', this.svgUid);\n\t    (function(_obj, i) {\n\t      setTimeout(function() {\n\t        _obj.createObject(_obj.elements[i], i);\n\t      }, 0);\n\t    })(this, i);\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObject = function(el, index) {\n\t  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n\t  if (klass && klass.fromElement) {\n\t    try {\n\t      this._createObject(klass, el, index);\n\t    }\n\t    catch (err) {\n\t      fabric.log(err);\n\t    }\n\t  }\n\t  else {\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n\t  if (klass.async) {\n\t    klass.fromElement(el, this.createCallback(index, el), this.options);\n\t  }\n\t  else {\n\t    var obj = klass.fromElement(el, this.options);\n\t    this.resolveGradient(obj, 'fill');\n\t    this.resolveGradient(obj, 'stroke');\n\t    this.reviver && this.reviver(el, obj);\n\t    this.instances[index] = obj;\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createCallback = function(index, el) {\n\t  var _this = this;\n\t  return function(obj) {\n\t    _this.resolveGradient(obj, 'fill');\n\t    _this.resolveGradient(obj, 'stroke');\n\t    _this.reviver && _this.reviver(el, obj);\n\t    _this.instances[index] = obj;\n\t    _this.checkIfDone();\n\t  };\n\t};\n\t\n\tfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\t\n\t  var instanceFillValue = obj.get(property);\n\t  if (!(/^url\\(/).test(instanceFillValue)) {\n\t    return;\n\t  }\n\t  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n\t  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n\t    obj.set(property,\n\t      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.checkIfDone = function() {\n\t  if (--this.numElements === 0) {\n\t    this.instances = this.instances.filter(function(el) {\n\t      // eslint-disable-next-line no-eq-null, eqeqeq\n\t      return el != null;\n\t    });\n\t    this.callback(this.instances);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Point) {\n\t    fabric.warn('fabric.Point is already defined');\n\t    return;\n\t  }\n\t\n\t  fabric.Point = Point;\n\t\n\t  /**\n\t   * Point class\n\t   * @class fabric.Point\n\t   * @memberOf fabric\n\t   * @constructor\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {fabric.Point} thisArg\n\t   */\n\t  function Point(x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Point.prototype = /** @lends fabric.Point.prototype */ {\n\t\n\t    type: 'point',\n\t\n\t    constructor: Point,\n\t\n\t    /**\n\t     * Adds another point to this one and returns another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point instance with added values\n\t     */\n\t    add: function (that) {\n\t      return new Point(this.x + that.x, this.y + that.y);\n\t    },\n\t\n\t    /**\n\t     * Adds another point to this one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    addEquals: function (that) {\n\t      this.x += that.x;\n\t      this.y += that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} new Point with added value\n\t     */\n\t    scalarAdd: function (scalar) {\n\t      return new Point(this.x + scalar, this.y + scalar);\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarAddEquals: function (scalar) {\n\t      this.x += scalar;\n\t      this.y += scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point and returns a new one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point object with subtracted values\n\t     */\n\t    subtract: function (that) {\n\t      return new Point(this.x - that.x, this.y - that.y);\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    subtractEquals: function (that) {\n\t      this.x -= that.x;\n\t      this.y -= that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    scalarSubtract: function (scalar) {\n\t      return new Point(this.x - scalar, this.y - scalar);\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarSubtractEquals: function (scalar) {\n\t      this.x -= scalar;\n\t      this.y -= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value and returns a new one\n\t     * TODO: rename in scalarMultiply in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    multiply: function (scalar) {\n\t      return new Point(this.x * scalar, this.y * scalar);\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value\n\t     * TODO: rename in scalarMultiplyEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    multiplyEquals: function (scalar) {\n\t      this.x *= scalar;\n\t      this.y *= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value and returns a new one\n\t     * TODO: rename in scalarDivide in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    divide: function (scalar) {\n\t      return new Point(this.x / scalar, this.y / scalar);\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value\n\t     * TODO: rename in scalarDivideEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    divideEquals: function (scalar) {\n\t      this.x /= scalar;\n\t      this.y /= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    eq: function (that) {\n\t      return (this.x === that.x && this.y === that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lt: function (that) {\n\t      return (this.x < that.x && this.y < that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lte: function (that) {\n\t      return (this.x <= that.x && this.y <= that.y);\n\t    },\n\t\n\t    /**\n\t\n\t     * Returns true if this point is greater another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gt: function (that) {\n\t      return (this.x > that.x && this.y > that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is greater than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gte: function (that) {\n\t      return (this.x >= that.x && this.y >= that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns new point which is the result of linear interpolation with this one and another one\n\t     * @param {fabric.Point} that\n\t     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n\t     * @return {fabric.Point}\n\t     */\n\t    lerp: function (that, t) {\n\t      if (typeof t === 'undefined') {\n\t        t = 0.5;\n\t      }\n\t      t = Math.max(Math.min(1, t), 0);\n\t      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n\t    },\n\t\n\t    /**\n\t     * Returns distance from this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {Number}\n\t     */\n\t    distanceFrom: function (that) {\n\t      var dx = this.x - that.x,\n\t          dy = this.y - that.y;\n\t      return Math.sqrt(dx * dx + dy * dy);\n\t    },\n\t\n\t    /**\n\t     * Returns the point between this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    midPointFrom: function (that) {\n\t      return this.lerp(that);\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the min of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    min: function (that) {\n\t      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the max of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    max: function (that) {\n\t      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of this point\n\t     * @return {String}\n\t     */\n\t    toString: function () {\n\t      return this.x + ',' + this.y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setXY: function (x, y) {\n\t      this.x = x;\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x of this point\n\t     * @param {Number} x\n\t     * @chainable\n\t     */\n\t    setX: function (x) {\n\t      this.x = x;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets y of this point\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setY: function (y) {\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point from another point\n\t     * @param {fabric.Point} that\n\t     * @chainable\n\t     */\n\t    setFromPoint: function (that) {\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Swaps x/y of this point and another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    swap: function (that) {\n\t      var x = this.x,\n\t          y = this.y;\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      that.x = x;\n\t      that.y = y;\n\t    },\n\t\n\t    /**\n\t     * return a cloned instance of the point\n\t     * @return {fabric.Point}\n\t     */\n\t    clone: function () {\n\t      return new Point(this.x, this.y);\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Intersection) {\n\t    fabric.warn('fabric.Intersection is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Intersection class\n\t   * @class fabric.Intersection\n\t   * @memberOf fabric\n\t   * @constructor\n\t   */\n\t  function Intersection(status) {\n\t    this.status = status;\n\t    this.points = [];\n\t  }\n\t\n\t  fabric.Intersection = Intersection;\n\t\n\t  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\t\n\t    constructor: Intersection,\n\t\n\t    /**\n\t     * Appends a point to intersection\n\t     * @param {fabric.Point} point\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoint: function (point) {\n\t      this.points.push(point);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Appends points to intersection\n\t     * @param {Array} points\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoints: function (points) {\n\t      this.points = this.points.concat(points);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks if one line intersects another\n\t   * TODO: rename in intersectSegmentSegment\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {fabric.Point} b1\n\t   * @param {fabric.Point} b2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n\t    var result,\n\t        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n\t        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n\t        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\t    if (uB !== 0) {\n\t      var ua = uaT / uB,\n\t          ub = ubT / uB;\n\t      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n\t        result = new Intersection('Intersection');\n\t        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n\t      }\n\t      else {\n\t        result = new Intersection();\n\t      }\n\t    }\n\t    else {\n\t      if (uaT === 0 || ubT === 0) {\n\t        result = new Intersection('Coincident');\n\t      }\n\t      else {\n\t        result = new Intersection('Parallel');\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if line intersects polygon\n\t   * TODO: rename in intersectSegmentPolygon\n\t   * fix detection of coincident\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {Array} points\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n\t    var result = new Intersection(),\n\t        length = points.length,\n\t        b1, b2, inter;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      b1 = points[i];\n\t      b2 = points[(i + 1) % length];\n\t      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects another polygon\n\t   * @static\n\t   * @param {Array} points1\n\t   * @param {Array} points2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n\t    var result = new Intersection(),\n\t        length = points1.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var a1 = points1[i],\n\t          a2 = points1[(i + 1) % length],\n\t          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects rectangle\n\t   * @static\n\t   * @param {Array} points\n\t   * @param {fabric.Point} r1\n\t   * @param {fabric.Point} r2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n\t    var min = r1.min(r2),\n\t        max = r1.max(r2),\n\t        topRight = new fabric.Point(max.x, min.y),\n\t        bottomLeft = new fabric.Point(min.x, max.y),\n\t        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n\t        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n\t        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n\t        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n\t        result = new Intersection();\n\t\n\t    result.appendPoints(inter1.points);\n\t    result.appendPoints(inter2.points);\n\t    result.appendPoints(inter3.points);\n\t    result.appendPoints(inter4.points);\n\t\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Color) {\n\t    fabric.warn('fabric.Color is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Color class\n\t   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n\t   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n\t   *\n\t   * @class fabric.Color\n\t   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n\t   * @return {fabric.Color} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n\t   */\n\t  function Color(color) {\n\t    if (!color) {\n\t      this.setSource([0, 0, 0, 1]);\n\t    }\n\t    else {\n\t      this._tryParsingColor(color);\n\t    }\n\t  }\n\t\n\t  fabric.Color = Color;\n\t\n\t  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {String|Array} color Color value to parse\n\t     */\n\t    _tryParsingColor: function(color) {\n\t      var source;\n\t\n\t      if (color in Color.colorNameMap) {\n\t        color = Color.colorNameMap[color];\n\t      }\n\t\n\t      if (color === 'transparent') {\n\t        source = [255, 255, 255, 0];\n\t      }\n\t\n\t      if (!source) {\n\t        source = Color.sourceFromHex(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromRgb(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromHsl(color);\n\t      }\n\t      if (!source) {\n\t        //if color is not recognize let's make black as canvas does\n\t        source = [0, 0, 0, 1];\n\t      }\n\t      if (source) {\n\t        this.setSource(source);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t     * @private\n\t     * @param {Number} r Red color value\n\t     * @param {Number} g Green color value\n\t     * @param {Number} b Blue color value\n\t     * @return {Array} Hsl color\n\t     */\n\t    _rgbToHsl: function(r, g, b) {\n\t      r /= 255; g /= 255; b /= 255;\n\t\n\t      var h, s, l,\n\t          max = fabric.util.array.max([r, g, b]),\n\t          min = fabric.util.array.min([r, g, b]);\n\t\n\t      l = (max + min) / 2;\n\t\n\t      if (max === min) {\n\t        h = s = 0; // achromatic\n\t      }\n\t      else {\n\t        var d = max - min;\n\t        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t        switch (max) {\n\t          case r:\n\t            h = (g - b) / d + (g < b ? 6 : 0);\n\t            break;\n\t          case g:\n\t            h = (b - r) / d + 2;\n\t            break;\n\t          case b:\n\t            h = (r - g) / d + 4;\n\t            break;\n\t        }\n\t        h /= 6;\n\t      }\n\t\n\t      return [\n\t        Math.round(h * 360),\n\t        Math.round(s * 100),\n\t        Math.round(l * 100)\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @return {Array}\n\t     */\n\t    getSource: function() {\n\t      return this._source;\n\t    },\n\t\n\t    /**\n\t     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @param {Array} source\n\t     */\n\t    setSource: function(source) {\n\t      this._source = source;\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in RGB format\n\t     * @return {String} ex: rgb(0-255,0-255,0-255)\n\t     */\n\t    toRgb: function() {\n\t      var source = this.getSource();\n\t      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in RGBA format\n\t     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n\t     */\n\t    toRgba: function() {\n\t      var source = this.getSource();\n\t      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in HSL format\n\t     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n\t     */\n\t    toHsl: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in HSLA format\n\t     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n\t     */\n\t    toHsla: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in HEX format\n\t     * @return {String} ex: FF5555\n\t     */\n\t    toHex: function() {\n\t      var source = this.getSource(), r, g, b;\n\t\n\t      r = source[0].toString(16);\n\t      r = (r.length === 1) ? ('0' + r) : r;\n\t\n\t      g = source[1].toString(16);\n\t      g = (g.length === 1) ? ('0' + g) : g;\n\t\n\t      b = source[2].toString(16);\n\t      b = (b.length === 1) ? ('0' + b) : b;\n\t\n\t      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Returns color representation in HEXA format\n\t     * @return {String} ex: FF5555CC\n\t     */\n\t    toHexa: function() {\n\t      var source = this.getSource(), a;\n\t\n\t      a = source[3] * 255;\n\t      a = a.toString(16);\n\t      a = (a.length === 1) ? ('0' + a) : a;\n\t\n\t      return this.toHex() + a.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Gets value of alpha channel for this color\n\t     * @return {Number} 0-1\n\t     */\n\t    getAlpha: function() {\n\t      return this.getSource()[3];\n\t    },\n\t\n\t    /**\n\t     * Sets value of alpha channel for this color\n\t     * @param {Number} alpha Alpha value 0-1\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    setAlpha: function(alpha) {\n\t      var source = this.getSource();\n\t      source[3] = alpha;\n\t      this.setSource(source);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its grayscale representation\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toGrayscale: function() {\n\t      var source = this.getSource(),\n\t          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n\t          currentAlpha = source[3];\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its black and white representation\n\t     * @param {Number} threshold\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toBlackWhite: function(threshold) {\n\t      var source = this.getSource(),\n\t          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n\t          currentAlpha = source[3];\n\t\n\t      threshold = threshold || 127;\n\t\n\t      average = (Number(average) < Number(threshold)) ? 0 : 255;\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Overlays color with another color\n\t     * @param {String|fabric.Color} otherColor\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    overlayWith: function(otherColor) {\n\t      if (!(otherColor instanceof Color)) {\n\t        otherColor = new Color(otherColor);\n\t      }\n\t\n\t      var result = [],\n\t          alpha = this.getAlpha(),\n\t          otherAlpha = 0.5,\n\t          source = this.getSource(),\n\t          otherSource = otherColor.getSource();\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n\t      }\n\t\n\t      result[3] = alpha;\n\t      this.setSource(result);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\t\n\t  /**\n\t   * Map of the 17 basic color names with HEX code\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n\t   */\n\t  fabric.Color.colorNameMap = {\n\t    aqua:    '#00FFFF',\n\t    black:   '#000000',\n\t    blue:    '#0000FF',\n\t    fuchsia: '#FF00FF',\n\t    gray:    '#808080',\n\t    grey:    '#808080',\n\t    green:   '#008000',\n\t    lime:    '#00FF00',\n\t    maroon:  '#800000',\n\t    navy:    '#000080',\n\t    olive:   '#808000',\n\t    orange:  '#FFA500',\n\t    purple:  '#800080',\n\t    red:     '#FF0000',\n\t    silver:  '#C0C0C0',\n\t    teal:    '#008080',\n\t    white:   '#FFFFFF',\n\t    yellow:  '#FFFF00'\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @param {Number} p\n\t   * @param {Number} q\n\t   * @param {Number} t\n\t   * @return {Number}\n\t   */\n\t  function hue2rgb(p, q, t) {\n\t    if (t < 0) {\n\t      t += 1;\n\t    }\n\t    if (t > 1) {\n\t      t -= 1;\n\t    }\n\t    if (t < 1 / 6) {\n\t      return p + (q - p) * 6 * t;\n\t    }\n\t    if (t < 1 / 2) {\n\t      return q;\n\t    }\n\t    if (t < 2 / 3) {\n\t      return p + (q - p) * (2 / 3 - t) * 6;\n\t    }\n\t    return p;\n\t  }\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGB format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgb = function(color) {\n\t    return Color.fromSource(Color.sourceFromRgb(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromRgb = function(color) {\n\t    var match = color.match(Color.reRGBa);\n\t    if (match) {\n\t      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n\t          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n\t          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\t\n\t      return [\n\t        parseInt(r, 10),\n\t        parseInt(g, 10),\n\t        parseInt(b, 10),\n\t        match[4] ? parseFloat(match[4]) : 1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGBA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgba = Color.fromRgb;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSL format\n\t   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n\t   * @memberOf fabric.Color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsl = function(color) {\n\t    return Color.fromSource(Color.sourceFromHsl(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n\t   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n\t   * @return {Array} source\n\t   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n\t   */\n\t  fabric.Color.sourceFromHsl = function(color) {\n\t    var match = color.match(Color.reHSLa);\n\t    if (!match) {\n\t      return;\n\t    }\n\t\n\t    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n\t        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n\t        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n\t        r, g, b;\n\t\n\t    if (s === 0) {\n\t      r = g = b = l;\n\t    }\n\t    else {\n\t      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n\t          p = l * 2 - q;\n\t\n\t      r = hue2rgb(p, q, h + 1 / 3);\n\t      g = hue2rgb(p, q, h);\n\t      b = hue2rgb(p, q, h - 1 / 3);\n\t    }\n\t\n\t    return [\n\t      Math.round(r * 255),\n\t      Math.round(g * 255),\n\t      Math.round(b * 255),\n\t      match[4] ? parseFloat(match[4]) : 1\n\t    ];\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSLA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsla = Color.fromHsl;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: FF5555\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHex = function(color) {\n\t    return Color.fromSource(Color.sourceFromHex(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromHex = function(color) {\n\t    if (color.match(Color.reHex)) {\n\t      var value = color.slice(color.indexOf('#') + 1),\n\t          isShortNotation = (value.length === 3 || value.length === 4),\n\t          isRGBa = (value.length === 8 || value.length === 4),\n\t          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n\t          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n\t          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n\t          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\t\n\t      return [\n\t        parseInt(r, 16),\n\t        parseInt(g, 16),\n\t        parseInt(b, 16),\n\t        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {Array} source\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromSource = function(source) {\n\t    var oColor = new Color();\n\t    oColor.setSource(source);\n\t    return oColor;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /* _FROM_SVG_START_ */\n\t  function getColorStop(el) {\n\t    var style = el.getAttribute('style'),\n\t        offset = el.getAttribute('offset') || 0,\n\t        color, colorAlpha, opacity;\n\t\n\t    // convert percents to absolute values\n\t    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n\t    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\t    if (style) {\n\t      var keyValuePairs = style.split(/\\s*;\\s*/);\n\t\n\t      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n\t        keyValuePairs.pop();\n\t      }\n\t\n\t      for (var i = keyValuePairs.length; i--; ) {\n\t\n\t        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n\t            key = split[0].trim(),\n\t            value = split[1].trim();\n\t\n\t        if (key === 'stop-color') {\n\t          color = value;\n\t        }\n\t        else if (key === 'stop-opacity') {\n\t          opacity = value;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!color) {\n\t      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n\t    }\n\t    if (!opacity) {\n\t      opacity = el.getAttribute('stop-opacity');\n\t    }\n\t\n\t    color = new fabric.Color(color);\n\t    colorAlpha = color.getAlpha();\n\t    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n\t    opacity *= colorAlpha;\n\t\n\t    return {\n\t      offset: offset,\n\t      color: color.toRgb(),\n\t      opacity: opacity\n\t    };\n\t  }\n\t\n\t  function getLinearCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('x1') || 0,\n\t      y1: el.getAttribute('y1') || 0,\n\t      x2: el.getAttribute('x2') || '100%',\n\t      y2: el.getAttribute('y2') || 0\n\t    };\n\t  }\n\t\n\t  function getRadialCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n\t      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n\t      r1: 0,\n\t      x2: el.getAttribute('cx') || '50%',\n\t      y2: el.getAttribute('cy') || '50%',\n\t      r2: el.getAttribute('r') || '50%'\n\t    };\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * Gradient class\n\t   * @class fabric.Gradient\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n\t   * @see {@link fabric.Gradient#initialize} for constructor definition\n\t   */\n\t  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\t\n\t    /**\n\t     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options || (options = { });\n\t\n\t      var coords = { };\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.type = options.type || 'linear';\n\t\n\t      coords = {\n\t        x1: options.coords.x1 || 0,\n\t        y1: options.coords.y1 || 0,\n\t        x2: options.coords.x2 || 0,\n\t        y2: options.coords.y2 || 0\n\t      };\n\t\n\t      if (this.type === 'radial') {\n\t        coords.r1 = options.coords.r1 || 0;\n\t        coords.r2 = options.coords.r2 || 0;\n\t      }\n\t      this.coords = coords;\n\t      this.colorStops = options.colorStops.slice();\n\t      if (options.gradientTransform) {\n\t        this.gradientTransform = options.gradientTransform;\n\t      }\n\t      this.offsetX = options.offsetX || this.offsetX;\n\t      this.offsetY = options.offsetY || this.offsetY;\n\t    },\n\t\n\t    /**\n\t     * Adds another colorStop\n\t     * @param {Object} colorStop Object with offset and color\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    addColorStop: function(colorStops) {\n\t      for (var position in colorStops) {\n\t        var color = new fabric.Color(colorStops[position]);\n\t        this.colorStops.push({\n\t          offset: parseFloat(position),\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a gradient\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object}\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = {\n\t        type: this.type,\n\t        coords: this.coords,\n\t        colorStops: this.colorStops,\n\t        offsetX: this.offsetX,\n\t        offsetY: this.offsetY,\n\t        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n\t      };\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an gradient\n\t     * @param {Object} object Object to create a gradient for\n\t     * @return {String} SVG representation of an gradient (linear/radial)\n\t     */\n\t    toSVG: function(object) {\n\t      var coords = clone(this.coords, true),\n\t          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n\t          needsSwap = coords.r1 > coords.r2;\n\t      // colorStops must be sorted ascending\n\t      colorStops.sort(function(a, b) {\n\t        return a.offset - b.offset;\n\t      });\n\t\n\t      if (!(object.group && object.group.type === 'path-group')) {\n\t        for (var prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += this.offsetX - object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += this.offsetY - object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      commonAttributes = 'id=\"SVGID_' + this.id +\n\t                     '\" gradientUnits=\"userSpaceOnUse\"';\n\t      if (this.gradientTransform) {\n\t        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n\t      }\n\t      if (this.type === 'linear') {\n\t        markup = [\n\t          '<linearGradient ',\n\t          commonAttributes,\n\t          ' x1=\"', coords.x1,\n\t          '\" y1=\"', coords.y1,\n\t          '\" x2=\"', coords.x2,\n\t          '\" y2=\"', coords.y2,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t      else if (this.type === 'radial') {\n\t        // svg radial gradient has just 1 radius. the biggest.\n\t        markup = [\n\t          '<radialGradient ',\n\t          commonAttributes,\n\t          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n\t          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n\t          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n\t          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n\t          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t\n\t      if (this.type === 'radial') {\n\t        if (needsSwap) {\n\t          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n\t          colorStops = colorStops.concat();\n\t          colorStops.reverse();\n\t          for (var i = 0; i < colorStops.length; i++) {\n\t            colorStops[i].offset = 1 - colorStops[i].offset;\n\t          }\n\t        }\n\t        var minRadius = Math.min(coords.r1, coords.r2);\n\t        if (minRadius > 0) {\n\t          // i have to shift all colorStops and add new one in 0.\n\t          var maxRadius = Math.max(coords.r1, coords.r2),\n\t              percentageShift = minRadius / maxRadius;\n\t          for (var i = 0; i < colorStops.length; i++) {\n\t            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < colorStops.length; i++) {\n\t        var colorStop = colorStops[i];\n\t        markup.push(\n\t          '<stop ',\n\t            'offset=\"', (colorStop.offset * 100) + '%',\n\t            '\" style=\"stop-color:', colorStop.color,\n\t            (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\t\n\t      return markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns an instance of CanvasGradient\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Object} object\n\t     * @return {CanvasGradient}\n\t     */\n\t    toLive: function(ctx, object) {\n\t      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\t\n\t      if (!this.type) {\n\t        return;\n\t      }\n\t\n\t      if (object.group && object.group.type === 'path-group') {\n\t        for (prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += -this.offsetX + object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += -this.offsetY + object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this.type === 'linear') {\n\t        gradient = ctx.createLinearGradient(\n\t          coords.x1, coords.y1, coords.x2, coords.y2);\n\t      }\n\t      else if (this.type === 'radial') {\n\t        gradient = ctx.createRadialGradient(\n\t          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n\t      }\n\t\n\t      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n\t        var color = this.colorStops[i].color,\n\t            opacity = this.colorStops[i].opacity,\n\t            offset = this.colorStops[i].offset;\n\t\n\t        if (typeof opacity !== 'undefined') {\n\t          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n\t        }\n\t        gradient.addColorStop(offset, color);\n\t      }\n\t\n\t      return gradient;\n\t    }\n\t  });\n\t\n\t  fabric.util.object.extend(fabric.Gradient, {\n\t\n\t    /* _FROM_SVG_START_ */\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from an SVG element\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {SVGGradientElement} el SVG gradient element\n\t     * @param {fabric.Object} instance\n\t     * @return {fabric.Gradient} Gradient instance\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n\t     */\n\t    fromElement: function(el, instance) {\n\t\n\t      /**\n\t       *  @example:\n\t       *\n\t       *  <linearGradient id=\"linearGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\"/>\n\t       *    <stop offset=\"100%\" stop-color=\"black\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <linearGradient id=\"linearGrad2\">\n\t       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n\t       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n\t       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *  </radialGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad2\">\n\t       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n\t       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n\t       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n\t       *  </radialGradient>\n\t       *\n\t       */\n\t\n\t      var colorStopEls = el.getElementsByTagName('stop'),\n\t          type,\n\t          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n\t          gradientTransform = el.getAttribute('gradientTransform'),\n\t          colorStops = [],\n\t          coords, ellipseMatrix;\n\t\n\t      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n\t        type = 'linear';\n\t      }\n\t      else {\n\t        type = 'radial';\n\t      }\n\t\n\t      if (type === 'linear') {\n\t        coords = getLinearCoords(el);\n\t      }\n\t      else if (type === 'radial') {\n\t        coords = getRadialCoords(el);\n\t      }\n\t\n\t      for (var i = colorStopEls.length; i--; ) {\n\t        colorStops.push(getColorStop(colorStopEls[i]));\n\t      }\n\t\n\t      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\t\n\t      var gradient = new fabric.Gradient({\n\t        type: type,\n\t        coords: coords,\n\t        colorStops: colorStops,\n\t        offsetX: -instance.left,\n\t        offsetY: -instance.top\n\t      });\n\t\n\t      if (gradientTransform || ellipseMatrix !== '') {\n\t        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n\t      }\n\t      return gradient;\n\t    },\n\t    /* _FROM_SVG_END_ */\n\t\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from its object representation\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {Object} obj\n\t     * @param {Object} [options] Options object\n\t     */\n\t    forObject: function(obj, options) {\n\t      options || (options = { });\n\t      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\t      return new fabric.Gradient(options);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n\t    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n\t    for (var prop in options) {\n\t      if (options[prop] === 'Infinity') {\n\t        options[prop] = 1;\n\t      }\n\t      else if (options[prop] === '-Infinity') {\n\t        options[prop] = 0;\n\t      }\n\t      propValue = parseFloat(options[prop], 10);\n\t      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n\t        multFactor = 0.01;\n\t      }\n\t      else {\n\t        multFactor = 1;\n\t      }\n\t      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n\t      }\n\t      else if (prop === 'y1' || prop === 'y2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n\t      }\n\t      options[prop] = propValue * multFactor + addFactor;\n\t    }\n\t    if (object.type === 'ellipse' &&\n\t        options.r2 !== null &&\n\t        gradientUnits === 'objectBoundingBox' &&\n\t        object.rx !== object.ry) {\n\t\n\t      var scaleFactor = object.ry / object.rx;\n\t      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\t      if (options.y1) {\n\t        options.y1 /= scaleFactor;\n\t      }\n\t      if (options.y2) {\n\t        options.y2 /= scaleFactor;\n\t      }\n\t    }\n\t    return ellipseMatrix;\n\t  }\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  'use strict';\n\t\n\t  var toFixed = fabric.util.toFixed;\n\t\n\t  /**\n\t   * Pattern class\n\t   * @class fabric.Pattern\n\t   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n\t   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n\t   * @see {@link fabric.Pattern#initialize} for constructor definition\n\t   */\n\t\n\t\n\t  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\t\n\t    /**\n\t     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @type String\n\t     * @default\n\t     */\n\t    repeat: 'repeat',\n\t\n\t    /**\n\t     * Pattern horizontal offset from object's left/top corner\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Pattern vertical offset from object's left/top corner\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [callback] function to invoke after callback init.\n\t     * @return {fabric.Pattern} thisArg\n\t     */\n\t    initialize: function(options, callback) {\n\t      options || (options = { });\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.setOptions(options);\n\t      if (!options.source || (options.source && typeof options.source !== 'string')) {\n\t        callback && callback(this);\n\t        return;\n\t      }\n\t      // function string\n\t      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n\t        this.source = new Function(fabric.util.getFunctionBody(options.source));\n\t        callback && callback(this);\n\t      }\n\t      else {\n\t        // img src string\n\t        var _this = this;\n\t        this.source = fabric.util.createImage();\n\t        fabric.util.loadImage(options.source, function(img) {\n\t          _this.source = img;\n\t          callback && callback(_this);\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a pattern\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of a pattern instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          source, object;\n\t\n\t      // callback\n\t      if (typeof this.source === 'function') {\n\t        source = String(this.source);\n\t      }\n\t      // <img> element\n\t      else if (typeof this.source.src === 'string') {\n\t        source = this.source.src;\n\t      }\n\t      // <canvas> element\n\t      else if (typeof this.source === 'object' && this.source.toDataURL) {\n\t        source = this.source.toDataURL();\n\t      }\n\t\n\t      object = {\n\t        type: 'pattern',\n\t        source: source,\n\t        repeat: this.repeat,\n\t        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n\t        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n\t      };\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a pattern\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a pattern\n\t     */\n\t    toSVG: function(object) {\n\t      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n\t          patternWidth = patternSource.width / object.width,\n\t          patternHeight = patternSource.height / object.height,\n\t          patternOffsetX = this.offsetX / object.width,\n\t          patternOffsetY = this.offsetY / object.height,\n\t          patternImgSrc = '';\n\t      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n\t        patternHeight = 1;\n\t      }\n\t      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n\t        patternWidth = 1;\n\t      }\n\t      if (patternSource.src) {\n\t        patternImgSrc = patternSource.src;\n\t      }\n\t      else if (patternSource.toDataURL) {\n\t        patternImgSrc = patternSource.toDataURL();\n\t      }\n\t\n\t      return '<pattern id=\"SVGID_' + this.id +\n\t                    '\" x=\"' + patternOffsetX +\n\t                    '\" y=\"' + patternOffsetY +\n\t                    '\" width=\"' + patternWidth +\n\t                    '\" height=\"' + patternHeight + '\">\\n' +\n\t               '<image x=\"0\" y=\"0\"' +\n\t                      ' width=\"' + patternSource.width +\n\t                      '\" height=\"' + patternSource.height +\n\t                      '\" xlink:href=\"' + patternImgSrc +\n\t               '\"></image>\\n' +\n\t             '</pattern>\\n';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    setOptions: function(options) {\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns an instance of CanvasPattern\n\t     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n\t     * @return {CanvasPattern}\n\t     */\n\t    toLive: function(ctx) {\n\t      var source = typeof this.source === 'function' ? this.source() : this.source;\n\t\n\t      // if the image failed to load, return, and allow rest to continue loading\n\t      if (!source) {\n\t        return '';\n\t      }\n\t\n\t      // if an image\n\t      if (typeof source.src !== 'undefined') {\n\t        if (!source.complete) {\n\t          return '';\n\t        }\n\t        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n\t          return '';\n\t        }\n\t      }\n\t      return ctx.createPattern(source, this.repeat);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Shadow) {\n\t    fabric.warn('fabric.Shadow is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Shadow class\n\t   * @class fabric.Shadow\n\t   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n\t   * @see {@link fabric.Shadow#initialize} for constructor definition\n\t   */\n\t  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\t\n\t    /**\n\t     * Shadow color\n\t     * @type String\n\t     * @default\n\t     */\n\t    color: 'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Shadow blur\n\t     * @type Number\n\t     */\n\t    blur: 0,\n\t\n\t    /**\n\t     * Shadow horizontal offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Shadow vertical offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Whether the shadow should affect stroke operations\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    affectStroke: false,\n\t\n\t    /**\n\t     * Indicates whether toObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @return {fabric.Shadow} thisArg\n\t     */\n\t    initialize: function(options) {\n\t\n\t      if (typeof options === 'string') {\n\t        options = this._parseShadow(options);\n\t      }\n\t\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.id = fabric.Object.__uid++;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} shadow Shadow value to parse\n\t     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n\t     */\n\t    _parseShadow: function(shadow) {\n\t      var shadowStr = shadow.trim(),\n\t          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n\t          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\t\n\t      return {\n\t        color: color.trim(),\n\t        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n\t        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n\t        blur: parseInt(offsetsAndBlur[3], 10) || 0\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n\t     * @return {String} Returns CSS3 text-shadow declaration\n\t     */\n\t    toString: function() {\n\t      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a shadow\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a shadow\n\t     */\n\t    toSVG: function(object) {\n\t      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          offset = fabric.util.rotateVector(\n\t            { x: this.offsetX, y: this.offsetY },\n\t            fabric.util.degreesToRadians(-object.angle)),\n\t          BLUR_BOX = 20;\n\t\n\t      if (object.width && object.height) {\n\t        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n\t        // we add some extra space to filter box to contain the blur ( 20 )\n\t        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t      }\n\t      if (object.flipX) {\n\t        offset.x *= -1;\n\t      }\n\t      if (object.flipY) {\n\t        offset.y *= -1;\n\t      }\n\t      return (\n\t        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n\t          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n\t          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n\t            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n\t          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n\t          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n\t          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n\t          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n\t          '\\t<feMerge>\\n' +\n\t            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n\t            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n\t          '\\t</feMerge>\\n' +\n\t        '</filter>\\n');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns object representation of a shadow\n\t     * @return {Object} Object representation of a shadow instance\n\t     */\n\t    toObject: function() {\n\t      if (this.includeDefaultValues) {\n\t        return {\n\t          color: this.color,\n\t          blur: this.blur,\n\t          offsetX: this.offsetX,\n\t          offsetY: this.offsetY,\n\t          affectStroke: this.affectStroke\n\t        };\n\t      }\n\t      var obj = { }, proto = fabric.Shadow.prototype;\n\t\n\t      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n\t        if (this[prop] !== proto[prop]) {\n\t          obj[prop] = this[prop];\n\t        }\n\t      }, this);\n\t\n\t      return obj;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Shadow\n\t   */\n\t  // eslint-disable-next-line max-len\n\t  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function () {\n\t\n\t  'use strict';\n\t\n\t  if (fabric.StaticCanvas) {\n\t    fabric.warn('fabric.StaticCanvas is already defined.');\n\t    return;\n\t  }\n\t\n\t  // aliases for faster resolution\n\t  var extend = fabric.util.object.extend,\n\t      getElementOffset = fabric.util.getElementOffset,\n\t      removeFromArray = fabric.util.removeFromArray,\n\t      toFixed = fabric.util.toFixed,\n\t      transformPoint = fabric.util.transformPoint,\n\t      invertTransform = fabric.util.invertTransform,\n\t\n\t      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\t\n\t  /**\n\t   * Static canvas class\n\t   * @class fabric.StaticCanvas\n\t   * @mixes fabric.Collection\n\t   * @mixes fabric.Observable\n\t   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n\t   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n\t   * @fires before:render\n\t   * @fires after:render\n\t   * @fires canvas:cleared\n\t   * @fires object:added\n\t   * @fires object:removed\n\t   */\n\t  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t    },\n\t\n\t    /**\n\t     * Background color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    backgroundColor: '',\n\t\n\t    /**\n\t     * Background image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n\t     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    backgroundImage: null,\n\t\n\t    /**\n\t     * Overlay color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n\t     * @since 1.3.9\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    overlayColor: '',\n\t\n\t    /**\n\t     * Overlay image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n\t     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    overlayImage: null,\n\t\n\t    /**\n\t     * Indicates whether toObject/toDatalessObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Indicates whether objects' state should be saved\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    stateful: false,\n\t\n\t    /**\n\t     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n\t     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n\t     * (followed by a manual rendering after addition/deletion)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    renderOnAddRemove: true,\n\t\n\t    /**\n\t     * Function that determines clipping of entire canvas area\n\t     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n\t     * @type Function\n\t     * @default\n\t     */\n\t    clipTo: null,\n\t\n\t    /**\n\t     * Indicates whether object controls (borders/controls) are rendered above overlay image\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    controlsAboveOverlay: false,\n\t\n\t    /**\n\t     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    allowTouchScrolling: false,\n\t\n\t    /**\n\t     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    imageSmoothingEnabled: true,\n\t\n\t    /**\n\t     * The transformation (in the format of Canvas transform) which focuses the viewport\n\t     * @type Array\n\t     * @default\n\t     */\n\t    viewportTransform: fabric.iMatrix.concat(),\n\t\n\t    /**\n\t     * if set to false background image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    backgroundVpt: true,\n\t\n\t    /**\n\t     * if set to false overlya image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    overlayVpt: true,\n\t\n\t    /**\n\t     * Callback; invoked right before object is about to be scaled/rotated\n\t     */\n\t    onBeforeScaleRotate: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    /**\n\t     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n\t     */\n\t    enableRetinaScaling: true,\n\t\n\t    /**\n\t     * Describe canvas element extension over design\n\t     * properties are tl,tr,bl,br.\n\t     * if canvas is not zoomed/panned those points are the four corner of canvas\n\t     * if canvas is viewportTransformed you those points indicate the extension\n\t     * of canvas element in plain untrasformed coordinates\n\t     * The coordinates get updated with @method calcViewportBoundaries.\n\t     * @memberOf fabric.StaticCanvas.prototype\n\t     */\n\t    vptCoords: { },\n\t\n\t    /**\n\t     * Based on vptCoords and object.aCoords, skip rendering of objects that\n\t     * are not included in current viewport.\n\t     * May greatly help in applications with crowded canvas and use of zoom/pan\n\t     * If One of the corner of the bounding box of the object is on the canvas\n\t     * the objects get rendered.\n\t     * @memberOf fabric.StaticCanvas.prototype\n\t     */\n\t    skipOffscreen: false,\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initStatic: function(el, options) {\n\t      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n\t      this._objects = [];\n\t      this._createLowerCanvas(el);\n\t      this._initOptions(options);\n\t      this._setImageSmoothing();\n\t      // only initialize retina scaling once\n\t      if (!this.interactive) {\n\t        this._initRetinaScaling();\n\t      }\n\t\n\t      if (options.overlayImage) {\n\t        this.setOverlayImage(options.overlayImage, cb);\n\t      }\n\t      if (options.backgroundImage) {\n\t        this.setBackgroundImage(options.backgroundImage, cb);\n\t      }\n\t      if (options.backgroundColor) {\n\t        this.setBackgroundColor(options.backgroundColor, cb);\n\t      }\n\t      if (options.overlayColor) {\n\t        this.setOverlayColor(options.overlayColor, cb);\n\t      }\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _isRetinaScaling: function() {\n\t      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} retinaScaling if applied, otherwise 1;\n\t     */\n\t    getRetinaScaling: function() {\n\t      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initRetinaScaling: function() {\n\t      if (!this._isRetinaScaling()) {\n\t        return;\n\t      }\n\t      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t\n\t      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    },\n\t\n\t    /**\n\t     * Calculates canvas element offset relative to the document\n\t     * This method is also attached as \"resize\" event handler of window\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    calcOffset: function () {\n\t      this._offset = getElementOffset(this.lowerCanvasEl);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n\t     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n\t     * @example <caption>Normal overlayImage with left/top = 0</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage with different properties</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage loaded from cross-origin</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setOverlayImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage with different properties</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage loaded from cross-origin</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setBackgroundImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n\t     * @example <caption>Normal overlayColor - color value</caption>\n\t     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setOverlayColor: function(overlayColor, callback) {\n\t      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundColor - color value</caption>\n\t     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setBackgroundColor: function(backgroundColor, callback) {\n\t      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n\t     */\n\t    _setImageSmoothing: function() {\n\t      var ctx = this.getContext();\n\t\n\t      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n\t        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n\t      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n\t     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n\t     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n\t     */\n\t    __setBgOverlayImage: function(property, image, callback, options) {\n\t      if (typeof image === 'string') {\n\t        fabric.util.loadImage(image, function(img) {\n\t          img && (this[property] = new fabric.Image(img, options));\n\t          callback && callback(img);\n\t        }, this, options && options.crossOrigin);\n\t      }\n\t      else {\n\t        options && image.setOptions(options);\n\t        this[property] = image;\n\t        callback && callback(image);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n\t     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n\t     * @param {(Object|String|null)} color Object with pattern information, color value or null\n\t     * @param {Function} [callback] Callback is invoked when color is set\n\t     */\n\t    __setBgOverlayColor: function(property, color, callback) {\n\t      this[property] = color;\n\t      this._initGradient(color, property);\n\t      this._initPattern(color, property, callback);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCanvasElement: function(canvasEl) {\n\t      var element = fabric.util.createCanvasElement(canvasEl);\n\t      if (!element.style) {\n\t        element.style = { };\n\t      }\n\t      if (!element) {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      if (typeof element.getContext === 'undefined') {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      return element;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initOptions: function (options) {\n\t      this._setOptions(options);\n\t\n\t      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n\t      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\t\n\t      if (!this.lowerCanvasEl.style) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.width = this.width;\n\t      this.lowerCanvasEl.height = this.height;\n\t\n\t      this.lowerCanvasEl.style.width = this.width + 'px';\n\t      this.lowerCanvasEl.style.height = this.height + 'px';\n\t\n\t      this.viewportTransform = this.viewportTransform.slice();\n\t    },\n\t\n\t    /**\n\t     * Creates a bottom canvas\n\t     * @private\n\t     * @param {HTMLElement} [canvasEl]\n\t     */\n\t    _createLowerCanvas: function (canvasEl) {\n\t      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\t\n\t      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\t\n\t      if (this.interactive) {\n\t        this._applyCanvasStyle(this.lowerCanvasEl);\n\t      }\n\t\n\t      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * Returns canvas width (in px)\n\t     * @return {Number}\n\t     */\n\t    getWidth: function () {\n\t      return this.width;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas height (in px)\n\t     * @return {Number}\n\t     */\n\t    getHeight: function () {\n\t      return this.height;\n\t    },\n\t\n\t    /**\n\t     * Sets width of this canvas instance\n\t     * @param {Number|String} value                         Value to set width to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setWidth: function (value, options) {\n\t      return this.setDimensions({ width: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets height of this canvas instance\n\t     * @param {Number|String} value                         Value to set height to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setHeight: function (value, options) {\n\t      return this.setDimensions({ height: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n\t     * @param {Object}        dimensions                    Object with width/height properties\n\t     * @param {Number|String} [dimensions.width]            Width of canvas element\n\t     * @param {Number|String} [dimensions.height]           Height of canvas element\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setDimensions: function (dimensions, options) {\n\t      var cssValue;\n\t\n\t      options = options || {};\n\t\n\t      for (var prop in dimensions) {\n\t        cssValue = dimensions[prop];\n\t\n\t        if (!options.cssOnly) {\n\t          this._setBackstoreDimension(prop, dimensions[prop]);\n\t          cssValue += 'px';\n\t        }\n\t\n\t        if (!options.backstoreOnly) {\n\t          this._setCssDimension(prop, cssValue);\n\t        }\n\t      }\n\t      this._initRetinaScaling();\n\t      this._setImageSmoothing();\n\t      this.calcOffset();\n\t\n\t      if (!options.cssOnly) {\n\t        this.renderAll();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {Number} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setBackstoreDimension: function (prop, value) {\n\t      this.lowerCanvasEl[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl[prop] = value;\n\t      }\n\t\n\t      if (this.cacheCanvasEl) {\n\t        this.cacheCanvasEl[prop] = value;\n\t      }\n\t\n\t      this[prop] = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting css width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {String} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setCssDimension: function (prop, value) {\n\t      this.lowerCanvasEl.style[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.style[prop] = value;\n\t      }\n\t\n\t      if (this.wrapperEl) {\n\t        this.wrapperEl.style[prop] = value;\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas zoom level\n\t     * @return {Number}\n\t     */\n\t    getZoom: function () {\n\t      return this.viewportTransform[0];\n\t    },\n\t\n\t    /**\n\t     * Sets viewport transform of this canvas instance\n\t     * @param {Array} vpt the transform in the form of context.transform\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setViewportTransform: function (vpt) {\n\t      var activeGroup = this._activeGroup, object, ignoreVpt = false, skipAbsolute = true;\n\t      this.viewportTransform = vpt;\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        object = this._objects[i];\n\t        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n\t      }\n\t      if (activeGroup) {\n\t        activeGroup.setCoords(ignoreVpt, skipAbsolute);\n\t      }\n\t      this.calcViewportBoundaries();\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance, zoom centered around point\n\t     * @param {fabric.Point} point to zoom with respect to\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    zoomToPoint: function (point, value) {\n\t      // TODO: just change the scale, preserve other transformations\n\t      var before = point, vpt = this.viewportTransform.slice(0);\n\t      point = transformPoint(point, invertTransform(this.viewportTransform));\n\t      vpt[0] = value;\n\t      vpt[3] = value;\n\t      var after = transformPoint(point, vpt);\n\t      vpt[4] += before.x - after.x;\n\t      vpt[5] += before.y - after.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setZoom: function (value) {\n\t      this.zoomToPoint(new fabric.Point(0, 0), value);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pan viewport so as to place point at top left corner of canvas\n\t     * @param {fabric.Point} point to move to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    absolutePan: function (point) {\n\t      var vpt = this.viewportTransform.slice(0);\n\t      vpt[4] = -point.x;\n\t      vpt[5] = -point.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Pans viewpoint relatively\n\t     * @param {fabric.Point} point (position vector) to move by\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    relativePan: function (point) {\n\t      return this.absolutePan(new fabric.Point(\n\t        -point.x - this.viewportTransform[4],\n\t        -point.y - this.viewportTransform[5]\n\t      ));\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element corresponding to this instance\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getElement: function () {\n\t      return this.lowerCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was added\n\t     */\n\t    _onObjectAdded: function(obj) {\n\t      this.stateful && obj.setupState();\n\t      obj._set('canvas', this);\n\t      obj.setCoords();\n\t      this.fire('object:added', { target: obj });\n\t      obj.fire('added');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      this.fire('object:removed', { target: obj });\n\t      obj.fire('removed');\n\t      delete obj.canvas;\n\t    },\n\t\n\t    /**\n\t     * Clears specified context of canvas element\n\t     * @param {CanvasRenderingContext2D} ctx Context to clear\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clearContext: function(ctx) {\n\t      ctx.clearRect(0, 0, this.width, this.height);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where objects are drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getContext: function () {\n\t      return this.contextContainer;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this._objects.length = 0;\n\t      this.backgroundImage = null;\n\t      this.overlayImage = null;\n\t      this.backgroundColor = '';\n\t      this.overlayColor = '';\n\t      if (this._hasITextHandlers) {\n\t        this.off('mouse:up', this._mouseUpITextHandler);\n\t        this._iTextInstances = null;\n\t        this._hasITextHandlers = false;\n\t      }\n\t      this.clearContext(this.contextContainer);\n\t      this.fire('canvas:cleared');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders the canvas\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._objects);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n\t     * helps to determinate when an object is in the current rendering viewport using\n\t     * object absolute coordinates ( aCoords )\n\t     * @return {Object} points.tl\n\t     * @chainable\n\t     */\n\t    calcViewportBoundaries: function() {\n\t      var points = { }, width = this.getWidth(), height = this.getHeight(),\n\t          iVpt = invertTransform(this.viewportTransform);\n\t      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n\t      points.br = transformPoint({ x: width, y: height }, iVpt);\n\t      points.tr = new fabric.Point(points.br.x, points.tl.y);\n\t      points.bl = new fabric.Point(points.tl.x, points.br.y);\n\t      this.vptCoords = points;\n\t      return points;\n\t    },\n\t\n\t    /**\n\t     * Renders background, objects, overlay and controls.\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {Array} objects to render\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderCanvas: function(ctx, objects) {\n\t      this.calcViewportBoundaries();\n\t      this.clearContext(ctx);\n\t      this.fire('before:render');\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, ctx);\n\t      }\n\t      this._renderBackground(ctx);\n\t\n\t      ctx.save();\n\t      //apply viewport transform once for all rendering process\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      this._renderObjects(ctx, objects);\n\t      ctx.restore();\n\t      if (!this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      if (this.clipTo) {\n\t        ctx.restore();\n\t      }\n\t      this._renderOverlay(ctx);\n\t      if (this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      this.fire('after:render');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Array} objects to render\n\t     */\n\t    _renderObjects: function(ctx, objects) {\n\t      for (var i = 0, length = objects.length; i < length; ++i) {\n\t        objects[i] && objects[i].render(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {string} property 'background' or 'overlay'\n\t     */\n\t    _renderBackgroundOrOverlay: function(ctx, property) {\n\t      var object = this[property + 'Color'];\n\t      if (object) {\n\t        ctx.fillStyle = object.toLive\n\t          ? object.toLive(ctx, this)\n\t          : object;\n\t\n\t        ctx.fillRect(\n\t          object.offsetX || 0,\n\t          object.offsetY || 0,\n\t          this.width,\n\t          this.height);\n\t      }\n\t      object = this[property + 'Image'];\n\t      if (object) {\n\t        if (this[property + 'Vpt']) {\n\t          ctx.save();\n\t          ctx.transform.apply(ctx, this.viewportTransform);\n\t        }\n\t        object.render(ctx);\n\t        this[property + 'Vpt'] && ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'background');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderOverlay: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'overlay');\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a center of canvas.\n\t     * Returned value is an object with top and left properties\n\t     * @return {Object} object with \"top\" and \"left\" number values\n\t     */\n\t    getCenter: function () {\n\t      return {\n\t        top: this.getHeight() / 2,\n\t        left: this.getWidth() / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    centerObjectH: function (object) {\n\t      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObjectV: function (object) {\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObject: function(object) {\n\t      var center = this.getCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(center.left, center.top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the viewport\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObject: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, vpCenter);\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectH: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object Vertically in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectV: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n\t    },\n\t\n\t    /**\n\t     * Calculate the point in canvas that correspond to the center of actual viewport.\n\t     * @return {fabric.Point} vpCenter, viewport center\n\t     * @chainable\n\t     */\n\t    getVpCenter: function() {\n\t      var center = this.getCenter(),\n\t          iVpt = invertTransform(this.viewportTransform);\n\t      return transformPoint({ x: center.left, y: center.top }, iVpt);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} object Object to center\n\t     * @param {fabric.Point} center Center point\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    _centerObject: function(object, center) {\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returs dataless JSON representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {String} json string\n\t     */\n\t    toDatalessJSON: function (propertiesToInclude) {\n\t      return this.toDatalessObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjectMethod: function (methodName, propertiesToInclude) {\n\t\n\t      var data = {\n\t        objects: this._toObjects(methodName, propertiesToInclude)\n\t      };\n\t\n\t      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\t\n\t      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjects: function(methodName, propertiesToInclude) {\n\t      return this.getObjects().filter(function(object) {\n\t        return !object.excludeFromExport;\n\t      }).map(function(instance) {\n\t        return this._toObject(instance, methodName, propertiesToInclude);\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      var originalValue;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        originalValue = instance.includeDefaultValues;\n\t        instance.includeDefaultValues = false;\n\t      }\n\t\n\t      var object = instance[methodName](propertiesToInclude);\n\t      if (!this.includeDefaultValues) {\n\t        instance.includeDefaultValues = originalValue;\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n\t      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\t\n\t      if (this.backgroundColor) {\n\t        data.background = this.backgroundColor.toObject\n\t          ? this.backgroundColor.toObject(propertiesToInclude)\n\t          : this.backgroundColor;\n\t      }\n\t\n\t      if (this.overlayColor) {\n\t        data.overlay = this.overlayColor.toObject\n\t          ? this.overlayColor.toObject(propertiesToInclude)\n\t          : this.overlayColor;\n\t      }\n\t      if (bgImage && !bgImage.excludeFromExport) {\n\t        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n\t      }\n\t      if (overlay && !overlay.excludeFromExport) {\n\t        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n\t      }\n\t\n\t      return data;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n\t     * a zoomed canvas will then produce zoomed SVG output.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    svgViewportTransformation: true,\n\t\n\t    /**\n\t     * Returns SVG representation of canvas\n\t     * @function\n\t     * @param {Object} [options] Options object for SVG output\n\t     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n\t     * @param {Object} [options.viewBox] SVG viewbox object\n\t     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n\t     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n\t     * @param {Number} [options.viewBox.width] Width of viewbox\n\t     * @param {Number} [options.viewBox.height] Height of viewbox\n\t     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n\t     * @param {String} [options.width] desired width of svg with or without units\n\t     * @param {String} [options.height] desired height of svg with or without units\n\t     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n\t     * @return {String} SVG string\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n\t     * @example <caption>Normal SVG output</caption>\n\t     * var svg = canvas.toSVG();\n\t     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n\t     * var svg = canvas.toSVG({suppressPreamble: true});\n\t     * @example <caption>SVG output with viewBox attribute</caption>\n\t     * var svg = canvas.toSVG({\n\t     *   viewBox: {\n\t     *     x: 100,\n\t     *     y: 100,\n\t     *     width: 200,\n\t     *     height: 300\n\t     *   }\n\t     * });\n\t     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n\t     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n\t     * @example <caption>Modify SVG output with reviver function</caption>\n\t     * var svg = canvas.toSVG(null, function(svg) {\n\t     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n\t     * });\n\t     */\n\t    toSVG: function(options, reviver) {\n\t      options || (options = { });\n\t\n\t      var markup = [];\n\t\n\t      this._setSVGPreamble(markup, options);\n\t      this._setSVGHeader(markup, options);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n\t      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\t\n\t      this._setSVGObjects(markup, reviver);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'overlayColor');\n\t      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\t\n\t      markup.push('</svg>');\n\t\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGPreamble: function(markup, options) {\n\t      if (options.suppressPreamble) {\n\t        return;\n\t      }\n\t      markup.push(\n\t        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n\t          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n\t            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGHeader: function(markup, options) {\n\t      var width = options.width || this.width,\n\t          height = options.height || this.height,\n\t          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t      if (options.viewBox) {\n\t        viewBox = 'viewBox=\"' +\n\t                options.viewBox.x + ' ' +\n\t                options.viewBox.y + ' ' +\n\t                options.viewBox.width + ' ' +\n\t                options.viewBox.height + '\" ';\n\t      }\n\t      else {\n\t        if (this.svgViewportTransformation) {\n\t          vpt = this.viewportTransform;\n\t          viewBox = 'viewBox=\"' +\n\t                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n\t        }\n\t      }\n\t\n\t      markup.push(\n\t        '<svg ',\n\t          'xmlns=\"http://www.w3.org/2000/svg\" ',\n\t          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n\t          'version=\"1.1\" ',\n\t          'width=\"', width, '\" ',\n\t          'height=\"', height, '\" ',\n\t          viewBox,\n\t          'xml:space=\"preserve\">\\n',\n\t        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n\t        '<defs>\\n',\n\t          this.createSVGFontFacesMarkup(),\n\t          this.createSVGRefElementsMarkup(),\n\t        '</defs>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n\t     * @return {String}\n\t     */\n\t    createSVGRefElementsMarkup: function() {\n\t      var _this = this,\n\t          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n\t            var fill = _this[prop];\n\t            if (fill && fill.toLive) {\n\t              return fill.toSVG(_this, false);\n\t            }\n\t          });\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG font faces,\n\t     * font URLs for font faces must be collected by developers\n\t     * and are not extracted from the DOM by fabricjs\n\t     * @param {Array} objects Array of fabric objects\n\t     * @return {String}\n\t     */\n\t    createSVGFontFacesMarkup: function() {\n\t      var markup = '', fontList = { }, obj, fontFamily,\n\t          style, row, rowIndex, _char, charIndex,\n\t          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        obj = objects[i];\n\t        fontFamily = obj.fontFamily;\n\t        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n\t          continue;\n\t        }\n\t        fontList[fontFamily] = true;\n\t        if (!obj.styles) {\n\t          continue;\n\t        }\n\t        style = obj.styles;\n\t        for (rowIndex in style) {\n\t          row = style[rowIndex];\n\t          for (charIndex in row) {\n\t            _char = row[charIndex];\n\t            fontFamily = _char.fontFamily;\n\t            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n\t              fontList[fontFamily] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var j in fontList) {\n\t        markup += [\n\t          '\\t\\t@font-face {\\n',\n\t          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n\t          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n\t          '\\t\\t}\\n'\n\t        ].join('');\n\t      }\n\t\n\t      if (markup) {\n\t        markup = [\n\t          '\\t<style type=\"text/css\">',\n\t          '<![CDATA[\\n',\n\t          markup,\n\t          ']]>',\n\t          '</style>\\n'\n\t        ].join('');\n\t      }\n\t\n\t      return markup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObjects: function(markup, reviver) {\n\t      var instance;\n\t      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n\t        instance = objects[i];\n\t        if (instance.excludeFromExport) {\n\t          continue;\n\t        }\n\t        this._setSVGObject(markup, instance, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * push single object svg representation in the markup\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      markup.push(instance.toSVG(reviver));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayImage: function(markup, property, reviver) {\n\t      if (this[property] && this[property].toSVG) {\n\t        markup.push(this[property].toSVG(reviver));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayColor: function(markup, property) {\n\t      var filler = this[property];\n\t      if (!filler) {\n\t        return;\n\t      }\n\t      if (filler.toLive) {\n\t        var repeat = filler.repeat;\n\t        markup.push(\n\t          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n\t            ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n\t            'width=\"',\n\t              (repeat === 'repeat-y' || repeat === 'no-repeat'\n\t                ? filler.source.width\n\t                : this.width),\n\t            '\" height=\"',\n\t              (repeat === 'repeat-x' || repeat === 'no-repeat'\n\t                ? filler.source.height\n\t                : this.height),\n\t            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t      else {\n\t        markup.push(\n\t          '<rect x=\"0\" y=\"0\" ',\n\t            'width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" fill=\"', this[property], '\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the bottom of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send to back\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendToBack: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.unshift(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.unshift(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the top of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringToFront: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.push(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.push(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection down in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendBackwards: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs, objsMoved = 0;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx > 0 + objsMoved) {\n\t            newIdx = idx - 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t          objsMoved++;\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== 0) {\n\t          // if object is not on the bottom of stack\n\t          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewLowerIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse down the stack looking for the nearest intersecting object\n\t        for (var i = idx - 1; i >= 0; --i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx - 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection up in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringForward: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs, objsMoved = 0;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx < this._objects.length - 1 - objsMoved) {\n\t            newIdx = idx + 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t          objsMoved++;\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== this._objects.length - 1) {\n\t          // if object is not on top of stack (last item in an array)\n\t          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewUpperIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse up the stack looking for the nearest intersecting object\n\t        for (var i = idx + 1; i < this._objects.length; ++i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx + 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object to specified level in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Number} index Position to move to\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    moveTo: function (object, index) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.splice(index, 0, object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.clear();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function () {\n\t      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n\t               '{ objects: ' + this.getObjects().length + ' }>';\n\t    }\n\t  });\n\t\n\t  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n\t  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n\t  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\t\n\t  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\t\n\t    /**\n\t     * @static\n\t     * @type String\n\t     * @default\n\t     */\n\t    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\t\n\t    /**\n\t     * Provides a way to check support of some of the canvas methods\n\t     * (either those of HTMLCanvasElement itself, or rendering context)\n\t     *\n\t     * @param {String} methodName Method to check support for;\n\t     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n\t     * @return {Boolean | null} `true` if method is supported (or at least exists),\n\t     *                          `null` if canvas element or context can not be initialized\n\t     */\n\t    supports: function (methodName) {\n\t      var el = fabric.util.createCanvasElement();\n\t\n\t      if (!el || !el.getContext) {\n\t        return null;\n\t      }\n\t\n\t      var ctx = el.getContext('2d');\n\t      if (!ctx) {\n\t        return null;\n\t      }\n\t\n\t      switch (methodName) {\n\t\n\t        case 'getImageData':\n\t          return typeof ctx.getImageData !== 'undefined';\n\t\n\t        case 'setLineDash':\n\t          return typeof ctx.setLineDash !== 'undefined';\n\t\n\t        case 'toDataURL':\n\t          return typeof el.toDataURL !== 'undefined';\n\t\n\t        case 'toDataURLWithQuality':\n\t          try {\n\t            el.toDataURL('image/jpeg', 0);\n\t            return true;\n\t          }\n\t          catch (e) { }\n\t          return false;\n\t\n\t        default:\n\t          return null;\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns JSON representation of canvas\n\t   * @function\n\t   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t   * @return {String} JSON string\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n\t   * @example <caption>JSON without additional properties</caption>\n\t   * var json = canvas.toJSON();\n\t   * @example <caption>JSON with additional properties included</caption>\n\t   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n\t   * @example <caption>JSON without default values</caption>\n\t   * canvas.includeDefaultValues = false;\n\t   * var json = canvas.toJSON();\n\t   */\n\t  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\t\n\t})();\n\t\n\t\n\t/**\n\t * BaseBrush class\n\t * @class fabric.BaseBrush\n\t * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n\t */\n\tfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\t\n\t  /**\n\t   * Color of a brush\n\t   * @type String\n\t   * @default\n\t   */\n\t  color: 'rgb(0, 0, 0)',\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 1,\n\t\n\t  /**\n\t   * Shadow object representing shadow of this shape.\n\t   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n\t   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n\t   * @type fabric.Shadow\n\t   * @default\n\t   */\n\t  shadow: null,\n\t\n\t  /**\n\t   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineCap: 'round',\n\t\n\t  /**\n\t   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineJoin: 'round',\n\t\n\t  /**\n\t   * Stroke Dash Array.\n\t   * @type Array\n\t   * @default\n\t   */\n\t  strokeDashArray: null,\n\t\n\t  /**\n\t   * Sets shadow of an object\n\t   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  setShadow: function(options) {\n\t    this.shadow = new fabric.Shadow(options);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   * @private\n\t   */\n\t  _setBrushStyles: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.strokeStyle = this.color;\n\t    ctx.lineWidth = this.width;\n\t    ctx.lineCap = this.strokeLineCap;\n\t    ctx.lineJoin = this.strokeLineJoin;\n\t    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n\t      ctx.setLineDash(this.strokeDashArray);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets brush shadow styles\n\t   * @private\n\t   */\n\t  _setShadow: function() {\n\t    if (!this.shadow) {\n\t      return;\n\t    }\n\t\n\t    var ctx = this.canvas.contextTop,\n\t        zoom = this.canvas.getZoom();\n\t\n\t    ctx.shadowColor = this.shadow.color;\n\t    ctx.shadowBlur = this.shadow.blur * zoom;\n\t    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n\t    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n\t  },\n\t\n\t  /**\n\t   * Removes brush shadow styles\n\t   * @private\n\t   */\n\t  _resetShadow: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = '';\n\t    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * PencilBrush class\n\t   * @class fabric.PencilBrush\n\t   * @extends fabric.BaseBrush\n\t   */\n\t  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {fabric.Canvas} canvas\n\t     * @return {fabric.PencilBrush} Instance of a pencil brush\n\t     */\n\t    initialize: function(canvas) {\n\t      this.canvas = canvas;\n\t      this._points = [];\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse down\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseDown: function(pointer) {\n\t      this._prepareForDrawing(pointer);\n\t      // capture coordinates immediately\n\t      // this allows to draw dots (when movement never occurs)\n\t      this._captureDrawingPath(pointer);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse move\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseMove: function(pointer) {\n\t      this._captureDrawingPath(pointer);\n\t      // redraw curve\n\t      // clear top canvas\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Invoked on mouse up\n\t     */\n\t    onMouseUp: function() {\n\t      this._finalizeAndAddPath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _prepareForDrawing: function(pointer) {\n\t\n\t      var p = new fabric.Point(pointer.x, pointer.y);\n\t\n\t      this._reset();\n\t      this._addPoint(p);\n\t\n\t      this.canvas.contextTop.moveTo(p.x, p.y);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Point} point Point to be added to points array\n\t     */\n\t    _addPoint: function(point) {\n\t      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n\t        return;\n\t      }\n\t      this._points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Clear points array and set contextTop canvas style.\n\t     * @private\n\t     */\n\t    _reset: function() {\n\t      this._points.length = 0;\n\t\n\t      this._setBrushStyles();\n\t      this._setShadow();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _captureDrawingPath: function(pointer) {\n\t      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n\t      this._addPoint(pointerPoint);\n\t    },\n\t\n\t    /**\n\t     * Draw a smooth path on the topCanvas using quadraticCurveTo\n\t     * @private\n\t     */\n\t    _render: function() {\n\t      var ctx  = this.canvas.contextTop, i, len,\n\t          v = this.canvas.viewportTransform,\n\t          p1 = this._points[0],\n\t          p2 = this._points[1];\n\t\n\t      ctx.save();\n\t      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t      ctx.beginPath();\n\t\n\t      //if we only have 2 points in the path and they are the same\n\t      //it means that the user only clicked the canvas without moving the mouse\n\t      //then we should be drawing a dot. A path isn't drawn between two identical dots\n\t      //that's why we set them apart a bit\n\t      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n\t        var width = this.width / 1000;\n\t        p1 = new fabric.Point(p1.x, p1.y);\n\t        p2 = new fabric.Point(p2.x, p2.y);\n\t        p1.x -= width;\n\t        p2.x += width;\n\t      }\n\t      ctx.moveTo(p1.x, p1.y);\n\t\n\t      for (i = 1, len = this._points.length; i < len; i++) {\n\t        // we pick the point between pi + 1 & pi + 2 as the\n\t        // end point and p1 as our control point.\n\t        var midPoint = p1.midPointFrom(p2);\n\t        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\t\n\t        p1 = this._points[i];\n\t        p2 = this._points[i + 1];\n\t      }\n\t      // Draw last line as a straight line while\n\t      // we wait for the next point to be able to calculate\n\t      // the bezier control point\n\t      ctx.lineTo(p1.x, p1.y);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Converts points to SVG path\n\t     * @param {Array} points Array of points\n\t     * @return {String} SVG path\n\t     */\n\t    convertPointsToSVGPath: function(points) {\n\t      var path = [], i, width = this.width / 1000,\n\t          p1 = new fabric.Point(points[0].x, points[0].y),\n\t          p2 = new fabric.Point(points[1].x, points[1].y),\n\t          len = points.length, multSignX, multSignY, manyPoints = len > 2;\n\t\n\t      if (manyPoints) {\n\t        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n\t        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n\t      }\n\t      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n\t      for (i = 1; i < len; i++) {\n\t        if (!p1.eq(p2)) {\n\t          var midPoint = p1.midPointFrom(p2);\n\t          // p1 is our bezier control point\n\t          // midpoint is our endpoint\n\t          // start point is p(i-1) value.\n\t          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n\t        }\n\t        p1 = points[i];\n\t        if ((i + 1) < points.length) {\n\t          p2 = points[i + 1];\n\t        }\n\t      }\n\t      if (manyPoints) {\n\t        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n\t        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n\t      }\n\t      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * Creates fabric.Path object to add on canvas\n\t     * @param {String} pathData Path data\n\t     * @return {fabric.Path} Path to add on canvas\n\t     */\n\t    createPath: function(pathData) {\n\t      var path = new fabric.Path(pathData, {\n\t        fill: null,\n\t        stroke: this.color,\n\t        strokeWidth: this.width,\n\t        strokeLineCap: this.strokeLineCap,\n\t        strokeLineJoin: this.strokeLineJoin,\n\t        strokeDashArray: this.strokeDashArray,\n\t      });\n\t      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n\t      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n\t      path.top = position.y;\n\t      path.left = position.x;\n\t      if (this.shadow) {\n\t        this.shadow.affectStroke = true;\n\t        path.setShadow(this.shadow);\n\t      }\n\t\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * On mouseup after drawing the path on contextTop canvas\n\t     * we use the points captured to create an new fabric path object\n\t     * and add it to the fabric canvas.\n\t     */\n\t    _finalizeAndAddPath: function() {\n\t      var ctx = this.canvas.contextTop;\n\t      ctx.closePath();\n\t\n\t      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\t      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n\t        // do not create 0 width/height paths, as they are\n\t        // rendered inconsistently across browsers\n\t        // Firefox 4, for example, renders a dot,\n\t        // whereas Chrome 10 renders nothing\n\t        this.canvas.renderAll();\n\t        return;\n\t      }\n\t\n\t      var path = this.createPath(pathData);\n\t\n\t      this.canvas.add(path);\n\t      path.setCoords();\n\t\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._resetShadow();\n\t      this.canvas.renderAll();\n\t\n\t      // fire event 'path' created\n\t      this.canvas.fire('path:created', { path: path });\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t/**\n\t * CircleBrush class\n\t * @class fabric.CircleBrush\n\t */\n\tfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 10,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.CircleBrush} Instance of a circle brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.points = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked inside on mouse down and mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  drawDot: function(pointer) {\n\t    var point = this.addPoint(pointer),\n\t        ctx = this.canvas.contextTop,\n\t        v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    ctx.fillStyle = point.fill;\n\t    ctx.beginPath();\n\t    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n\t    ctx.closePath();\n\t    ctx.fill();\n\t\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.points.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var circles = [];\n\t\n\t    for (var i = 0, len = this.points.length; i < len; i++) {\n\t      var point = this.points[i],\n\t          circle = new fabric.Circle({\n\t            radius: point.radius,\n\t            left: point.x,\n\t            top: point.y,\n\t            originX: 'center',\n\t            originY: 'center',\n\t            fill: point.fill\n\t          });\n\t\n\t      this.shadow && circle.setShadow(this.shadow);\n\t\n\t      circles.push(circle);\n\t    }\n\t    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   * @return {fabric.Point} Just added pointer point\n\t   */\n\t  addPoint: function(pointer) {\n\t    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\t\n\t        circleRadius = fabric.util.getRandomInt(\n\t                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\t\n\t        circleColor = new fabric.Color(this.color)\n\t                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n\t                        .toRgba();\n\t\n\t    pointerPoint.radius = circleRadius;\n\t    pointerPoint.fill = circleColor;\n\t\n\t    this.points.push(pointerPoint);\n\t\n\t    return pointerPoint;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * SprayBrush class\n\t * @class fabric.SprayBrush\n\t */\n\tfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a spray\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:              10,\n\t\n\t  /**\n\t   * Density of a spray (number of dots per chunk)\n\t   * @type Number\n\t   * @default\n\t   */\n\t  density:            20,\n\t\n\t  /**\n\t   * Width of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidth:           1,\n\t\n\t  /**\n\t   * Width variance of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidthVariance:   1,\n\t\n\t  /**\n\t   * Whether opacity of a dot should be random\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  randomOpacity:        false,\n\t\n\t  /**\n\t   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  optimizeOverlapping:  true,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.SprayBrush} Instance of a spray brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.sprayChunks = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.sprayChunks.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var rects = [];\n\t\n\t    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n\t      var sprayChunk = this.sprayChunks[i];\n\t\n\t      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\t\n\t        var rect = new fabric.Rect({\n\t          width: sprayChunk[j].width,\n\t          height: sprayChunk[j].width,\n\t          left: sprayChunk[j].x + 1,\n\t          top: sprayChunk[j].y + 1,\n\t          originX: 'center',\n\t          originY: 'center',\n\t          fill: this.color\n\t        });\n\t\n\t        this.shadow && rect.setShadow(this.shadow);\n\t        rects.push(rect);\n\t      }\n\t    }\n\t\n\t    if (this.optimizeOverlapping) {\n\t      rects = this._getOptimizedRects(rects);\n\t    }\n\t\n\t    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} rects\n\t   */\n\t  _getOptimizedRects: function(rects) {\n\t\n\t    // avoid creating duplicate rects at the same coordinates\n\t    var uniqueRects = { }, key;\n\t\n\t    for (var i = 0, len = rects.length; i < len; i++) {\n\t      key = rects[i].left + '' + rects[i].top;\n\t      if (!uniqueRects[key]) {\n\t        uniqueRects[key] = rects[i];\n\t      }\n\t    }\n\t    var uniqueRectsArray = [];\n\t    for (key in uniqueRects) {\n\t      uniqueRectsArray.push(uniqueRects[key]);\n\t    }\n\t\n\t    return uniqueRectsArray;\n\t  },\n\t\n\t  /**\n\t   * Renders brush\n\t   */\n\t  render: function() {\n\t    var ctx = this.canvas.contextTop;\n\t    ctx.fillStyle = this.color;\n\t\n\t    var v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n\t      var point = this.sprayChunkPoints[i];\n\t      if (typeof point.opacity !== 'undefined') {\n\t        ctx.globalAlpha = point.opacity;\n\t      }\n\t      ctx.fillRect(point.x, point.y, point.width, point.width);\n\t    }\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   */\n\t  addSprayChunk: function(pointer) {\n\t    this.sprayChunkPoints = [];\n\t\n\t    var x, y, width, radius = this.width / 2;\n\t\n\t    for (var i = 0; i < this.density; i++) {\n\t\n\t      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n\t      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\t\n\t      if (this.dotWidthVariance) {\n\t        width = fabric.util.getRandomInt(\n\t          // bottom clamp width to 1\n\t          Math.max(1, this.dotWidth - this.dotWidthVariance),\n\t          this.dotWidth + this.dotWidthVariance);\n\t      }\n\t      else {\n\t        width = this.dotWidth;\n\t      }\n\t\n\t      var point = new fabric.Point(x, y);\n\t      point.width = width;\n\t\n\t      if (this.randomOpacity) {\n\t        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n\t      }\n\t\n\t      this.sprayChunkPoints.push(point);\n\t    }\n\t\n\t    this.sprayChunks.push(this.sprayChunkPoints);\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * PatternBrush class\n\t * @class fabric.PatternBrush\n\t * @extends fabric.BaseBrush\n\t */\n\tfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\t\n\t  getPatternSrc: function() {\n\t\n\t    var dotWidth = 20,\n\t        dotDistance = 5,\n\t        patternCanvas = fabric.document.createElement('canvas'),\n\t        patternCtx = patternCanvas.getContext('2d');\n\t\n\t    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\t\n\t    patternCtx.fillStyle = this.color;\n\t    patternCtx.beginPath();\n\t    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n\t    patternCtx.closePath();\n\t    patternCtx.fill();\n\t\n\t    return patternCanvas;\n\t  },\n\t\n\t  getPatternSrcFunction: function() {\n\t    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n\t  },\n\t\n\t  /**\n\t   * Creates \"pattern\" instance property\n\t   */\n\t  getPattern: function() {\n\t    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   */\n\t  _setBrushStyles: function() {\n\t    this.callSuper('_setBrushStyles');\n\t    this.canvas.contextTop.strokeStyle = this.getPattern();\n\t  },\n\t\n\t  /**\n\t   * Creates path\n\t   */\n\t  createPath: function(pathData) {\n\t    var path = this.callSuper('createPath', pathData),\n\t        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\t\n\t    path.stroke = new fabric.Pattern({\n\t      source: this.source || this.getPatternSrcFunction(),\n\t      offsetX: -topLeft.x,\n\t      offsetY: -topLeft.y\n\t    });\n\t    return path;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var getPointer = fabric.util.getPointer,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      radiansToDegrees = fabric.util.radiansToDegrees,\n\t      atan2 = Math.atan2,\n\t      abs = Math.abs,\n\t      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t\n\t      STROKE_OFFSET = 0.5;\n\t\n\t  /**\n\t   * Canvas class\n\t   * @class fabric.Canvas\n\t   * @extends fabric.StaticCanvas\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n\t   * @see {@link fabric.Canvas#initialize} for constructor definition\n\t   *\n\t   * @fires object:added\n\t   * @fires object:modified\n\t   * @fires object:rotating\n\t   * @fires object:scaling\n\t   * @fires object:moving\n\t   * @fires object:selected\n\t   *\n\t   * @fires before:selection:cleared\n\t   * @fires selection:cleared\n\t   * @fires selection:created\n\t   *\n\t   * @fires path:created\n\t   * @fires mouse:down\n\t   * @fires mouse:move\n\t   * @fires mouse:up\n\t   * @fires mouse:over\n\t   * @fires mouse:out\n\t   *\n\t   */\n\t  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t      this._initInteractive();\n\t      this._createCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * When true, objects can be transformed by one side (unproportionally)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    uniScaleTransform:      false,\n\t\n\t    /**\n\t     * Indicates which key enable unproportional scaling\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    uniScaleKey:           'shiftKey',\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of scale transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:        false,\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of rotate transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:       false,\n\t\n\t    /**\n\t     * Indicates which key enable centered Transfrom\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    centeredKey:           'altKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternate action on corner\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    altActionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates that canvas is interactive. This property should not be changed.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    interactive:            true,\n\t\n\t    /**\n\t     * Indicates whether group selection should be enabled\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selection:              true,\n\t\n\t    /**\n\t     * Indicates which key enable multiple click selection\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternative selection\n\t     * in case of target overlapping with active object\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.5\n\t     * @type null|String\n\t     * @default\n\t     */\n\t    altSelectionKey:           null,\n\t\n\t    /**\n\t     * Color of selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\t\n\t    /**\n\t     * Default dash array pattern\n\t     * If not empty the selection border is dashed\n\t     * @type Array\n\t     */\n\t    selectionDashArray:     [],\n\t\n\t    /**\n\t     * Color of the border of selection (usually slightly darker than color of selection itself)\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\t\n\t    /**\n\t     * Width of a line used in object/group selection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionLineWidth:     1,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:            'move',\n\t\n\t    /**\n\t     * Default cursor value used when moving an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:             'move',\n\t\n\t    /**\n\t     * Default cursor value used for the entire canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    defaultCursor:          'default',\n\t\n\t    /**\n\t     * Cursor value used during free drawing\n\t     * @type String\n\t     * @default\n\t     */\n\t    freeDrawingCursor:      'crosshair',\n\t\n\t    /**\n\t     * Cursor value used for rotation point\n\t     * @type String\n\t     * @default\n\t     */\n\t    rotationCursor:         'crosshair',\n\t\n\t    /**\n\t     * Default element class that's given to wrapper (div) element of canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    containerClass:         'canvas-container',\n\t\n\t    /**\n\t     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:     false,\n\t\n\t    /**\n\t     * Number of pixels around target pixel to tolerate (consider active) during object detection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    targetFindTolerance:    0,\n\t\n\t    /**\n\t     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    skipTargetFind:         false,\n\t\n\t    /**\n\t     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n\t     * After mousedown, mousemove creates a shape,\n\t     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isDrawingMode:          false,\n\t\n\t    /**\n\t     * Indicates whether objects should remain in current stack position when selected.\n\t     * When false objects are brought to top and rendered as part of the selection group\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    preserveObjectStacking: false,\n\t\n\t    /**\n\t     * Indicates the angle that an object will lock to while rotating.\n\t     * @type Number\n\t     * @since 1.6.7\n\t     * @default\n\t     */\n\t    snapAngle: 0,\n\t\n\t    /**\n\t     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n\t     * When `null`, the snapThreshold will default to the snapAngle.\n\t     * @type null|Number\n\t     * @since 1.6.7\n\t     * @default\n\t     */\n\t    snapThreshold: null,\n\t\n\t    /**\n\t     * Indicates if the right click on canvas can output the context menu or not\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    stopContextMenu: false,\n\t\n\t    /**\n\t     * Indicates if the canvas can fire right click events\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    fireRightClick: false,\n\t\n\t    /**\n\t     * Indicates if the canvas can fire middle click events\n\t     * @type Boolean\n\t     * @since 1.7.8\n\t     * @default\n\t     */\n\t    fireMiddleClick: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initInteractive: function() {\n\t      this._currentTransform = null;\n\t      this._groupSelector = null;\n\t      this._initWrapperElement();\n\t      this._createUpperCanvas();\n\t      this._initEventListeners();\n\t\n\t      this._initRetinaScaling();\n\t\n\t      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\t\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Divides objects in two groups, one to render immediately\n\t     * and one to render as activeGroup.\n\t     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n\t     */\n\t    _chooseObjectsToRender: function() {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          object, objsToRender = [], activeGroupObjects = [];\n\t\n\t      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n\t        for (var i = 0, length = this._objects.length; i < length; i++) {\n\t          object = this._objects[i];\n\t          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n\t            objsToRender.push(object);\n\t          }\n\t          else {\n\t            activeGroupObjects.push(object);\n\t          }\n\t        }\n\t        if (activeGroup) {\n\t          activeGroup._set('_objects', activeGroupObjects);\n\t          objsToRender.push(activeGroup);\n\t        }\n\t        activeObject && objsToRender.push(activeObject);\n\t      }\n\t      else {\n\t        objsToRender = this._objects;\n\t      }\n\t      return objsToRender;\n\t    },\n\t\n\t    /**\n\t     * Renders both the top canvas and the secondary container canvas.\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n\t        this.clearContext(this.contextTop);\n\t        this.contextTopDirty = false;\n\t      }\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Method to render only the top canvas.\n\t     * Also used to render the group selection box.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    renderTop: function () {\n\t      var ctx = this.contextTop;\n\t      this.clearContext(ctx);\n\t\n\t      // we render the top context - last object\n\t      if (this.selection && this._groupSelector) {\n\t        this._drawSelection(ctx);\n\t      }\n\t\n\t      this.fire('after:render');\n\t      this.contextTopDirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Resets the current transform to its original values and chooses the type of resizing based on the event\n\t     * @private\n\t     */\n\t    _resetCurrentTransform: function() {\n\t      var t = this._currentTransform;\n\t\n\t      t.target.set({\n\t        scaleX: t.original.scaleX,\n\t        scaleY: t.original.scaleY,\n\t        skewX: t.original.skewX,\n\t        skewY: t.original.skewY,\n\t        left: t.original.left,\n\t        top: t.original.top\n\t      });\n\t\n\t      if (this._shouldCenterTransform(t.target)) {\n\t        if (t.action === 'rotate') {\n\t          this._setOriginToCenter(t.target);\n\t        }\n\t        else {\n\t          if (t.originX !== 'center') {\n\t            if (t.originX === 'right') {\n\t              t.mouseXSign = -1;\n\t            }\n\t            else {\n\t              t.mouseXSign = 1;\n\t            }\n\t          }\n\t          if (t.originY !== 'center') {\n\t            if (t.originY === 'bottom') {\n\t              t.mouseYSign = -1;\n\t            }\n\t            else {\n\t              t.mouseYSign = 1;\n\t            }\n\t          }\n\t\n\t          t.originX = 'center';\n\t          t.originY = 'center';\n\t        }\n\t      }\n\t      else {\n\t        t.originX = t.original.originX;\n\t        t.originY = t.original.originY;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Checks if point is contained within an area of given object\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target Object to test against\n\t     * @param {Object} [point] x,y object of point coordinates we want to check.\n\t     * @return {Boolean} true if point is contained within an area of given object\n\t     */\n\t    containsPoint: function (e, target, point) {\n\t      var ignoreZoom = true,\n\t          pointer = point || this.getPointer(e, ignoreZoom),\n\t          xy;\n\t\n\t      if (target.group && target.group === this.getActiveGroup()) {\n\t        xy = this._normalizePointer(target.group, pointer);\n\t      }\n\t      else {\n\t        xy = { x: pointer.x, y: pointer.y };\n\t      }\n\t      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n\t      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\t      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _normalizePointer: function (object, pointer) {\n\t      var m = object.calcTransformMatrix(),\n\t          invertedM = fabric.util.invertTransform(m),\n\t          vptPointer = this.restorePointerVpt(pointer);\n\t      return fabric.util.transformPoint(vptPointer, invertedM);\n\t    },\n\t\n\t    /**\n\t     * Returns true if object is transparent at a certain location\n\t     * @param {fabric.Object} target Object to check\n\t     * @param {Number} x Left coordinate\n\t     * @param {Number} y Top coordinate\n\t     * @return {Boolean}\n\t     */\n\t    isTargetTransparent: function (target, x, y) {\n\t      var hasBorders = target.hasBorders,\n\t          transparentCorners = target.transparentCorners,\n\t          ctx = this.contextCache,\n\t          originalColor = target.selectionBackgroundColor;\n\t\n\t      target.hasBorders = target.transparentCorners = false;\n\t      target.selectionBackgroundColor = '';\n\t\n\t      ctx.save();\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      target.render(ctx);\n\t      ctx.restore();\n\t\n\t      target.active && target._renderControls(ctx);\n\t\n\t      target.hasBorders = hasBorders;\n\t      target.transparentCorners = transparentCorners;\n\t      target.selectionBackgroundColor = originalColor;\n\t\n\t      var isTransparent = fabric.util.isTransparent(\n\t        ctx, x, y, this.targetFindTolerance);\n\t\n\t      this.clearContext(ctx);\n\t\n\t      return isTransparent;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldClearSelection: function (e, target) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t\n\t      return (\n\t        !target\n\t        ||\n\t        (target &&\n\t          activeGroup &&\n\t          !activeGroup.contains(target) &&\n\t          activeGroup !== target &&\n\t          !e[this.selectionKey])\n\t        ||\n\t        (target && !target.evented)\n\t        ||\n\t        (target &&\n\t          !target.selectable &&\n\t          activeObject &&\n\t          activeObject !== target)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldCenterTransform: function (target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var t = this._currentTransform,\n\t          centerTransform;\n\t\n\t      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n\t        centerTransform = this.centeredScaling || target.centeredScaling;\n\t      }\n\t      else if (t.action === 'rotate') {\n\t        centerTransform = this.centeredRotation || target.centeredRotation;\n\t      }\n\t\n\t      return centerTransform ? !t.altKey : t.altKey;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getOriginFromCorner: function(target, corner) {\n\t      var origin = {\n\t        x: target.originX,\n\t        y: target.originY\n\t      };\n\t\n\t      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n\t        origin.x = 'right';\n\t      }\n\t      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n\t        origin.x = 'left';\n\t      }\n\t\n\t      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n\t        origin.y = 'bottom';\n\t      }\n\t      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n\t        origin.y = 'top';\n\t      }\n\t\n\t      return origin;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getActionFromCorner: function(target, corner, e) {\n\t      if (!corner) {\n\t        return 'drag';\n\t      }\n\t\n\t      switch (corner) {\n\t        case 'mtr':\n\t          return 'rotate';\n\t        case 'ml':\n\t        case 'mr':\n\t          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\t        case 'mt':\n\t        case 'mb':\n\t          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\t        default:\n\t          return 'scale';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _setupCurrentTransform: function (e, target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var pointer = this.getPointer(e),\n\t          corner = target._findTargetCorner(this.getPointer(e, true)),\n\t          action = this._getActionFromCorner(target, corner, e),\n\t          origin = this._getOriginFromCorner(target, corner);\n\t\n\t      this._currentTransform = {\n\t        target: target,\n\t        action: action,\n\t        corner: corner,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        offsetX: pointer.x - target.left,\n\t        offsetY: pointer.y - target.top,\n\t        originX: origin.x,\n\t        originY: origin.y,\n\t        ex: pointer.x,\n\t        ey: pointer.y,\n\t        lastX: pointer.x,\n\t        lastY: pointer.y,\n\t        left: target.left,\n\t        top: target.top,\n\t        theta: degreesToRadians(target.angle),\n\t        width: target.width * target.scaleX,\n\t        mouseXSign: 1,\n\t        mouseYSign: 1,\n\t        shiftKey: e.shiftKey,\n\t        altKey: e[this.centeredKey]\n\t      };\n\t\n\t      this._currentTransform.original = {\n\t        left: target.left,\n\t        top: target.top,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        originX: origin.x,\n\t        originY: origin.y\n\t      };\n\t\n\t      this._resetCurrentTransform();\n\t    },\n\t\n\t    /**\n\t     * Translates object by \"setting\" its left/top\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the translation occurred\n\t     */\n\t    _translateObject: function (x, y) {\n\t      var transform = this._currentTransform,\n\t          target = transform.target,\n\t          newLeft = x - transform.offsetX,\n\t          newTop = y - transform.offsetY,\n\t          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n\t          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\t\n\t      moveX && target.set('left', newLeft);\n\t      moveY && target.set('top', newTop);\n\t      return moveX || moveY;\n\t    },\n\t\n\t    /**\n\t     * Check if we are increasing a positive skew or lower it,\n\t     * checking mouse direction and pressed corner.\n\t     * @private\n\t     */\n\t    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n\t      var property = 'originX', origins = { 0: 'center' },\n\t          skew = t.target.skewX, originA = 'left', originB = 'right',\n\t          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n\t          flipSign = 1;\n\t\n\t      mouseMove = mouseMove > 0 ? 1 : -1;\n\t      if (by === 'y') {\n\t        skew = t.target.skewY;\n\t        originA = 'top';\n\t        originB = 'bottom';\n\t        property = 'originY';\n\t      }\n\t      origins[-1] = originA;\n\t      origins[1] = originB;\n\t\n\t      t.target.flipX && (flipSign *= -1);\n\t      t.target.flipY && (flipSign *= -1);\n\t\n\t      if (skew === 0) {\n\t        t.skewSign = -corner * mouseMove * flipSign;\n\t        t[property] = origins[-mouseMove];\n\t      }\n\t      else {\n\t        skew = skew > 0 ? 1 : -1;\n\t        t.skewSign = skew;\n\t        t[property] = origins[skew * corner * flipSign];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Skew object by mouse events\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y'\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _skewObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target, skewed = false,\n\t          lockSkewingX = target.get('lockSkewingX'),\n\t          lockSkewingY = target.get('lockSkewingY');\n\t\n\t      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var center = target.getCenterPoint(),\n\t          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n\t          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n\t          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\t\n\t      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\t      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n\t      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n\t      // Actually skew the object\n\t      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n\t      t.lastX = x;\n\t      t.lastY = y;\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Set object skew\n\t     * @private\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _setObjectSkew: function(localMouse, transform, by, _dim) {\n\t      var target = transform.target, newValue, skewed = false,\n\t          skewSign = transform.skewSign, newDim, dimNoSkew,\n\t          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\t\n\t      if (by === 'x') {\n\t        otherBy = 'y';\n\t        _otherBy = 'Y';\n\t        _by = 'X';\n\t        skewX = 0;\n\t        skewY = target.skewY;\n\t      }\n\t      else {\n\t        otherBy = 'x';\n\t        _otherBy = 'X';\n\t        _by = 'Y';\n\t        skewX = target.skewX;\n\t        skewY = 0;\n\t      }\n\t\n\t      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n\t      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\t      if (newDimMouse <= 2) {\n\t        newValue = 0;\n\t      }\n\t      else {\n\t        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n\t                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n\t        newValue = fabric.util.radiansToDegrees(newValue);\n\t      }\n\t      skewed = target['skew' + _by] !== newValue;\n\t      target.set('skew' + _by, newValue);\n\t      if (target['skew' + _otherBy] !== 0) {\n\t        newDim = target._getTransformedDimensions();\n\t        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n\t        target.set('scale' + _otherBy, newValue);\n\t      }\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Scales object by invoking its scaleX/scaleY methods\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n\t     *                    When not provided, an object is scaled by both dimensions equally\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target,\n\t          lockScalingX = target.get('lockScalingX'),\n\t          lockScalingY = target.get('lockScalingY'),\n\t          lockScalingFlip = target.get('lockScalingFlip');\n\t\n\t      if (lockScalingX && lockScalingY) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n\t          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n\t          dim = target._getTransformedDimensions(), scaled = false;\n\t\n\t      this._setLocalMouse(localMouse, t);\n\t\n\t      // Actually scale the object\n\t      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\t\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n\t          changeX, changeY, scaleX, scaleY;\n\t\n\t      scaleX = localMouse.x * target.scaleX / _dim.x;\n\t      scaleY = localMouse.y * target.scaleY / _dim.y;\n\t      changeX = target.scaleX !== scaleX;\n\t      changeY = target.scaleY !== scaleY;\n\t\n\t      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n\t        forbidScalingX = true;\n\t      }\n\t\n\t      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n\t        forbidScalingY = true;\n\t      }\n\t\n\t      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n\t        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n\t      }\n\t      else if (!by) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      else if (by === 'x' && !target.get('lockUniScaling')) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t      }\n\t      else if (by === 'y' && !target.get('lockUniScaling')) {\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      transform.newScaleX = scaleX;\n\t      transform.newScaleY = scaleY;\n\t      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\t\n\t      var dist = localMouse.y + localMouse.x,\n\t          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n\t                     _dim.x * transform.original.scaleX / target.scaleX,\n\t          scaled, signX = localMouse.x / Math.abs(localMouse.x),\n\t          signY = localMouse.y / Math.abs(localMouse.y);\n\t\n\t      // We use transform.scaleX/Y instead of target.scaleX/Y\n\t      // because the object may have a min scale and we'll loose the proportions\n\t      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n\t      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n\t      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n\t      target.set('scaleX', transform.newScaleX);\n\t      target.set('scaleY', transform.newScaleY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _flipObject: function(transform, by) {\n\t      if (transform.newScaleX < 0 && by !== 'y') {\n\t        if (transform.originX === 'left') {\n\t          transform.originX = 'right';\n\t        }\n\t        else if (transform.originX === 'right') {\n\t          transform.originX = 'left';\n\t        }\n\t      }\n\t\n\t      if (transform.newScaleY < 0 && by !== 'x') {\n\t        if (transform.originY === 'top') {\n\t          transform.originY = 'bottom';\n\t        }\n\t        else if (transform.originY === 'bottom') {\n\t          transform.originY = 'top';\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setLocalMouse: function(localMouse, t) {\n\t      var target = t.target, zoom = this.getZoom(),\n\t          padding = target.padding / zoom;\n\t\n\t      if (t.originX === 'right') {\n\t        localMouse.x *= -1;\n\t      }\n\t      else if (t.originX === 'center') {\n\t        localMouse.x *= t.mouseXSign * 2;\n\t        if (localMouse.x < 0) {\n\t          t.mouseXSign = -t.mouseXSign;\n\t        }\n\t      }\n\t\n\t      if (t.originY === 'bottom') {\n\t        localMouse.y *= -1;\n\t      }\n\t      else if (t.originY === 'center') {\n\t        localMouse.y *= t.mouseYSign * 2;\n\t        if (localMouse.y < 0) {\n\t          t.mouseYSign = -t.mouseYSign;\n\t        }\n\t      }\n\t\n\t      // adjust the mouse coordinates when dealing with padding\n\t      if (abs(localMouse.x) > padding) {\n\t        if (localMouse.x < 0) {\n\t          localMouse.x += padding;\n\t        }\n\t        else {\n\t          localMouse.x -= padding;\n\t        }\n\t      }\n\t      else { // mouse is within the padding, set to 0\n\t        localMouse.x = 0;\n\t      }\n\t\n\t      if (abs(localMouse.y) > padding) {\n\t        if (localMouse.y < 0) {\n\t          localMouse.y += padding;\n\t        }\n\t        else {\n\t          localMouse.y -= padding;\n\t        }\n\t      }\n\t      else {\n\t        localMouse.y = 0;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Rotates object by invoking its rotate method\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the rotation occurred\n\t     */\n\t    _rotateObject: function (x, y) {\n\t\n\t      var t = this._currentTransform;\n\t\n\t      if (t.target.get('lockRotation')) {\n\t        return false;\n\t      }\n\t\n\t      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n\t          curAngle = atan2(y - t.top, x - t.left),\n\t          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n\t          hasRoated = true;\n\t\n\t      if (t.target.snapAngle > 0) {\n\t        var snapAngle  = t.target.snapAngle,\n\t            snapThreshold  = t.target.snapThreshold || snapAngle,\n\t            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n\t            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\t\n\t        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n\t          angle = leftAngleLocked;\n\t        }\n\t        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n\t          angle = rightAngleLocked;\n\t        }\n\t      }\n\t\n\t      // normalize angle to positive value\n\t      if (angle < 0) {\n\t        angle = 360 + angle;\n\t      }\n\t      angle %= 360;\n\t\n\t      if (t.target.angle === angle) {\n\t        hasRoated = false;\n\t      }\n\t      else {\n\t        t.target.angle = angle;\n\t      }\n\t\n\t      return hasRoated;\n\t    },\n\t\n\t    /**\n\t     * Set the cursor type of the canvas element\n\t     * @param {String} value Cursor type of the canvas element.\n\t     * @see http://www.w3.org/TR/css3-ui/#cursor\n\t     */\n\t    setCursor: function (value) {\n\t      this.upperCanvasEl.style.cursor = value;\n\t    },\n\t\n\t    /**\n\t     * @param {fabric.Object} target to reset transform\n\t     * @private\n\t     */\n\t    _resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n\t     */\n\t    _drawSelection: function (ctx) {\n\t      var groupSelector = this._groupSelector,\n\t          left = groupSelector.left,\n\t          top = groupSelector.top,\n\t          aleft = abs(left),\n\t          atop = abs(top);\n\t\n\t      if (this.selectionColor) {\n\t        ctx.fillStyle = this.selectionColor;\n\t\n\t        ctx.fillRect(\n\t          groupSelector.ex - ((left > 0) ? 0 : -left),\n\t          groupSelector.ey - ((top > 0) ? 0 : -top),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t\n\t      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n\t        return;\n\t      }\n\t      ctx.lineWidth = this.selectionLineWidth;\n\t      ctx.strokeStyle = this.selectionBorderColor;\n\t\n\t      // selection border\n\t      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\t\n\t        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\t\n\t        ctx.beginPath();\n\t\n\t        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t      else {\n\t        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\t        ctx.strokeRect(\n\t          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Method that determines what object we are clicking on\n\t     * the skipGroup parameter is for internal use, is needed for shift+click action\n\t     * @param {Event} e mouse event\n\t     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n\t     */\n\t    findTarget: function (e, skipGroup) {\n\t      if (this.skipTargetFind) {\n\t        return;\n\t      }\n\t\n\t      var ignoreZoom = true,\n\t          pointer = this.getPointer(e, ignoreZoom),\n\t          activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          activeTarget, activeTargetSubs;\n\t      // first check current group (if one exists)\n\t      // active group does not check sub targets like normal groups.\n\t      // if active group just exits.\n\t      this.targets = [];\n\t      if (activeGroup && !skipGroup && activeGroup === this._searchPossibleTargets([activeGroup], pointer)) {\n\t        this._fireOverOutEvents(activeGroup, e);\n\t        return activeGroup;\n\t      }\n\t      // if we hit the corner of an activeObject, let's return that.\n\t      if (activeObject && activeObject._findTargetCorner(pointer)) {\n\t        this._fireOverOutEvents(activeObject, e);\n\t        return activeObject;\n\t      }\n\t      if (activeObject && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n\t        if (!this.preserveObjectStacking) {\n\t          this._fireOverOutEvents(activeObject, e);\n\t          return activeObject;\n\t        }\n\t        else {\n\t          activeTarget = activeObject;\n\t          activeTargetSubs = this.targets;\n\t          this.targets = [];\n\t        }\n\t      }\n\t\n\t      var target = this._searchPossibleTargets(this._objects, pointer);\n\t      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n\t        target = activeTarget;\n\t        this.targets = activeTargetSubs;\n\t      }\n\t      this._fireOverOutEvents(target, e);\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fireOverOutEvents: function(target, e) {\n\t      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n\t      if (hoveredTarget !== target) {\n\t        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n\t        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n\t        this._hoveredTarget = target;\n\t      }\n\t      if (target) {\n\t        if (hoveredTarget !== target) {\n\t          if (hoveredTarget) {\n\t            this.fire('mouse:out', outOpt);\n\t            hoveredTarget.fire('mouseout', outOpt);\n\t          }\n\t          this.fire('mouse:over', overOpt);\n\t          target.fire('mouseover', overOpt);\n\t        }\n\t      }\n\t      else if (hoveredTarget) {\n\t        this.fire('mouse:out', outOpt);\n\t        hoveredTarget.fire('mouseout', outOpt);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _checkTarget: function(pointer, obj) {\n\t      if (obj &&\n\t          obj.visible &&\n\t          obj.evented &&\n\t          this.containsPoint(null, obj, pointer)){\n\t        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n\t          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n\t          if (!isTransparent) {\n\t            return true;\n\t          }\n\t        }\n\t        else {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _searchPossibleTargets: function(objects, pointer) {\n\t\n\t      // Cache all targets where their bounding box contains point.\n\t      var target, i = objects.length, normalizedPointer, subTarget;\n\t      // Do not check for currently grouped objects, since we check the parent group itself.\n\t      // untill we call this function specifically to search inside the activeGroup\n\t      while (i--) {\n\t        if (this._checkTarget(pointer, objects[i])) {\n\t          target = objects[i];\n\t          if (target.type === 'group' && target.subTargetCheck) {\n\t            normalizedPointer = this._normalizePointer(target, pointer);\n\t            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n\t            subTarget && this.targets.push(subTarget);\n\t          }\n\t          break;\n\t        }\n\t      }\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates without the effect of the viewport\n\t     * @param {Object} pointer with \"x\" and \"y\" number values\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    restorePointerVpt: function(pointer) {\n\t      return fabric.util.transformPoint(\n\t        pointer,\n\t        fabric.util.invertTransform(this.viewportTransform)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates relative to canvas.\n\t     * Can return coordinates with or without viewportTransform.\n\t     * ignoreZoom false gives back coordinates that represent\n\t     * the point clicked on canvas element.\n\t     * ignoreZoom true gives back coordinates after being processed\n\t     * by the viewportTransform ( sort of coordinates of what is displayed\n\t     * on the canvas where you are clicking.\n\t     * To interact with your shapes top and left you want to use ignoreZoom true\n\t     * most of the time, while ignoreZoom false will give you coordinates\n\t     * compatible with the object.oCoords system.\n\t     * of the time.\n\t     * @param {Event} e\n\t     * @param {Boolean} ignoreZoom\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n\t      if (!upperCanvasEl) {\n\t        upperCanvasEl = this.upperCanvasEl;\n\t      }\n\t      var pointer = getPointer(e),\n\t          bounds = upperCanvasEl.getBoundingClientRect(),\n\t          boundsWidth = bounds.width || 0,\n\t          boundsHeight = bounds.height || 0,\n\t          cssScale;\n\t\n\t      if (!boundsWidth || !boundsHeight ) {\n\t        if ('top' in bounds && 'bottom' in bounds) {\n\t          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n\t        }\n\t        if ('right' in bounds && 'left' in bounds) {\n\t          boundsWidth = Math.abs( bounds.right - bounds.left );\n\t        }\n\t      }\n\t\n\t      this.calcOffset();\n\t\n\t      pointer.x = pointer.x - this._offset.left;\n\t      pointer.y = pointer.y - this._offset.top;\n\t      if (!ignoreZoom) {\n\t        pointer = this.restorePointerVpt(pointer);\n\t      }\n\t\n\t      if (boundsWidth === 0 || boundsHeight === 0) {\n\t        // If bounds are not available (i.e. not visible), do not apply scale.\n\t        cssScale = { width: 1, height: 1 };\n\t      }\n\t      else {\n\t        cssScale = {\n\t          width: upperCanvasEl.width / boundsWidth,\n\t          height: upperCanvasEl.height / boundsHeight\n\t        };\n\t      }\n\t\n\t      return {\n\t        x: pointer.x * cssScale.width,\n\t        y: pointer.y * cssScale.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n\t     */\n\t    _createUpperCanvas: function () {\n\t      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.className = '';\n\t      }\n\t      else {\n\t        this.upperCanvasEl = this._createCanvasElement();\n\t      }\n\t      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\t\n\t      this.wrapperEl.appendChild(this.upperCanvasEl);\n\t\n\t      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\t      this._applyCanvasStyle(this.upperCanvasEl);\n\t      this.contextTop = this.upperCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function () {\n\t      this.cacheCanvasEl = this._createCanvasElement();\n\t      this.cacheCanvasEl.setAttribute('width', this.width);\n\t      this.cacheCanvasEl.setAttribute('height', this.height);\n\t      this.contextCache = this.cacheCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initWrapperElement: function () {\n\t      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n\t        'class': this.containerClass\n\t      });\n\t      fabric.util.setStyle(this.wrapperEl, {\n\t        width: this.getWidth() + 'px',\n\t        height: this.getHeight() + 'px',\n\t        position: 'relative'\n\t      });\n\t      fabric.util.makeElementUnselectable(this.wrapperEl);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element canvas element to apply styles on\n\t     */\n\t    _applyCanvasStyle: function (element) {\n\t      var width = this.getWidth() || element.width,\n\t          height = this.getHeight() || element.height;\n\t\n\t      fabric.util.setStyle(element, {\n\t        position: 'absolute',\n\t        width: width + 'px',\n\t        height: height + 'px',\n\t        left: 0,\n\t        top: 0,\n\t        'touch-action': 'none'\n\t      });\n\t      element.width = width;\n\t      element.height = height;\n\t      fabric.util.makeElementUnselectable(element);\n\t    },\n\t\n\t    /**\n\t     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n\t     * @private\n\t     * @param {Element} fromEl Element style is copied from\n\t     * @param {Element} toEl Element copied style is applied to\n\t     */\n\t    _copyCanvasStyle: function (fromEl, toEl) {\n\t      toEl.style.cssText = fromEl.style.cssText;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where object selection is drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getSelectionContext: function() {\n\t      return this.contextTop;\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element on which object selection is drawn\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getSelectionElement: function () {\n\t      return this.upperCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _setActiveObject: function(object) {\n\t      var obj = this._activeObject;\n\t      if (obj) {\n\t        obj.set('active', false);\n\t        if (object !== obj && obj.onDeselect && typeof obj.onDeselect === 'function') {\n\t          obj.onDeselect();\n\t        }\n\t      }\n\t      this._activeObject = object;\n\t      object.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * Sets given object as the only active object on canvas\n\t     * @param {fabric.Object} object Object to set as an active one\n\t     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveObject: function (object, e) {\n\t      var currentActiveObject = this.getActiveObject();\n\t      if (currentActiveObject && currentActiveObject !== object) {\n\t        currentActiveObject.fire('deselected', { e: e });\n\t      }\n\t      this._setActiveObject(object);\n\t      this.fire('object:selected', { target: object, e: e });\n\t      object.fire('selected', { e: e });\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active object\n\t     * @return {fabric.Object} active object\n\t     */\n\t    getActiveObject: function () {\n\t      return this._activeObject;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      // removing active object should fire \"selection:cleared\" events\n\t      if (this.getActiveObject() === obj) {\n\t        this.fire('before:selection:cleared', { target: obj });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared', { target: obj });\n\t        obj.fire('deselected');\n\t      }\n\t      if (this._hoveredTarget === obj) {\n\t        this._hoveredTarget = null;\n\t      }\n\t      this.callSuper('_onObjectRemoved', obj);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveObject: function() {\n\t      var obj = this._activeObject;\n\t      if (obj) {\n\t        obj.set('active', false);\n\t        if (obj.onDeselect && typeof obj.onDeselect === 'function') {\n\t          obj.onDeselect();\n\t        }\n\t      }\n\t      this._activeObject = null;\n\t    },\n\t\n\t    /**\n\t     * Discards currently active object and fire events. If the function is called by fabric\n\t     * as a consequence of a mouse event, the event is passed as a parmater and\n\t     * sent to the fire function for the custom events. When used as a method the\n\t     * e param does not have any application.\n\t     * @param {event} e\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveObject: function (e) {\n\t      var activeObject = this._activeObject;\n\t      if (activeObject) {\n\t        this.fire('before:selection:cleared', { target: activeObject, e: e });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared', { e: e });\n\t        activeObject.fire('deselected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Group} group\n\t     */\n\t    _setActiveGroup: function(group) {\n\t      this._activeGroup = group;\n\t      if (group) {\n\t        group.set('active', true);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets active group to a specified one. If the function is called by fabric\n\t     * as a consequence of a mouse event, the event is passed as a parmater and\n\t     * sent to the fire function for the custom events. When used as a method the\n\t     * e param does not have any application.\n\t     * @param {fabric.Group} group Group to set as a current one\n\t     * @param {Event} e Event object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveGroup: function (group, e) {\n\t      this._setActiveGroup(group);\n\t      if (group) {\n\t        this.fire('object:selected', { target: group, e: e });\n\t        group.fire('selected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active group\n\t     * @return {fabric.Group} Current group\n\t     */\n\t    getActiveGroup: function () {\n\t      return this._activeGroup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveGroup: function() {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        g.destroy();\n\t      }\n\t      this.setActiveGroup(null);\n\t    },\n\t\n\t    /**\n\t     * Discards currently active group and fire events If the function is called by fabric\n\t     * as a consequence of a mouse event, the event is passed as a parmater and\n\t     * sent to the fire function for the custom events. When used as a method the\n\t     * e param does not have any application.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveGroup: function (e) {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        this.fire('before:selection:cleared', { e: e, target: g });\n\t        this._discardActiveGroup();\n\t        this.fire('selection:cleared', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects on canvas, removing any active group or object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAll: function () {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length,\n\t          obj;\n\t      for ( ; i < len; i++) {\n\t        obj = allObjects[i];\n\t        obj && obj.set('active', false);\n\t      }\n\t      this._discardActiveGroup();\n\t      this._discardActiveObject();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects and dispatches appropriate events If the function is called by fabric\n\t     * as a consequence of a mouse event, the event is passed as a parmater and\n\t     * sent to the fire function for the custom events. When used as a method the\n\t     * e param does not have any application.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAllWithDispatch: function (e) {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length,\n\t          obj;\n\t      for ( ; i < len; i++) {\n\t        obj = allObjects[i];\n\t        obj && obj.set('active', false);\n\t      }\n\t      this.discardActiveGroup(e);\n\t      this.discardActiveObject(e);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      fabric.StaticCanvas.prototype.dispose.call(this);\n\t      var wrapper = this.wrapperEl;\n\t      this.removeListeners();\n\t      wrapper.removeChild(this.upperCanvasEl);\n\t      wrapper.removeChild(this.lowerCanvasEl);\n\t      delete this.upperCanvasEl;\n\t      if (wrapper.parentNode) {\n\t        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n\t      }\n\t      delete this.wrapperEl;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this.discardActiveGroup();\n\t      this.discardActiveObject();\n\t      this.clearContext(this.contextTop);\n\t      return this.callSuper('clear');\n\t    },\n\t\n\t    /**\n\t     * Draws objects' controls (borders/controls)\n\t     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n\t     */\n\t    drawControls: function(ctx) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup) {\n\t        activeGroup._renderControls(ctx);\n\t      }\n\t      else {\n\t        this._drawObjectsControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawObjectsControls: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; ++i) {\n\t        if (!this._objects[i] || !this._objects[i].active) {\n\t          continue;\n\t        }\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      //If the object is part of the current selection group, it should\n\t      //be transformed appropriately\n\t      //i.e. it should be serialised as it would appear if the selection group\n\t      //were to be destroyed.\n\t      var originalProperties = this._realizeGroupTransformOnObject(instance),\n\t          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n\t      //Undo the damage we did by changing all of its properties\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Realises an object's group transformation on it\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n\t     * @returns the original values of instance which were changed\n\t     */\n\t    _realizeGroupTransformOnObject: function(instance) {\n\t      if (instance.group && instance.group === this.getActiveGroup()) {\n\t        //Copy all the positionally relevant properties across now\n\t        var originalValues = {},\n\t            layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n\t        layoutProps.forEach(function(prop) {\n\t          originalValues[prop] = instance[prop];\n\t        });\n\t        this.getActiveGroup().realizeTransform(instance);\n\t        return originalValues;\n\t      }\n\t      else {\n\t        return null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Restores the changed properties of instance\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n\t     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n\t     */\n\t    _unwindGroupTransformOnObject: function(instance, originalValues) {\n\t      if (originalValues) {\n\t        instance.set(originalValues);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      var originalProperties;\n\t      //If the object is in a selection group, simulate what would happen to that\n\t      //object when the group is deselected\n\t      originalProperties = this._realizeGroupTransformOnObject(instance);\n\t      this.callSuper('_setSVGObject', markup, instance, reviver);\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t    },\n\t  });\n\t\n\t  // copying static properties manually to work around Opera's bug,\n\t  // where \"prototype\" property is enumerable and overrides existing prototype\n\t  for (var prop in fabric.StaticCanvas) {\n\t    if (prop !== 'prototype') {\n\t      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n\t    }\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    /** @ignore */\n\t    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n\t  }\n\t\n\t  /**\n\t   * @ignore\n\t   * @class fabric.Element\n\t   * @alias fabric.Canvas\n\t   * @deprecated Use {@link fabric.Canvas} instead.\n\t   * @constructor\n\t   */\n\t  fabric.Element = fabric.Canvas;\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var cursorOffset = {\n\t        mt: 0, // n\n\t        tr: 1, // ne\n\t        mr: 2, // e\n\t        br: 3, // se\n\t        mb: 4, // s\n\t        bl: 5, // sw\n\t        ml: 6, // w\n\t        tl: 7 // nw\n\t      },\n\t      addListener = fabric.util.addListener,\n\t      removeListener = fabric.util.removeListener,\n\t      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\t\n\t  function checkClick(e, value) {\n\t    return 'which' in e ? e.which === value : e.button === value - 1;\n\t  }\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Map of cursor style values for each of the object controls\n\t     * @private\n\t     */\n\t    cursorMap: [\n\t      'n-resize',\n\t      'ne-resize',\n\t      'e-resize',\n\t      'se-resize',\n\t      's-resize',\n\t      'sw-resize',\n\t      'w-resize',\n\t      'nw-resize'\n\t    ],\n\t\n\t    /**\n\t     * Adds mouse listeners to canvas\n\t     * @private\n\t     */\n\t    _initEventListeners: function () {\n\t      // in case we initialized the class twice. This should not happen normally\n\t      // but in some kind of applications where the canvas element may be changed\n\t      // this is a workaround to having double listeners.\n\t      this.removeListeners();\n\t      this._bindEvents();\n\t\n\t      addListener(fabric.window, 'resize', this._onResize);\n\t\n\t      // mouse events\n\t      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n\t      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      // touch events\n\t      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\t\n\t      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n\t        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _bindEvents: function() {\n\t      if (this.eventsBinded) {\n\t        // for any reason we pass here twice we do not want to bind events twice.\n\t        return;\n\t      }\n\t      this._onMouseDown = this._onMouseDown.bind(this);\n\t      this._onMouseMove = this._onMouseMove.bind(this);\n\t      this._onMouseUp = this._onMouseUp.bind(this);\n\t      this._onResize = this._onResize.bind(this);\n\t      this._onGesture = this._onGesture.bind(this);\n\t      this._onDrag = this._onDrag.bind(this);\n\t      this._onShake = this._onShake.bind(this);\n\t      this._onLongPress = this._onLongPress.bind(this);\n\t      this._onOrientationChange = this._onOrientationChange.bind(this);\n\t      this._onMouseWheel = this._onMouseWheel.bind(this);\n\t      this._onMouseOut = this._onMouseOut.bind(this);\n\t      this._onMouseEnter = this._onMouseEnter.bind(this);\n\t      this._onContextMenu = this._onContextMenu.bind(this);\n\t      this.eventsBinded = true;\n\t    },\n\t\n\t    /**\n\t     * Removes all event listeners\n\t     */\n\t    removeListeners: function() {\n\t      removeListener(fabric.window, 'resize', this._onResize);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n\t      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n\t        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js gesture\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onGesture: function(e, self) {\n\t      this.__onTransformGesture && this.__onTransformGesture(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js drag\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onDrag: function(e, self) {\n\t      this.__onDrag && this.__onDrag(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on wheel event\n\t     */\n\t    _onMouseWheel: function(e) {\n\t      this.__onMouseWheel(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseOut: function(e) {\n\t      var target = this._hoveredTarget;\n\t      this.fire('mouse:out', { target: target, e: e });\n\t      this._hoveredTarget = null;\n\t      target && target.fire('mouseout', { e: e });\n\t      if (this._iTextInstances) {\n\t        this._iTextInstances.forEach(function(obj) {\n\t          if (obj.isEditing) {\n\t            obj.hiddenTextarea.focus();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseenter\n\t     */\n\t    _onMouseEnter: function(e) {\n\t      if (!this.findTarget(e)) {\n\t        this.fire('mouse:over', { target: null, e: e });\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js orientation change\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onOrientationChange: function(e, self) {\n\t      this.__onOrientationChange && this.__onOrientationChange(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onShake: function(e, self) {\n\t      this.__onShake && this.__onShake(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onLongPress: function(e, self) {\n\t      this.__onLongPress && this.__onLongPress(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onContextMenu: function (e) {\n\t      if (this.stopContextMenu) {\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDown: function (e) {\n\t      this.__onMouseDown(e);\n\t\n\t      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n\t      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\t\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchstart') {\n\t        // Unbind mousedown to prevent double triggers from touch devices\n\t        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      }\n\t      else {\n\t        addListener(fabric.document, 'mouseup', this._onMouseUp);\n\t        addListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUp: function (e) {\n\t      this.__onMouseUp(e);\n\t\n\t      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n\t      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\t\n\t      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\t\n\t      if (e.type === 'touchend') {\n\t        // Wait 400ms before rebinding mousedown to prevent double triggers\n\t        // from touch devices\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n\t        }, 400);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMove: function (e) {\n\t      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\t      this.__onMouseMove(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onResize: function () {\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n\t     * @private\n\t     * @param {Object} target\n\t     * @param {Object} pointer\n\t     */\n\t    _shouldRender: function(target, pointer) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t\n\t      if (activeObject && activeObject.isEditing && target === activeObject) {\n\t        // if we mouse up/down over a editing textbox a cursor change,\n\t        // there is no need to re render\n\t        return false;\n\t      }\n\t      return !!(\n\t        (target && (\n\t          target.isMoving ||\n\t          target !== activeObject))\n\t        ||\n\t        (!target && !!activeObject)\n\t        ||\n\t        (!target && !activeObject && !this._groupSelector)\n\t        ||\n\t        (pointer &&\n\t          this._previousPointer &&\n\t          this.selection && (\n\t          pointer.x !== this._previousPointer.x ||\n\t          pointer.y !== this._previousPointer.y))\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is released on canvas.\n\t     * The method resets the currentTransform parameters, store the image corner\n\t     * position in the image object and render the canvas on top.\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseUp: function (e) {\n\t\n\t      var target;\n\t      // if right/middle click just fire events and return\n\t      // target undefined will make the _handleEvent search the target\n\t      if (checkClick(e, RIGHT_CLICK)) {\n\t        if (this.fireRightClick) {\n\t          this._handleEvent(e, 'up', target, RIGHT_CLICK);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (checkClick(e, MIDDLE_CLICK)) {\n\t        if (this.fireMiddleClick) {\n\t          this._handleEvent(e, 'up', target, MIDDLE_CLICK);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n\t        this._onMouseUpInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      var searchTarget = true, transform = this._currentTransform,\n\t          groupSelector = this._groupSelector,\n\t          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\t\n\t      if (transform) {\n\t        this._finalizeCurrentTransform(e);\n\t        searchTarget = !transform.actionPerformed;\n\t      }\n\t\n\t      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\t\n\t      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\t\n\t      if (target || !isClick) {\n\t        this._maybeGroupObjects(e);\n\t      }\n\t      else {\n\t        // those are done by default on mouse up\n\t        // by _maybeGroupObjects, we are skipping it in case of no target find\n\t        this._groupSelector = null;\n\t        this._currentTransform = null;\n\t      }\n\t\n\t      if (target) {\n\t        target.isMoving = false;\n\t      }\n\t      this._setCursorFromEvent(e, target);\n\t      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n\t      target && (target.__corner = 0);\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * Handle event firing for target and subtargets\n\t     * @param {Event} e event from mouse\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     * @param {fabric.Object} targetObj receiving event\n\t     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n\t     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n\t     */\n\t    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n\t      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n\t          targets = this.targets || [],\n\t          options = {\n\t            e: e,\n\t            target: target,\n\t            subTargets: targets,\n\t            button: button || LEFT_CLICK,\n\t            isClick: isClick || false\n\t          };\n\t      this.fire('mouse:' + eventType, options);\n\t      target && target.fire('mouse' + eventType, options);\n\t      for (var i = 0; i < targets.length; i++) {\n\t        targets[i].fire('mouse' + eventType, options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n\t     */\n\t    _finalizeCurrentTransform: function(e) {\n\t\n\t      var transform = this._currentTransform,\n\t          target = transform.target;\n\t\n\t      if (target._scaling) {\n\t        target._scaling = false;\n\t      }\n\t\n\t      target.setCoords();\n\t      this._restoreOriginXY(target);\n\t\n\t      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n\t        this.fire('object:modified', { target: target, e: e });\n\t        target.fire('modified', { e: e });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object to restore\n\t     */\n\t    _restoreOriginXY: function(target) {\n\t      if (this._previousOriginX && this._previousOriginY) {\n\t\n\t        var originPoint = target.translateToOriginPoint(\n\t          target.getCenterPoint(),\n\t          this._previousOriginX,\n\t          this._previousOriginY);\n\t\n\t        target.originX = this._previousOriginX;\n\t        target.originY = this._previousOriginY;\n\t\n\t        target.left = originPoint.x;\n\t        target.top = originPoint.y;\n\t\n\t        this._previousOriginX = null;\n\t        this._previousOriginY = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDownInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = true;\n\t      this.discardActiveObject(e).renderAll();\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, this.contextTop);\n\t      }\n\t      var pointer = this.getPointer(e);\n\t      this.freeDrawingBrush.onMouseDown(pointer);\n\t      this._handleEvent(e, 'down');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMoveInDrawingMode: function(e) {\n\t      if (this._isCurrentlyDrawing) {\n\t        var pointer = this.getPointer(e);\n\t        this.freeDrawingBrush.onMouseMove(pointer);\n\t      }\n\t      this.setCursor(this.freeDrawingCursor);\n\t      this._handleEvent(e, 'move');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUpInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = false;\n\t      if (this.clipTo) {\n\t        this.contextTop.restore();\n\t      }\n\t      this.freeDrawingBrush.onMouseUp();\n\t      this._handleEvent(e, 'up');\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is clicked on canvas.\n\t     * The method inits the currentTransform parameters and renders all the\n\t     * canvas so the current image can be placed on the top canvas and the rest\n\t     * in on the container one.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    __onMouseDown: function (e) {\n\t\n\t      var target = this.findTarget(e);\n\t\n\t      // if right click just fire events\n\t      if (checkClick(e, RIGHT_CLICK)) {\n\t        if (this.fireRightClick) {\n\t          this._handleEvent(e, 'down', target ? target : null, RIGHT_CLICK);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (checkClick(e, MIDDLE_CLICK)) {\n\t        if (this.fireMiddleClick) {\n\t          this._handleEvent(e, 'down', target ? target : null, MIDDLE_CLICK);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseDownInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      // ignore if some object is being transformed at this moment\n\t      if (this._currentTransform) {\n\t        return;\n\t      }\n\t\n\t      // save pointer for check in __onMouseUp event\n\t      var pointer = this.getPointer(e, true);\n\t      this._previousPointer = pointer;\n\t\n\t      var shouldRender = this._shouldRender(target, pointer),\n\t          shouldGroup = this._shouldGroup(e, target);\n\t\n\t      if (this._shouldClearSelection(e, target)) {\n\t        this.deactivateAllWithDispatch(e);\n\t      }\n\t      else if (shouldGroup) {\n\t        this._handleGrouping(e, target);\n\t        target = this.getActiveGroup();\n\t      }\n\t\n\t      if (this.selection && (!target || (!target.selectable && !target.isEditing))) {\n\t        this._groupSelector = {\n\t          ex: pointer.x,\n\t          ey: pointer.y,\n\t          top: 0,\n\t          left: 0\n\t        };\n\t      }\n\t\n\t      if (target) {\n\t        if (target.selectable && (target.__corner || !shouldGroup)) {\n\t          this._beforeTransform(e, target);\n\t          this._setupCurrentTransform(e, target);\n\t        }\n\t        var activeObject = this.getActiveObject();\n\t        if (target !== this.getActiveGroup() && target !== activeObject) {\n\t          this.deactivateAll();\n\t          if (target.selectable) {\n\t            activeObject && activeObject.fire('deselected', { e: e });\n\t            this.setActiveObject(target, e);\n\t          }\n\t        }\n\t      }\n\t      this._handleEvent(e, 'down', target ? target : null);\n\t      // we must renderAll so that we update the visuals\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeTransform: function(e, target) {\n\t      this.stateful && target.saveState();\n\t\n\t      // determine if it's a drag or rotate case\n\t      if (target._findTargetCorner(this.getPointer(e))) {\n\t        this.onBeforeScaleRotate(target);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that origin is set to center\n\t     */\n\t    _setOriginToCenter: function(target) {\n\t      this._previousOriginX = this._currentTransform.target.originX;\n\t      this._previousOriginY = this._currentTransform.target.originY;\n\t\n\t      var center = target.getCenterPoint();\n\t\n\t      target.originX = 'center';\n\t      target.originY = 'center';\n\t\n\t      target.left = center.x;\n\t      target.top = center.y;\n\t\n\t      this._currentTransform.left = target.left;\n\t      this._currentTransform.top = target.top;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that center is set to origin\n\t     */\n\t    _setCenterToOrigin: function(target) {\n\t      var originPoint = target.translateToOriginPoint(\n\t        target.getCenterPoint(),\n\t        this._previousOriginX,\n\t        this._previousOriginY);\n\t\n\t      target.originX = this._previousOriginX;\n\t      target.originY = this._previousOriginY;\n\t\n\t      target.left = originPoint.x;\n\t      target.top = originPoint.y;\n\t\n\t      this._previousOriginX = null;\n\t      this._previousOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is hovering the canvas.\n\t     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n\t     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n\t     * all any other type of action.\n\t     * In case of an image transformation only the top canvas will be rendered.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    __onMouseMove: function (e) {\n\t\n\t      var target, pointer;\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseMoveInDrawingMode(e);\n\t        return;\n\t      }\n\t      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n\t        return;\n\t      }\n\t\n\t      var groupSelector = this._groupSelector;\n\t\n\t      // We initially clicked in an empty area, so we draw a box for multiple selection\n\t      if (groupSelector) {\n\t        pointer = this.getPointer(e, true);\n\t\n\t        groupSelector.left = pointer.x - groupSelector.ex;\n\t        groupSelector.top = pointer.y - groupSelector.ey;\n\t\n\t        this.renderTop();\n\t      }\n\t      else if (!this._currentTransform) {\n\t        target = this.findTarget(e);\n\t        this._setCursorFromEvent(e, target);\n\t      }\n\t      else {\n\t        this._transformObject(e);\n\t      }\n\t      this._handleEvent(e, 'move', target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Method that defines actions when an Event Mouse Wheel\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseWheel: function(e) {\n\t      this._handleEvent(e, 'wheel');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event fired on mousemove\n\t     */\n\t    _transformObject: function(e) {\n\t      var pointer = this.getPointer(e),\n\t          transform = this._currentTransform;\n\t\n\t      transform.reset = false;\n\t      transform.target.isMoving = true;\n\t      transform.shiftKey = e.shiftKey;\n\t      transform.altKey = e[this.centeredKey];\n\t\n\t      this._beforeScaleTransform(e, transform);\n\t      this._performTransformAction(e, transform, pointer);\n\t\n\t      transform.actionPerformed && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _performTransformAction: function(e, transform, pointer) {\n\t      var x = pointer.x,\n\t          y = pointer.y,\n\t          target = transform.target,\n\t          action = transform.action,\n\t          actionPerformed = false;\n\t\n\t      if (action === 'rotate') {\n\t        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n\t      }\n\t      else if (action === 'scale') {\n\t        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleX') {\n\t        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleY') {\n\t        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'skewX') {\n\t        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n\t      }\n\t      else if (action === 'skewY') {\n\t        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n\t      }\n\t      else {\n\t        actionPerformed = this._translateObject(x, y);\n\t        if (actionPerformed) {\n\t          this._fire('moving', target, e);\n\t          this.setCursor(target.moveCursor || this.moveCursor);\n\t        }\n\t      }\n\t      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fire: function(eventName, target, e) {\n\t      this.fire('object:' + eventName, { target: target, e: e });\n\t      target.fire(eventName, { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeScaleTransform: function(e, transform) {\n\t      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n\t        var centerTransform = this._shouldCenterTransform(transform.target);\n\t\n\t        // Switch from a normal resize to center-based\n\t        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n\t           // Switch from center-based resize to normal one\n\t           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n\t        ) {\n\t          this._resetCurrentTransform();\n\t          transform.reset = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {Object} transform current tranform\n\t     * @param {Number} x mouse position x from origin\n\t     * @param {Number} y mouse poistion y from origin\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _onScale: function(e, transform, x, y) {\n\t      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n\t        transform.currentAction = 'scale';\n\t        return this._scaleObject(x, y);\n\t      }\n\t      else {\n\t        // Switch from a normal resize to proportional\n\t        if (!transform.reset && transform.currentAction === 'scale') {\n\t          this._resetCurrentTransform();\n\t        }\n\t\n\t        transform.currentAction = 'scaleEqually';\n\t        return this._scaleObject(x, y, 'equally');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets the cursor depending on where the canvas is being hovered.\n\t     * Note: very buggy in Opera\n\t     * @param {Event} e Event object\n\t     * @param {Object} target Object that the mouse is hovering, if so.\n\t     */\n\t    _setCursorFromEvent: function (e, target) {\n\t      if (!target) {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t\n\t      var hoverCursor = target.hoverCursor || this.hoverCursor,\n\t          activeGroup = this.getActiveGroup(),\n\t          // only show proper corner when group selection is not active\n\t          corner = target._findTargetCorner\n\t                    && (!activeGroup || !activeGroup.contains(target))\n\t                    && target._findTargetCorner(this.getPointer(e, true));\n\t\n\t      if (!corner) {\n\t        this.setCursor(hoverCursor);\n\t      }\n\t      else {\n\t        this._setCornerCursor(corner, target, e);\n\t      }\n\t      //actually unclear why it should return something\n\t      //is never evaluated\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setCornerCursor: function(corner, target, e) {\n\t      if (corner in cursorOffset) {\n\t        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n\t      }\n\t      else if (corner === 'mtr' && target.hasRotatingPoint) {\n\t        this.setCursor(this.rotationCursor);\n\t      }\n\t      else {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getRotatedCornerCursor: function(corner, target, e) {\n\t      var n = Math.round((target.getAngle() % 360) / 45);\n\t\n\t      if (n < 0) {\n\t        n += 8; // full circle ahead\n\t      }\n\t      n += cursorOffset[corner];\n\t      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n\t        //if we are holding shift and we are on a mx corner...\n\t        n += 2;\n\t      }\n\t      // normalize n to be from 0 to 7\n\t      n %= 8;\n\t\n\t      return this.cursorMap[n];\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var min = Math.min,\n\t      max = Math.max;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     * @return {Boolean}\n\t     */\n\t    _shouldGroup: function(e, target) {\n\t      var activeObject = this.getActiveObject();\n\t      return e[this.selectionKey] && target && target.selectable &&\n\t            (this.getActiveGroup() || (activeObject && activeObject !== target))\n\t            && this.selection;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _handleGrouping: function (e, target) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (target === activeGroup) {\n\t        // if it's a group, find target again, using activeGroup objects\n\t        target = this.findTarget(e, true);\n\t        // if even object is not found, bail out\n\t        if (!target) {\n\t          return;\n\t        }\n\t      }\n\t      if (activeGroup) {\n\t        this._updateActiveGroup(target, e);\n\t      }\n\t      else {\n\t        this._createActiveGroup(target, e);\n\t      }\n\t\n\t      if (this._activeGroup) {\n\t        this._activeGroup.saveCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateActiveGroup: function(target, e) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup.contains(target)) {\n\t\n\t        activeGroup.removeWithUpdate(target);\n\t        target.set('active', false);\n\t\n\t        if (activeGroup.size() === 1) {\n\t          // remove group alltogether if after removal it only contains 1 object\n\t          this.discardActiveGroup(e);\n\t          // activate last remaining object\n\t          this.setActiveObject(activeGroup.item(0), e);\n\t          return;\n\t        }\n\t      }\n\t      else {\n\t        activeGroup.addWithUpdate(target);\n\t      }\n\t      this.fire('selection:created', { target: activeGroup, e: e });\n\t      activeGroup.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createActiveGroup: function(target, e) {\n\t\n\t      if (this._activeObject && target !== this._activeObject) {\n\t\n\t        var group = this._createGroup(target);\n\t        group.addWithUpdate();\n\t\n\t        this.setActiveGroup(group, e);\n\t        this._activeObject = null;\n\t\n\t        this.fire('selection:created', { target: group, e: e });\n\t      }\n\t\n\t      target.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target\n\t     */\n\t    _createGroup: function(target) {\n\t\n\t      var objects = this.getObjects(),\n\t          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n\t          groupObjects = isActiveLower\n\t            ? [this._activeObject, target]\n\t            : [target, this._activeObject];\n\t      this._activeObject.isEditing && this._activeObject.exitEditing();\n\t      return new fabric.Group(groupObjects, {\n\t        canvas: this\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e mouse event\n\t     */\n\t    _groupSelectedObjects: function (e) {\n\t\n\t      var group = this._collectObjects();\n\t\n\t      // do not create group for 1 element only\n\t      if (group.length === 1) {\n\t        this.setActiveObject(group[0], e);\n\t      }\n\t      else if (group.length > 1) {\n\t        group = new fabric.Group(group.reverse(), {\n\t          canvas: this\n\t        });\n\t        group.addWithUpdate();\n\t        this.setActiveGroup(group, e);\n\t        group.saveCoords();\n\t        this.fire('selection:created', { target: group, e: e });\n\t        this.renderAll();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _collectObjects: function() {\n\t      var group = [],\n\t          currentObject,\n\t          x1 = this._groupSelector.ex,\n\t          y1 = this._groupSelector.ey,\n\t          x2 = x1 + this._groupSelector.left,\n\t          y2 = y1 + this._groupSelector.top,\n\t          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n\t          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n\t          isClick = x1 === x2 && y1 === y2;\n\t\n\t      for (var i = this._objects.length; i--; ) {\n\t        currentObject = this._objects[i];\n\t\n\t        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n\t          continue;\n\t        }\n\t\n\t        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.containsPoint(selectionX1Y1) ||\n\t            currentObject.containsPoint(selectionX2Y2)\n\t        ) {\n\t          currentObject.set('active', true);\n\t          group.push(currentObject);\n\t\n\t          // only add one object if it's a click\n\t          if (isClick) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return group;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _maybeGroupObjects: function(e) {\n\t      if (this.selection && this._groupSelector) {\n\t        this._groupSelectedObjects(e);\n\t      }\n\t\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        activeGroup.setObjectsCoords().setCoords();\n\t        activeGroup.isMoving = false;\n\t        this.setCursor(this.defaultCursor);\n\t      }\n\t\n\t      // clear selection and current transformation\n\t      this._groupSelector = null;\n\t      this._currentTransform = null;\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\t\n\t  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n\t     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'jpeg',\n\t     *   quality: 0.8\n\t     * });\n\t     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   left: 100,\n\t     *   top: 100,\n\t     *   width: 200,\n\t     *   height: 200\n\t     * });\n\t     * @example <caption>Generate double scaled png dataURL</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   multiplier: 2\n\t     * });\n\t     */\n\t    toDataURL: function (options) {\n\t      options || (options = { });\n\t\n\t      var format = options.format || 'png',\n\t          quality = options.quality || 1,\n\t          multiplier = options.multiplier || 1,\n\t          cropping = {\n\t            left: options.left || 0,\n\t            top: options.top || 0,\n\t            width: options.width || 0,\n\t            height: options.height || 0,\n\t          };\n\t      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\t\n\t      var origWidth = this.getWidth(),\n\t          origHeight = this.getHeight(),\n\t          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n\t          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n\t          zoom = this.getZoom(),\n\t          newZoom = zoom * multiplier,\n\t          vp = this.viewportTransform,\n\t          translateX = (vp[4] - cropping.left) * multiplier,\n\t          translateY = (vp[5] - cropping.top) * multiplier,\n\t          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n\t          originalInteractive = this.interactive;\n\t\n\t      this.viewportTransform = newVp;\n\t      // setting interactive to false avoid exporting controls\n\t      this.interactive && (this.interactive = false);\n\t      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n\t        // this.setDimensions is going to renderAll also;\n\t        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n\t      }\n\t      else {\n\t        this.renderAll();\n\t      }\n\t      var data = this.__toDataURL(format, quality, cropping);\n\t      originalInteractive && (this.interactive = originalInteractive);\n\t      this.viewportTransform = vp;\n\t      //setDimensions with no option object is taking care of:\n\t      //this.width, this.height, this.renderAll()\n\t      this.setDimensions({ width: origWidth, height: origHeight });\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURL: function(format, quality) {\n\t\n\t      var canvasEl = this.contextContainer.canvas;\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (format === 'jpg') {\n\t        format = 'jpeg';\n\t      }\n\t\n\t      var data = supportQuality\n\t                ? canvasEl.toDataURL('image/' + format, quality)\n\t                : canvasEl.toDataURL('image/' + format);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n\t     * @deprecated since 1.0.13\n\t     * @param {String} format (png|jpeg)\n\t     * @param {Number} multiplier\n\t     * @param {Number} quality (0..1)\n\t     * @return {String}\n\t     */\n\t    toDataURLWithMultiplier: function (format, multiplier, quality) {\n\t      return this.toDataURL({\n\t        format: format,\n\t        multiplier: multiplier,\n\t        quality: quality\n\t      });\n\t    },\n\t  });\n\t\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Populates canvas with data from the specified dataless JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n\t   * @deprecated since 1.2.2\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   */\n\t  loadFromDatalessJSON: function (json, callback, reviver) {\n\t    return this.loadFromJSON(json, callback, reviver);\n\t  },\n\t\n\t  /**\n\t   * Populates canvas with data from the specified JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n\t   * @example <caption>loadFromJSON</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n\t   * @example <caption>loadFromJSON with reviver</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n\t   *   // `o` = json object\n\t   *   // `object` = fabric.Object instance\n\t   *   // ... do some stuff ...\n\t   * });\n\t   */\n\t  loadFromJSON: function (json, callback, reviver) {\n\t    if (!json) {\n\t      return;\n\t    }\n\t\n\t    // serialize if it wasn't already\n\t    var serialized = (typeof json === 'string')\n\t      ? JSON.parse(json)\n\t      : fabric.util.object.clone(json);\n\t\n\t    var _this = this,\n\t        renderOnAddRemove = this.renderOnAddRemove;\n\t    this.renderOnAddRemove = false;\n\t\n\t    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n\t      _this.clear();\n\t      _this._setBgOverlay(serialized, function () {\n\t        enlivenedObjects.forEach(function(obj, index) {\n\t          // we splice the array just in case some custom classes restored from JSON\n\t          // will add more object to canvas at canvas init.\n\t          _this.insertAt(obj, index);\n\t        });\n\t        _this.renderOnAddRemove = renderOnAddRemove;\n\t        // remove parts i cannot set as options\n\t        delete serialized.objects;\n\t        delete serialized.backgroundImage;\n\t        delete serialized.overlayImage;\n\t        delete serialized.background;\n\t        delete serialized.overlay;\n\t        // this._initOptions does too many things to just\n\t        // call it. Normally loading an Object from JSON\n\t        // create the Object instance. Here the Canvas is\n\t        // already an instance and we are just loading things over it\n\t        _this._setOptions(serialized);\n\t        _this.renderAll();\n\t        callback && callback();\n\t      });\n\t    }, reviver);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} serialized Object with background and overlay information\n\t   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n\t   */\n\t  _setBgOverlay: function(serialized, callback) {\n\t    var loaded = {\n\t      backgroundColor: false,\n\t      overlayColor: false,\n\t      backgroundImage: false,\n\t      overlayImage: false\n\t    };\n\t\n\t    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var cbIfLoaded = function () {\n\t      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n\t        callback && callback();\n\t      }\n\t    };\n\t\n\t    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n\t   * @param {(Object|String)} value Value to set\n\t   * @param {Object} loaded Set loaded property to true if property is set\n\t   * @param {Object} callback Callback function to invoke after property is set\n\t   */\n\t  __setBgOverlay: function(property, value, loaded, callback) {\n\t    var _this = this;\n\t\n\t    if (!value) {\n\t      loaded[property] = true;\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    if (property === 'backgroundImage' || property === 'overlayImage') {\n\t      fabric.util.enlivenObjects([value], function(enlivedObject){\n\t        _this[property] = enlivedObject[0];\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t    else {\n\t      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} objects\n\t   * @param {Function} callback\n\t   * @param {Function} [reviver]\n\t   */\n\t  _enlivenObjects: function (objects, callback, reviver) {\n\t    if (!objects || objects.length === 0) {\n\t      callback && callback([]);\n\t      return;\n\t    }\n\t\n\t    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n\t      callback && callback(enlivenedObjects);\n\t    }, null, reviver);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURL: function (format, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURL(format));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Number} multiplier\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURLWithMultiplier(format, multiplier));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n\t   */\n\t  clone: function (callback, properties) {\n\t    var data = JSON.stringify(this.toJSON(properties));\n\t    this.cloneWithoutData(function(clone) {\n\t      clone.loadFromJSON(data, function() {\n\t        callback && callback(clone);\n\t      });\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance without cloning existing data.\n\t   * This essentially copies canvas dimensions, clipping properties, etc.\n\t   * but leaves data empty (so that you can populate it with your own)\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   */\n\t  cloneWithoutData: function(callback) {\n\t    var el = fabric.document.createElement('canvas');\n\t\n\t    el.width = this.getWidth();\n\t    el.height = this.getHeight();\n\t\n\t    var clone = new fabric.Canvas(el);\n\t    clone.clipTo = this.clipTo;\n\t    if (this.backgroundImage) {\n\t      clone.setBackgroundImage(this.backgroundImage.src, function() {\n\t        clone.renderAll();\n\t        callback && callback(clone);\n\t      });\n\t      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n\t      clone.backgroundImageStretch = this.backgroundImageStretch;\n\t    }\n\t    else {\n\t      callback && callback(clone);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      capitalize = fabric.util.string.capitalize,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t      objectCaching = !fabric.isLikelyNode,\n\t      ALIASING_LIMIT = 2;\n\t\n\t  if (fabric.Object) {\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Root object class from which all 2d shape classes inherit from\n\t   * @class fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n\t   * @see {@link fabric.Object#initialize} for constructor definition\n\t   *\n\t   * @fires added\n\t   * @fires removed\n\t   *\n\t   * @fires selected\n\t   * @fires deselected\n\t   * @fires modified\n\t   * @fires rotating\n\t   * @fires scaling\n\t   * @fires moving\n\t   * @fires skewing\n\t   *\n\t   * @fires mousedown\n\t   * @fires mouseup\n\t   * @fires mouseover\n\t   * @fires mouseout\n\t   * @fires mousewheel\n\t   */\n\t  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method getClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Function}\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method setClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Function} clipTo Clipping function\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method getTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Array} transformMatrix\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method setTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Array} transformMatrix\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#visible|visible} state\n\t     * @method getVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} True if visible\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#visible|visible} state\n\t     * @method setVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value visible value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#shadow|shadow}\n\t     * @method getShadow\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Object} Shadow instance\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#stroke|stroke}\n\t     * @method getStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} stroke value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#stroke|stroke}\n\t     * @method setStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value stroke value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method getStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} strokeWidth value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method setStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value strokeWidth value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originX|originX}\n\t     * @method getOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originX|originX}\n\t     * @method setOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originY|originY}\n\t     * @method getOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originY|originY}\n\t     * @method setOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#fill|fill}\n\t     * @method getFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} Fill value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#fill|fill}\n\t     * @method setFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value Fill value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#opacity|opacity}\n\t     * @method getOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Opacity value (0-1)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#opacity|opacity}\n\t     * @method setOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Opacity value (0-1)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n\t     * @method getAngle\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number}\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#top|top position}\n\t     * @method getTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Top value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#top|top position}\n\t     * @method setTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Top value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#left|left position}\n\t     * @method getLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Left value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#left|left position}\n\t     * @method setLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Left value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method getScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method setScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method getScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method setScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n\t     * @method getFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipX|flipX} value\n\t     * @method setFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n\t     * @method getFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipY|flipY} value\n\t     * @method setFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object (rect, circle, path, etc.).\n\t     * Note that this property is meant to be read-only and not meant to be modified.\n\t     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                     'object',\n\t\n\t    /**\n\t     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originX:                  'left',\n\t\n\t    /**\n\t     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originY:                  'top',\n\t\n\t    /**\n\t     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    top:                      0,\n\t\n\t    /**\n\t     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    left:                     0,\n\t\n\t    /**\n\t     * Object width\n\t     * @type Number\n\t     * @default\n\t     */\n\t    width:                    0,\n\t\n\t    /**\n\t     * Object height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    height:                   0,\n\t\n\t    /**\n\t     * Object scale factor (horizontal)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleX:                   1,\n\t\n\t    /**\n\t     * Object scale factor (vertical)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleY:                   1,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped horizontally\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipX:                    false,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped vertically\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipY:                    false,\n\t\n\t    /**\n\t     * Opacity of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    opacity:                  1,\n\t\n\t    /**\n\t     * Angle of rotation of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    angle:                    0,\n\t\n\t    /**\n\t     * Angle of skew on x axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewX:                    0,\n\t\n\t    /**\n\t     * Angle of skew on y axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewY:                    0,\n\t\n\t    /**\n\t     * Size of object's controlling corners (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cornerSize:               13,\n\t\n\t    /**\n\t     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    transparentCorners:       true,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:              null,\n\t\n\t    /**\n\t     * Default cursor value used when moving this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:               null,\n\t\n\t    /**\n\t     * Padding between object and its controlling borders (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    padding:                  0,\n\t\n\t    /**\n\t     * Color of controlling borders of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    borderColor:              'rgba(102,153,255,0.75)',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    borderDashArray:          null,\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerColor:              'rgba(102,153,255,0.5)',\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active and transparentCorners false)\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerStrokeColor:        null,\n\t\n\t    /**\n\t     * Specify style of control, 'rect' or 'circle'\n\t     * @since 1.6.2\n\t     * @type String\n\t     */\n\t    cornerStyle:          'rect',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's control (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    cornerDashArray:          null,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being scaled via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:          false,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being rotated via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:         true,\n\t\n\t    /**\n\t     * Color of object's fill\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill:                     'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Fill rule used to fill an object\n\t     * accepted values are nonzero, evenodd\n\t     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n\t     * @type String\n\t     * @default\n\t     */\n\t    fillRule:                 'nonzero',\n\t\n\t    /**\n\t     * Composite rule used for canvas globalCompositeOperation\n\t     * @type String\n\t     * @default\n\t     */\n\t    globalCompositeOperation: 'source-over',\n\t\n\t    /**\n\t     * Background color of an object.\n\t     * @type String\n\t     * @default\n\t     */\n\t    backgroundColor:          '',\n\t\n\t    /**\n\t     * Selection Background color of an object. colored layer behind the object when it is active.\n\t     * does not mix good with globalCompositeOperation methods.\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBackgroundColor:          '',\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:                   null,\n\t\n\t    /**\n\t     * Width of a stroke used to render this object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth:              1,\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n\t     * @type Array\n\t     */\n\t    strokeDashArray:          null,\n\t\n\t    /**\n\t     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineCap:            'butt',\n\t\n\t    /**\n\t     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineJoin:           'miter',\n\t\n\t    /**\n\t     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeMiterLimit:         10,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:                   null,\n\t\n\t    /**\n\t     * Opacity of object's controlling borders when object is active and moving\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderOpacityWhenMoving:  0.4,\n\t\n\t    /**\n\t     * Scale factor of object's controlling borders\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderScaleFactor:        1,\n\t\n\t    /**\n\t     * Transform matrix (similar to SVG's transform matrix)\n\t     * @type Array\n\t     */\n\t    transformMatrix:          null,\n\t\n\t    /**\n\t     * Minimum allowed scale value of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minScaleLimit:            0.01,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n\t     * But events still fire on it.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selectable:               true,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    evented:                  true,\n\t\n\t    /**\n\t     * When set to `false`, an object is not rendered on canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    visible:                  true,\n\t\n\t    /**\n\t     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasControls:              true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling borders are not rendered\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasBorders:               true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling rotating point will not be visible or selectable\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasRotatingPoint:         true,\n\t\n\t    /**\n\t     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rotatingPointOffset:      40,\n\t\n\t    /**\n\t     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:       false,\n\t\n\t    /**\n\t     * When `false`, default object's values are not included in its serialization\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues:     true,\n\t\n\t    /**\n\t     * Function that determines clipping of an object (context is passed as a first argument)\n\t     * Note that context origin is at the object's center point (not left/top corner)\n\t     * @type Function\n\t     */\n\t    clipTo:                   null,\n\t\n\t    /**\n\t     * When `true`, object horizontal movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementX:            false,\n\t\n\t    /**\n\t     * When `true`, object vertical movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementY:            false,\n\t\n\t    /**\n\t     * When `true`, object rotation is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockRotation:             false,\n\t\n\t    /**\n\t     * When `true`, object horizontal scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingY:             false,\n\t\n\t    /**\n\t     * When `true`, object non-uniform scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockUniScaling:           false,\n\t\n\t    /**\n\t     * When `true`, object horizontal skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingY:             false,\n\t\n\t    /**\n\t     * When `true`, object cannot be flipped by scaling into negative values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingFlip:          false,\n\t\n\t    /**\n\t     * When `true`, object is not exported in SVG or OBJECT/JSON\n\t     * since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    excludeFromExport:        false,\n\t\n\t    /**\n\t     * When `true`, object is cached on an additional canvas.\n\t     * default to true\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    objectCaching:            objectCaching,\n\t\n\t    /**\n\t     * When `true`, object properties are checked for cache invalidation. In some particular\n\t     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n\t     * or if your application does not allow you to modify properties for groups child you want\n\t     * to disable it for groups.\n\t     * default to false\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default false\n\t     */\n\t    statefullCache:            false,\n\t\n\t    /**\n\t     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n\t     * too much and will be redrawn with correct details at the end of scaling.\n\t     * this setting is performance and application dependant.\n\t     * default to true\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    noScaleCache:              true,\n\t\n\t    /**\n\t     * When set to `true`, object's cache will be rerendered next render call.\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    dirty:                true,\n\t\n\t    /**\n\t     * List of properties to consider when checking if state\n\t     * of an object is changed (fabric.Object#hasStateChanged)\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: (\n\t      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t      'skewX skewY fillRule'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * List of properties to consider when checking if cache needs refresh\n\t     * @type Array\n\t     */\n\t    cacheProperties: (\n\t      'fill stroke strokeWidth strokeDashArray width height' +\n\t      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Create a the canvas used to keep the cached copy of the object\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function() {\n\t      this._cacheProperties = {};\n\t      this._cacheCanvas = fabric.document.createElement('canvas');\n\t      this._cacheContext = this._cacheCanvas.getContext('2d');\n\t      this._updateCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n\t     * and each side do not cross fabric.cacheSideLimit\n\t     * those numbers are configurable so that you can get as much detail as you want\n\t     * making bargain with performances.\n\t     * @param {Object} dims\n\t     * @param {Object} dims.width width of canvas\n\t     * @param {Object} dims.height height of canvas\n\t     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.width width of canvas\n\t     * @return {Object}.height height of canvas\n\t     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     */\n\t    _limitCacheSize: function(dims) {\n\t      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n\t          maximumSide = fabric.cacheSideLimit,\n\t          width = dims.width, height = dims.height,\n\t          ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal, maximumSide),\n\t          capValue = fabric.util.capValue, max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit,\n\t          x = capValue(min, limitedDims.x, max),\n\t          y = capValue(min, limitedDims.y, max);\n\t      if (width > x) {\n\t        dims.zoomX /= width / x;\n\t        dims.width = x;\n\t      }\n\t      else if (width < min) {\n\t        dims.width = min;\n\t      }\n\t      if (height > y) {\n\t        dims.zoomY /= height / y;\n\t        dims.height = y;\n\t      }\n\t      else if (height < min) {\n\t        dims.height = min;\n\t      }\n\t      return dims;\n\t    },\n\t\n\t    /**\n\t     * Return the dimension and the zoom level needed to create a cache canvas\n\t     * big enough to host the object to be cached.\n\t     * @private\n\t     * @param {Object} dim.x width of object to be cached\n\t     * @param {Object} dim.y height of object to be cached\n\t     * @return {Object}.width width of canvas\n\t     * @return {Object}.height height of canvas\n\t     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     */\n\t    _getCacheCanvasDimensions: function() {\n\t      var zoom = this.canvas && this.canvas.getZoom() || 1,\n\t          objectScale = this.getObjectScaling(),\n\t          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n\t          dim = this._getNonTransformedDimensions(),\n\t          zoomX = objectScale.scaleX * zoom * retina,\n\t          zoomY = objectScale.scaleY * zoom * retina,\n\t          width = dim.x * zoomX,\n\t          height = dim.y * zoomY;\n\t      return {\n\t        width: width + ALIASING_LIMIT,\n\t        height: height + ALIASING_LIMIT,\n\t        zoomX: zoomX,\n\t        zoomY: zoomY,\n\t        x: dim.x,\n\t        y: dim.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Update width and height of the canvas for cache\n\t     * returns true or false if canvas needed resize.\n\t     * @private\n\t     * @return {Boolean} true if the canvas has been resized\n\t     */\n\t    _updateCacheCanvas: function() {\n\t      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n\t        var target = this.canvas._currentTransform.target,\n\t            action = this.canvas._currentTransform.action;\n\t        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n\t          return false;\n\t        }\n\t      }\n\t      var canvas = this._cacheCanvas,\n\t          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n\t          minCacheSize = fabric.minCacheSideLimit,\n\t          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n\t          zoomX = dims.zoomX, zoomY = dims.zoomY,\n\t          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n\t          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n\t          shouldRedraw = dimensionsChanged || zoomChanged,\n\t          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n\t      if (dimensionsChanged) {\n\t        var canvasWidth = this._cacheCanvas.width,\n\t            canvasHeight = this._cacheCanvas.height,\n\t            sizeGrowing = width > canvasWidth || height > canvasHeight,\n\t            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n\t              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n\t        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n\t        if (sizeGrowing) {\n\t          additionalWidth = width * 0.1;\n\t          additionalHeight = height * 0.1;\n\t        }\n\t      }\n\t      if (shouldRedraw) {\n\t        if (shouldResizeCanvas) {\n\t          canvas.width = Math.max(Math.ceil(width + additionalWidth), minCacheSize);\n\t          canvas.height = Math.max(Math.ceil(height + additionalHeight), minCacheSize);\n\t        }\n\t        else {\n\t          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n\t          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n\t        }\n\t        drawingWidth = dims.x * zoomX / 2;\n\t        drawingHeight = dims.y * zoomY / 2;\n\t        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n\t        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n\t        this.cacheWidth = width;\n\t        this.cacheHeight = height;\n\t        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n\t        this._cacheContext.scale(zoomX, zoomY);\n\t        this.zoomX = zoomX;\n\t        this.zoomY = zoomY;\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets object's properties from options\n\t     * @param {Object} [options] Options object\n\t     */\n\t    setOptions: function(options) {\n\t      this._setOptions(options);\n\t      this._initGradient(options.fill, 'fill');\n\t      this._initGradient(options.stroke, 'stroke');\n\t      this._initClipping(options);\n\t      this._initPattern(options.fill, 'fill');\n\t      this._initPattern(options.stroke, 'stroke');\n\t    },\n\t\n\t    /**\n\t     * Transforms context when rendering an object\n\t     * @param {CanvasRenderingContext2D} ctx Context\n\t     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n\t     */\n\t    transform: function(ctx, fromLeft) {\n\t      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n\t        this.group.transform(ctx);\n\t      }\n\t      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n\t      ctx.translate(center.x, center.y);\n\t      this.angle && ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.scale(\n\t        this.scaleX * (this.flipX ? -1 : 1),\n\t        this.scaleY * (this.flipY ? -1 : 1)\n\t      );\n\t      this.skewX && ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n\t      this.skewY && ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns an object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          object = {\n\t            type:                     this.type,\n\t            originX:                  this.originX,\n\t            originY:                  this.originY,\n\t            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n\t            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n\t            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n\t            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n\t            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n\t            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n\t            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n\t            strokeLineCap:            this.strokeLineCap,\n\t            strokeLineJoin:           this.strokeLineJoin,\n\t            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n\t            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n\t            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n\t            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n\t            flipX:                    this.flipX,\n\t            flipY:                    this.flipY,\n\t            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n\t            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n\t            visible:                  this.visible,\n\t            clipTo:                   this.clipTo && String(this.clipTo),\n\t            backgroundColor:          this.backgroundColor,\n\t            fillRule:                 this.fillRule,\n\t            globalCompositeOperation: this.globalCompositeOperation,\n\t            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n\t            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n\t            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n\t          };\n\t\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      if (!this.includeDefaultValues) {\n\t        object = this._removeDefaultValues(object);\n\t      }\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns (dataless) object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      // will be overwritten by subclasses\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _removeDefaultValues: function(object) {\n\t      var prototype = fabric.util.getKlass(object.type).prototype,\n\t          stateProperties = prototype.stateProperties;\n\t      stateProperties.forEach(function(prop) {\n\t        if (object[prop] === prototype[prop]) {\n\t          delete object[prop];\n\t        }\n\t        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n\t                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\t\n\t        // basically a check for [] === []\n\t        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n\t          delete object[prop];\n\t        }\n\t      });\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.' + capitalize(this.type) + '>';\n\t    },\n\t\n\t    /**\n\t     * Return the object scale factor counting also the group scaling\n\t     * @return {Object} object with scaleX and scaleY properties\n\t     */\n\t    getObjectScaling: function() {\n\t      var scaleX = this.scaleX, scaleY = this.scaleY;\n\t      if (this.group) {\n\t        var scaling = this.group.getObjectScaling();\n\t        scaleX *= scaling.scaleX;\n\t        scaleY *= scaling.scaleY;\n\t      }\n\t      return { scaleX: scaleX, scaleY: scaleY };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n\t          isChanged = this[key] !== value;\n\t\n\t      if (shouldConstrainValue) {\n\t        value = this._constrainScale(value);\n\t      }\n\t      if (key === 'scaleX' && value < 0) {\n\t        this.flipX = !this.flipX;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'scaleY' && value < 0) {\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n\t        value = new fabric.Shadow(value);\n\t      }\n\t      else if (key === 'dirty' && this.group) {\n\t        this.group.set('dirty', value);\n\t      }\n\t\n\t      this[key] = value;\n\t\n\t      if (isChanged && this.cacheProperties.indexOf(key) > -1) {\n\t        if (this.group) {\n\t          this.group.set('dirty', true);\n\t        }\n\t        this.dirty = true;\n\t      }\n\t\n\t      if (isChanged && this.group && this.stateProperties.indexOf(key) > -1) {\n\t        this.group.set('dirty', true);\n\t      }\n\t\n\t      if (key === 'width' || key === 'height') {\n\t        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * This callback function is called by the parent group of an object every\n\t     * time a non-delegated property changes on the group. It is passed the key\n\t     * and value as parameters. Not adding in this function's signature to avoid\n\t     * Travis build error about unused variables.\n\t     */\n\t    setOnGroup: function() {\n\t      // implemented by sub-classes, as needed.\n\t    },\n\t\n\t    /**\n\t     * Sets sourcePath of an object\n\t     * @param {String} value Value to set sourcePath to\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setSourcePath: function(value) {\n\t      this.sourcePath = value;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Retrieves viewportTransform from Object's canvas if possible\n\t     * @method getViewportTransform\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean}\n\t     */\n\t    getViewportTransform: function() {\n\t      if (this.canvas && this.canvas.viewportTransform) {\n\t        return this.canvas.viewportTransform;\n\t      }\n\t      return fabric.iMatrix.concat();\n\t    },\n\t\n\t    /*\n\t     * @private\n\t     * return if the object would be visible in rendering\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean}\n\t     */\n\t    isNotVisible: function() {\n\t      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n\t    },\n\t\n\t    /**\n\t     * Renders an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if width/height are zeros or object is not visible\n\t      if (this.isNotVisible()) {\n\t        return;\n\t      }\n\t      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n\t        return;\n\t      }\n\t      ctx.save();\n\t      //setup fill rule for current object\n\t      this._setupCompositeOperation(ctx);\n\t      this.drawSelectionBackground(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      if (this.shouldCache(noTransform)) {\n\t        if (!this._cacheCanvas) {\n\t          this._createCacheCanvas();\n\t        }\n\t        if (this.isCacheDirty(noTransform)) {\n\t          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n\t          this.drawObject(this._cacheContext, noTransform);\n\t          this.dirty = false;\n\t        }\n\t        this.drawCacheOnCanvas(ctx);\n\t      }\n\t      else {\n\t        this._removeCacheCanvas();\n\t        this.dirty = false;\n\t        this.drawObject(ctx, noTransform);\n\t        if (noTransform && this.objectCaching && this.statefullCache) {\n\t          this.saveState({ propertySet: 'cacheProperties' });\n\t        }\n\t      }\n\t      this.clipTo && ctx.restore();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Remove cacheCanvas and its dimensions from the objects\n\t     */\n\t    _removeCacheCanvas: function() {\n\t      this._cacheCanvas = null;\n\t      this.cacheWidth = 0;\n\t      this.cacheHeight = 0;\n\t    },\n\t\n\t    /**\n\t     * When set to `true`, force the object to have its own cache, even if it is inside a group\n\t     * it may be needed when your object behave in a particular way on the cache and always needs\n\t     * its own isolated canvas to render correctly.\n\t     * This function is created to be subclassed by custom classes.\n\t     * since 1.7.12\n\t     * @type function\n\t     * @return false\n\t     */\n\t    needsItsOwnCache: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Decide if the object should cache or not.\n\t     * objectCaching is a global flag, wins over everything\n\t     * needsItsOwnCache should be used when the object drawing method requires\n\t     * a cache step. None of the fabric classes requires it.\n\t     * Generally you do not cache objects in groups because the group outside is cached.\n\t     * @param {Boolean} noTransform if rendereing in pathGroup, caching is not supported at object level\n\t     * @return {Boolean}\n\t     */\n\t    shouldCache: function(noTransform) {\n\t      return !noTransform && this.objectCaching &&\n\t      (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n\t    },\n\t\n\t    /**\n\t     * Check if this object or a child object will cast a shadow\n\t     * used by Group.shouldCache to know if child has a shadow recursively\n\t     * @return {Boolean}\n\t     */\n\t    willDrawShadow: function() {\n\t      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx, noTransform) {\n\t      this._renderBackground(ctx);\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      this._render(ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * Paint the cached copy of the object on the target context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    drawCacheOnCanvas: function(ctx) {\n\t      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n\t      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n\t     * on parent canvas.\n\t     */\n\t    isCacheDirty: function(skipCanvas) {\n\t      if (this.isNotVisible()) {\n\t        return false;\n\t      }\n\t      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n\t        // in this case the context is already cleared.\n\t        return true;\n\t      }\n\t      else {\n\t        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n\t          if (this._cacheCanvas && !skipCanvas) {\n\t            var width = this.cacheWidth / this.zoomX;\n\t            var height = this.cacheHeight / this.zoomY;\n\t            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n\t          }\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Draws a background for the object big as its untrasformed dimensions\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      if (!this.backgroundColor) {\n\t        return;\n\t      }\n\t      var dim = this._getNonTransformedDimensions();\n\t      ctx.fillStyle = this.backgroundColor;\n\t\n\t      ctx.fillRect(\n\t        -dim.x / 2,\n\t        -dim.y / 2,\n\t        dim.x,\n\t        dim.y\n\t      );\n\t      // if there is background color no other shadows\n\t      // should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setOpacity: function(ctx) {\n\t      ctx.globalAlpha *= this.opacity;\n\t    },\n\t\n\t    _setStrokeStyles: function(ctx) {\n\t      if (this.stroke) {\n\t        ctx.lineWidth = this.strokeWidth;\n\t        ctx.lineCap = this.strokeLineCap;\n\t        ctx.lineJoin = this.strokeLineJoin;\n\t        ctx.miterLimit = this.strokeMiterLimit;\n\t        ctx.strokeStyle = this.stroke.toLive\n\t          ? this.stroke.toLive(ctx, this)\n\t          : this.stroke;\n\t      }\n\t    },\n\t\n\t    _setFillStyles: function(ctx) {\n\t      if (this.fill) {\n\t        ctx.fillStyle = this.fill.toLive\n\t          ? this.fill.toLive(ctx, this)\n\t          : this.fill;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * Sets line dash\n\t     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n\t     * @param {Array} dashArray array representing dashes\n\t     * @param {Function} alternative function to call if browaser does not support lineDash\n\t     */\n\t    _setLineDash: function(ctx, dashArray, alternative) {\n\t      if (!dashArray) {\n\t        return;\n\t      }\n\t      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t      if (1 & dashArray.length) {\n\t        dashArray.push.apply(dashArray, dashArray);\n\t      }\n\t      if (supportsLineDash) {\n\t        ctx.setLineDash(dashArray);\n\t      }\n\t      else {\n\t        alternative && alternative(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderControls: function(ctx) {\n\t      if (!this.active || (this.group && this.group !== this.canvas.getActiveGroup())) {\n\t        return;\n\t      }\n\t\n\t      var vpt = this.getViewportTransform(),\n\t          matrix = this.calcTransformMatrix(),\n\t          options;\n\t      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n\t      options = fabric.util.qrDecompose(matrix);\n\t\n\t      ctx.save();\n\t      ctx.translate(options.translateX, options.translateY);\n\t      ctx.lineWidth = 1 * this.borderScaleFactor;\n\t      if (!this.group) {\n\t        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      }\n\t      if (this.group && this.group === this.canvas.getActiveGroup()) {\n\t        ctx.rotate(degreesToRadians(options.angle));\n\t        this.drawBordersInGroup(ctx, options);\n\t      }\n\t      else {\n\t        ctx.rotate(degreesToRadians(this.angle));\n\t        this.drawBorders(ctx);\n\t      }\n\t      this.drawControls(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n\t          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n\t          scaling = this.getObjectScaling();\n\t      if (this.canvas && this.canvas._isRetinaScaling()) {\n\t        multX *= fabric.devicePixelRatio;\n\t        multY *= fabric.devicePixelRatio;\n\t      }\n\t      ctx.shadowColor = this.shadow.color;\n\t      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n\t      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n\t      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _removeShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      ctx.shadowColor = '';\n\t      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Object} filler fabric.Pattern or fabric.Gradient\n\t     */\n\t    _applyPatternGradientTransform: function(ctx, filler) {\n\t      if (!filler.toLive) {\n\t        return;\n\t      }\n\t      var transform = filler.gradientTransform || filler.patternTransform;\n\t      if (transform) {\n\t        ctx.transform.apply(ctx, transform);\n\t      }\n\t      var offsetX = -this.width / 2 + filler.offsetX || 0,\n\t          offsetY = -this.height / 2 + filler.offsetY || 0;\n\t      ctx.translate(offsetX, offsetY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderFill: function(ctx) {\n\t      if (!this.fill) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      this._applyPatternGradientTransform(ctx, this.fill);\n\t      if (this.fillRule === 'evenodd') {\n\t        ctx.fill('evenodd');\n\t      }\n\t      else {\n\t        ctx.fill();\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderStroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\t      this._applyPatternGradientTransform(ctx, this.stroke);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Clones an instance, some objects are async, so using callback method will work for every object.\n\t     * Using the direct return does not work for images and groups.\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {fabric.Object} clone of an instance\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      if (this.constructor.fromObject) {\n\t        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t      }\n\t      return new fabric.Object(this.toObject(propertiesToInclude));\n\t    },\n\t\n\t    /**\n\t     * Creates an instance of fabric.Image out of an object\n\t     * @param {Function} callback callback, invoked with an instance as a first argument\n\t     * @param {Object} [options] for clone as image, passed to toDataURL\n\t     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    cloneAsImage: function(callback, options) {\n\t      var dataUrl = this.toDataURL(options);\n\t      fabric.util.loadImage(dataUrl, function(img) {\n\t        if (callback) {\n\t          callback(new fabric.Image(img));\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Converts an object into a data-url-like string\n\t     * @param {Object} options Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     */\n\t    toDataURL: function(options) {\n\t      options || (options = { });\n\t\n\t      var el = fabric.util.createCanvasElement(),\n\t          boundingRect = this.getBoundingRect();\n\t\n\t      el.width = boundingRect.width;\n\t      el.height = boundingRect.height;\n\t      fabric.util.wrapElement(el, 'div');\n\t      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (options.format === 'jpg') {\n\t        options.format = 'jpeg';\n\t      }\n\t\n\t      if (options.format === 'jpeg') {\n\t        canvas.backgroundColor = '#fff';\n\t      }\n\t\n\t      var origParams = {\n\t        active: this.get('active'),\n\t        left: this.getLeft(),\n\t        top: this.getTop()\n\t      };\n\t\n\t      this.set('active', false);\n\t      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\t\n\t      var originalCanvas = this.canvas;\n\t      canvas.add(this);\n\t      var data = canvas.toDataURL(options);\n\t\n\t      this.set(origParams).setCoords();\n\t      this.canvas = originalCanvas;\n\t\n\t      canvas.dispose();\n\t      canvas = null;\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Returns true if specified type is identical to the type of an instance\n\t     * @param {String} type Type to check against\n\t     * @return {Boolean}\n\t     */\n\t    isType: function(type) {\n\t      return this.type === type;\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance (is 1 unless subclassed)\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    },\n\t\n\t    /**\n\t     * Returns a JSON representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} JSON\n\t     */\n\t    toJSON: function(propertiesToInclude) {\n\t      // delegate, not alias\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Sets gradient (fill or stroke) of an object\n\t     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n\t     * @param {String} property Property name 'stroke' or 'fill'\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n\t     * @param {Number} [options.x1=0] x-coordinate of start point\n\t     * @param {Number} [options.y1=0] y-coordinate of start point\n\t     * @param {Number} [options.x2=0] x-coordinate of end point\n\t     * @param {Number} [options.y2=0] y-coordinate of end point\n\t     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n\t     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n\t     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n\t     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n\t     * @example <caption>Set linear gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'linear',\n\t     *   x1: -object.width / 2,\n\t     *   y1: 0,\n\t     *   x2: object.width / 2,\n\t     *   y2: 0,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     * @example <caption>Set radial gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'radial',\n\t     *   x1: 0,\n\t     *   y1: 0,\n\t     *   x2: 0,\n\t     *   y2: 0,\n\t     *   r1: object.width / 2,\n\t     *   r2: 10,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setGradient: function(property, options) {\n\t      options || (options = { });\n\t\n\t      var gradient = { colorStops: [] };\n\t\n\t      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n\t      gradient.coords = {\n\t        x1: options.x1,\n\t        y1: options.y1,\n\t        x2: options.x2,\n\t        y2: options.y2\n\t      };\n\t\n\t      if (options.r1 || options.r2) {\n\t        gradient.coords.r1 = options.r1;\n\t        gradient.coords.r2 = options.r2;\n\t      }\n\t\n\t      gradient.gradientTransform = options.gradientTransform;\n\t      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\t\n\t      return this.set(property, fabric.Gradient.forObject(this, gradient));\n\t    },\n\t\n\t    /**\n\t     * Sets pattern fill of an object\n\t     * @param {Object} options Options object\n\t     * @param {(String|HTMLImageElement)} options.source Pattern source\n\t     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n\t     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n\t     * @example <caption>Set pattern</caption>\n\t     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n\t     *   object.setPatternFill({\n\t     *     source: img,\n\t     *     repeat: 'repeat'\n\t     *   });\n\t     *   canvas.renderAll();\n\t     * });\n\t     */\n\t    setPatternFill: function(options) {\n\t      return this.set('fill', new fabric.Pattern(options));\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.Object#shadow|shadow} of an object\n\t     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n\t     * @param {Number} [options.blur=0] Shadow blur\n\t     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n\t     * @param {Number} [options.offsetY=0] Shadow vertical offset\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n\t     * @example <caption>Set shadow with string notation</caption>\n\t     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n\t     * canvas.renderAll();\n\t     * @example <caption>Set shadow with object notation</caption>\n\t     * object.setShadow({\n\t     *   color: 'red',\n\t     *   blur: 10,\n\t     *   offsetX: 20,\n\t     *   offsetY: 20\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setShadow: function(options) {\n\t      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n\t    },\n\t\n\t    /**\n\t     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n\t     * @param {String} color Color value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setColor: function(color) {\n\t      this.set('fill', color);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets \"angle\" of an instance\n\t     * @param {Number} angle Angle value (in degrees)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setAngle: function(angle) {\n\t      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._setOriginToCenter();\n\t      }\n\t\n\t      this.set('angle', angle);\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._resetOrigin();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerH: function () {\n\t      this.canvas && this.canvas.centerObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterH: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerV: function () {\n\t      this.canvas && this.canvas.centerObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterV: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally on canvas to which is was added last\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    center: function () {\n\t      this.canvas && this.canvas.centerObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenter: function () {\n\t      this.canvas && this.canvas.viewportCenterObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Removes object from canvas to which it was added last\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    remove: function() {\n\t      if (this.canvas) {\n\t        if (this.group && this.group === this.canvas._activeGroup) {\n\t          this.group.remove(this);\n\t        }\n\t        this.canvas.remove(this);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a pointer relative to an object\n\t     * @param {Event} e Event to operate upon\n\t     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n\t     * @return {Object} Coordinates of a pointer (x, y)\n\t     */\n\t    getLocalPointer: function(e, pointer) {\n\t      pointer = pointer || this.canvas.getPointer(e);\n\t      var pClicked = new fabric.Point(pointer.x, pointer.y),\n\t          objectLeftTop = this._getLeftTopCoords();\n\t      if (this.angle) {\n\t        pClicked = fabric.util.rotatePoint(\n\t          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n\t      }\n\t      return {\n\t        x: pClicked.x - objectLeftTop.x,\n\t        y: pClicked.y - objectLeftTop.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Sets canvas globalCompositeOperation for specific object\n\t     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n\t     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n\t     */\n\t    _setupCompositeOperation: function (ctx) {\n\t      if (this.globalCompositeOperation) {\n\t        ctx.globalCompositeOperation = this.globalCompositeOperation;\n\t      }\n\t    }\n\t  });\n\t\n\t  fabric.util.createAccessors(fabric.Object);\n\t\n\t  /**\n\t   * Alias for {@link fabric.Object.prototype.setAngle}\n\t   * @alias rotate -> setAngle\n\t   * @memberOf fabric.Object\n\t   */\n\t  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\t\n\t  extend(fabric.Object.prototype, fabric.Observable);\n\t\n\t  /**\n\t   * Defines the number of fraction digits to use when serializing object values.\n\t   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @constant\n\t   * @type Number\n\t   */\n\t  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\t\n\t  fabric.Object._fromObject = function(className, object, callback, forceAsync, extraParam) {\n\t    var klass = fabric[className];\n\t    object = clone(object, true);\n\t    if (forceAsync) {\n\t      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n\t        if (typeof patterns[0] !== 'undefined') {\n\t          object.fill = patterns[0];\n\t        }\n\t        if (typeof patterns[1] !== 'undefined') {\n\t          object.stroke = patterns[1];\n\t        }\n\t        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n\t        callback && callback(instance);\n\t      });\n\t    }\n\t    else {\n\t      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n\t      callback && callback(instance);\n\t      return instance;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unique id used internally when creating SVG elements\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @type Number\n\t   */\n\t  fabric.Object.__uid = 0;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      originXOffset = {\n\t        left: -0.5,\n\t        center: 0,\n\t        right: 0.5\n\t      },\n\t      originYOffset = {\n\t        top: -0.5,\n\t        center: 0,\n\t        bottom: 0.5\n\t      };\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n\t      var x = point.x,\n\t          y = point.y,\n\t          offsetX, offsetY, dim;\n\t\n\t      if (typeof fromOriginX === 'string') {\n\t        fromOriginX = originXOffset[fromOriginX];\n\t      }\n\t      else {\n\t        fromOriginX -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginX === 'string') {\n\t        toOriginX = originXOffset[toOriginX];\n\t      }\n\t      else {\n\t        toOriginX -= 0.5;\n\t      }\n\t\n\t      offsetX = toOriginX - fromOriginX;\n\t\n\t      if (typeof fromOriginY === 'string') {\n\t        fromOriginY = originYOffset[fromOriginY];\n\t      }\n\t      else {\n\t        fromOriginY -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginY === 'string') {\n\t        toOriginY = originYOffset[toOriginY];\n\t      }\n\t      else {\n\t        toOriginY -= 0.5;\n\t      }\n\t\n\t      offsetY = toOriginY - fromOriginY;\n\t\n\t      if (offsetX || offsetY) {\n\t        dim = this._getTransformedDimensions();\n\t        x = point.x + offsetX * dim.x;\n\t        y = point.y + offsetY * dim.y;\n\t      }\n\t\n\t      return new fabric.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToCenterPoint: function(point, originX, originY) {\n\t      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} center The point which corresponds to center of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToOriginPoint: function(center, originX, originY) {\n\t      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Returns the real center coordinates of the object\n\t     * @return {fabric.Point}\n\t     */\n\t    getCenterPoint: function() {\n\t      var leftTop = new fabric.Point(this.left, this.top);\n\t      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the coordinates of the object based on center coordinates\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @return {fabric.Point}\n\t     */\n\t    // getOriginPoint: function(center) {\n\t    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n\t    // },\n\t\n\t    /**\n\t     * Returns the coordinates of the object as if it has a different origin\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    getPointByOrigin: function(originX, originY) {\n\t      var center = this.getCenterPoint();\n\t      return this.translateToOriginPoint(center, originX, originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in local coordinates\n\t     * @param {fabric.Point} point The point relative to the global coordinate system\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    toLocalPoint: function(point, originX, originY) {\n\t      var center = this.getCenterPoint(),\n\t          p, p2;\n\t\n\t      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n\t        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      }\n\t      else {\n\t        p = new fabric.Point(this.left, this.top);\n\t      }\n\t\n\t      p2 = new fabric.Point(point.x, point.y);\n\t      if (this.angle) {\n\t        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n\t      }\n\t      return p2.subtractEquals(p);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in global coordinates\n\t     * @param {fabric.Point} The point relative to the local coordinate system\n\t     * @return {fabric.Point}\n\t     */\n\t    // toGlobalPoint: function(point) {\n\t    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n\t    // },\n\t\n\t    /**\n\t     * Sets the position of the object taking into consideration the object's origin\n\t     * @param {fabric.Point} pos The new position of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {void}\n\t     */\n\t    setPositionByOrigin: function(pos, originX, originY) {\n\t      var center = this.translateToCenterPoint(pos, originX, originY),\n\t          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\t\n\t      this.set('left', position.x);\n\t      this.set('top', position.y);\n\t    },\n\t\n\t    /**\n\t     * @param {String} to One of 'left', 'center', 'right'\n\t     */\n\t    adjustPosition: function(to) {\n\t      var angle = degreesToRadians(this.angle),\n\t          hypotFull = this.getWidth(),\n\t          xFull = Math.cos(angle) * hypotFull,\n\t          yFull = Math.sin(angle) * hypotFull,\n\t          offsetFrom, offsetTo;\n\t\n\t      //TODO: this function does not consider mixed situation like top, center.\n\t      if (typeof this.originX === 'string') {\n\t        offsetFrom = originXOffset[this.originX];\n\t      }\n\t      else {\n\t        offsetFrom = this.originX - 0.5;\n\t      }\n\t      if (typeof to === 'string') {\n\t        offsetTo = originXOffset[to];\n\t      }\n\t      else {\n\t        offsetTo = to - 0.5;\n\t      }\n\t      this.left += xFull * (offsetTo - offsetFrom);\n\t      this.top += yFull * (offsetTo - offsetFrom);\n\t      this.setCoords();\n\t      this.originX = to;\n\t    },\n\t\n\t    /**\n\t     * Sets the origin/position of the object to it's center point\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _setOriginToCenter: function() {\n\t      this._originalOriginX = this.originX;\n\t      this._originalOriginY = this.originY;\n\t\n\t      var center = this.getCenterPoint();\n\t\n\t      this.originX = 'center';\n\t      this.originY = 'center';\n\t\n\t      this.left = center.x;\n\t      this.top = center.y;\n\t    },\n\t\n\t    /**\n\t     * Resets the origin/position of the object to it's original origin\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _resetOrigin: function() {\n\t      var originPoint = this.translateToOriginPoint(\n\t        this.getCenterPoint(),\n\t        this._originalOriginX,\n\t        this._originalOriginY);\n\t\n\t      this.originX = this._originalOriginX;\n\t      this.originY = this._originalOriginY;\n\t\n\t      this.left = originPoint.x;\n\t      this.top = originPoint.y;\n\t\n\t      this._originalOriginX = null;\n\t      this._originalOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getLeftTopCoords: function() {\n\t      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n\t    },\n\t\n\t    /**\n\t    * Callback; invoked right before object is about to go from active to inactive\n\t    */\n\t    onDeselect: function() {\n\t      /* NOOP */\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function getCoords(coords) {\n\t    return [\n\t      new fabric.Point(coords.tl.x, coords.tl.y),\n\t      new fabric.Point(coords.tr.x, coords.tr.y),\n\t      new fabric.Point(coords.br.x, coords.br.y),\n\t      new fabric.Point(coords.bl.x, coords.bl.y)\n\t    ];\n\t  }\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Describe object's corner position in canvas element coordinates.\n\t     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n\t     * each property is an object with x, y and corner.\n\t     * The `corner` property contains in a similar manner the 4 points of the\n\t     * interactive area of the corner.\n\t     * The coordinates depends from this properties: width, height, scaleX, scaleY\n\t     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n\t     * The coordinates get updated with @method setCoords.\n\t     * You can calculate them without updating with @method calcCoords;\n\t     * @memberOf fabric.Object.prototype\n\t     */\n\t    oCoords: null,\n\t\n\t    /**\n\t     * Describe object's corner position in canvas object absolute coordinates\n\t     * properties are tl,tr,bl,br and describe the four main corner.\n\t     * each property is an object with x, y, instance of Fabric.Point.\n\t     * The coordinates depends from this properties: width, height, scaleX, scaleY\n\t     * skewX, skewY, angle, strokeWidth, top, left.\n\t     * Those coordinates are usefull to understand where an object is. They get updated\n\t     * with oCoords but they do not need to be updated when zoom or panning change.\n\t     * The coordinates get updated with @method setCoords.\n\t     * You can calculate them without updating with @method calcCoords(true);\n\t     * @memberOf fabric.Object.prototype\n\t     */\n\t    aCoords: null,\n\t\n\t    /**\n\t     * return correct set of coordinates for intersection\n\t     */\n\t    getCoords: function(absolute, calculate) {\n\t      if (!this.oCoords) {\n\t        this.setCoords();\n\t      }\n\t      var coords = absolute ? this.aCoords : this.oCoords;\n\t      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with an area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object intersects with an area formed by 2 points\n\t     */\n\t    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n\t      var coords = this.getCoords(absolute, calculate),\n\t          intersection = fabric.Intersection.intersectPolygonRectangle(\n\t            coords,\n\t            pointTL,\n\t            pointBR\n\t          );\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with another object\n\t     * @param {Object} other Object to test\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object intersects with another object\n\t     */\n\t    intersectsWithObject: function(other, absolute, calculate) {\n\t      var intersection = fabric.Intersection.intersectPolygonPolygon(\n\t            this.getCoords(absolute, calculate),\n\t            other.getCoords(absolute, calculate)\n\t          );\n\t\n\t      return intersection.status === 'Intersection'\n\t        || other.isContainedWithinObject(this, absolute, calculate)\n\t        || this.isContainedWithinObject(other, absolute, calculate);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area of another object\n\t     * @param {Object} other Object to test\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object is fully contained within area of another object\n\t     */\n\t    isContainedWithinObject: function(other, absolute, calculate) {\n\t      var points = this.getCoords(absolute, calculate),\n\t          i = 0, lines = other._getImageLines(\n\t            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n\t          );\n\t      for (; i < 4; i++) {\n\t        if (!other.containsPoint(points[i], lines)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object is fully contained within area formed by 2 points\n\t     */\n\t    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n\t      var boundingRect = this.getBoundingRect(absolute, calculate);\n\t\n\t      return (\n\t        boundingRect.left >= pointTL.x &&\n\t        boundingRect.left + boundingRect.width <= pointBR.x &&\n\t        boundingRect.top >= pointTL.y &&\n\t        boundingRect.top + boundingRect.height <= pointBR.y\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Checks if point is inside the object\n\t     * @param {fabric.Point} point Point to check against\n\t     * @param {Object} [lines] object returned from @method _getImageLines\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if point is inside the object\n\t     */\n\t    containsPoint: function(point, lines, absolute, calculate) {\n\t      var lines = lines || this._getImageLines(\n\t        calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n\t      ),\n\t          xPoints = this._findCrossPoints(point, lines);\n\t\n\t      // if xPoints is odd then point is inside the object\n\t      return (xPoints !== 0 && xPoints % 2 === 1);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is contained within the canvas with current viewportTransform\n\t     * the check is done stopping at first point that appear on screen\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Boolean} true if object is fully contained within canvas\n\t     */\n\t    isOnScreen: function(calculate) {\n\t      if (!this.canvas) {\n\t        return false;\n\t      }\n\t      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n\t      var points = this.getCoords(true, calculate), point;\n\t      for (var i = 0; i < 4; i++) {\n\t        point = points[i];\n\t        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n\t          return true;\n\t        }\n\t      }\n\t      // no points on screen, check intersection with absolute coordinates\n\t      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n\t        return true;\n\t      }\n\t      // worst case scenario the object is so big that contanins the screen\n\t      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n\t      if (this.containsPoint(centerPoint, null, true)) {\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Method that returns an object with the object edges in it, given the coordinates of the corners\n\t     * @private\n\t     * @param {Object} oCoords Coordinates of the object corners\n\t     */\n\t    _getImageLines: function(oCoords) {\n\t      return {\n\t        topline: {\n\t          o: oCoords.tl,\n\t          d: oCoords.tr\n\t        },\n\t        rightline: {\n\t          o: oCoords.tr,\n\t          d: oCoords.br\n\t        },\n\t        bottomline: {\n\t          o: oCoords.br,\n\t          d: oCoords.bl\n\t        },\n\t        leftline: {\n\t          o: oCoords.bl,\n\t          d: oCoords.tl\n\t        }\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Helper method to determine how many cross points are between the 4 object edges\n\t     * and the horizontal line determined by a point on canvas\n\t     * @private\n\t     * @param {fabric.Point} point Point to check\n\t     * @param {Object} lines Coordinates of the object being evaluated\n\t     */\n\t     // remove yi, not used but left code here just in case.\n\t    _findCrossPoints: function(point, lines) {\n\t      var b1, b2, a1, a2, xi, // yi,\n\t          xcount = 0,\n\t          iLine;\n\t\n\t      for (var lineKey in lines) {\n\t        iLine = lines[lineKey];\n\t        // optimisation 1: line below point. no cross\n\t        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 2: line above point. no cross\n\t        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 3: vertical line case\n\t        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n\t          xi = iLine.o.x;\n\t          // yi = point.y;\n\t        }\n\t        // calculate the intersection point\n\t        else {\n\t          b1 = 0;\n\t          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n\t          a1 = point.y - b1 * point.x;\n\t          a2 = iLine.o.y - b2 * iLine.o.x;\n\t\n\t          xi = -(a1 - a2) / (b1 - b2);\n\t          // yi = a1 + b1 * xi;\n\t        }\n\t        // dont count xi < point.x cases\n\t        if (xi >= point.x) {\n\t          xcount += 1;\n\t        }\n\t        // optimisation 4: specific for square images\n\t        if (xcount === 2) {\n\t          break;\n\t        }\n\t      }\n\t      return xcount;\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} width value\n\t     */\n\t    getBoundingRectWidth: function() {\n\t      return this.getBoundingRect().width;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} height value\n\t     */\n\t    getBoundingRectHeight: function() {\n\t      return this.getBoundingRect().height;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n\t     * the box is intented as aligned to axis of canvas.\n\t     * @param {Boolean} [absolute] use coordinates without viewportTransform\n\t     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    getBoundingRect: function(absolute, calculate) {\n\t      var coords = this.getCoords(absolute, calculate);\n\t      return fabric.util.makeBoundingBoxFromPoints(coords);\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object bounding box counting transformations\n\t     * @return {Number} width value\n\t     */\n\t    getWidth: function() {\n\t      return this._getTransformedDimensions().x;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object bounding box counting transformations\n\t     * to be renamed in 2.0\n\t     * @return {Number} height value\n\t     */\n\t    getHeight: function() {\n\t      return this._getTransformedDimensions().y;\n\t    },\n\t\n\t    /**\n\t     * Makes sure the scale is valid and modifies it if necessary\n\t     * @private\n\t     * @param {Number} value\n\t     * @return {Number}\n\t     */\n\t    _constrainScale: function(value) {\n\t      if (Math.abs(value) < this.minScaleLimit) {\n\t        if (value < 0) {\n\t          return -this.minScaleLimit;\n\t        }\n\t        else {\n\t          return this.minScaleLimit;\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Scales an object (equally by x and y)\n\t     * @param {Number} value Scale factor\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scale: function(value) {\n\t      value = this._constrainScale(value);\n\t\n\t      if (value < 0) {\n\t        this.flipX = !this.flipX;\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t\n\t      this.scaleX = value;\n\t      this.scaleY = value;\n\t      return this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New width value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToWidth: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n\t      return this.scale(value / this.width / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New height value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToHeight: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n\t      return this.scale(value / this.height / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Calculate and returns the .coords of an object.\n\t     * @return {Object} Object with tl, tr, br, bl ....\n\t     * @chainable\n\t     */\n\t    calcCoords: function(absolute) {\n\t      var theta = degreesToRadians(this.angle),\n\t          vpt = this.getViewportTransform(),\n\t          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n\t          currentWidth = dim.x, currentHeight = dim.y,\n\t          sinTh = Math.sin(theta),\n\t          cosTh = Math.cos(theta),\n\t          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n\t          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n\t          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n\t          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\t          center = this.getCenterPoint(),\n\t          // offset added for rotate and scale actions\n\t          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n\t          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n\t          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n\t          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n\t          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n\t      if (!absolute) {\n\t        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n\t            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n\t            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n\t            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n\t            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n\t      }\n\t\n\t      // debugging\n\t\n\t      /* setTimeout(function() {\n\t         canvas.contextTop.fillStyle = 'green';\n\t         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n\t         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n\t         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n\t         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n\t         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n\t         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n\t         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n\t         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n\t         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n\t       }, 50); */\n\t\n\t      var coords = {\n\t        // corners\n\t        tl: tl, tr: tr, br: br, bl: bl,\n\t      };\n\t      if (!absolute) {\n\t        // middle\n\t        coords.ml = ml;\n\t        coords.mt = mt;\n\t        coords.mr = mr;\n\t        coords.mb = mb;\n\t        // rotating point\n\t        coords.mtr = mtr;\n\t      }\n\t      return coords;\n\t    },\n\t\n\t    /**\n\t     * Sets corner position coordinates based on current angle, width and height\n\t     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n\t     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n\t     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setCoords: function(ignoreZoom, skipAbsolute) {\n\t      this.oCoords = this.calcCoords(ignoreZoom);\n\t      if (!skipAbsolute) {\n\t        this.aCoords = this.calcCoords(true);\n\t      }\n\t\n\t      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\t      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * calculate rotation matrix of an object\n\t     * @return {Array} rotation matrix for the object\n\t     */\n\t    _calcRotateMatrix: function() {\n\t      if (this.angle) {\n\t        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n\t        // trying to keep rounding error small, ugly but it works.\n\t        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n\t          cos = 0;\n\t        }\n\t        return [cos, sin, -sin, cos, 0, 0];\n\t      }\n\t      return fabric.iMatrix.concat();\n\t    },\n\t\n\t    /**\n\t     * calculate trasform Matrix that represent current transformation from\n\t     * object properties.\n\t     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n\t     * @return {Array} matrix Transform Matrix for the object\n\t     */\n\t    calcTransformMatrix: function(skipGroup) {\n\t      var center = this.getCenterPoint(),\n\t          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n\t          rotateMatrix,\n\t          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n\t          matrix;\n\t      if (this.group && !skipGroup) {\n\t        matrix = multiplyMatrices(this.group.calcTransformMatrix(), translateMatrix);\n\t      }\n\t      else {\n\t        matrix = translateMatrix;\n\t      }\n\t      if (this.angle) {\n\t        rotateMatrix = this._calcRotateMatrix();\n\t        matrix = multiplyMatrices(matrix, rotateMatrix);\n\t      }\n\t      matrix = multiplyMatrices(matrix, dimensionMatrix);\n\t      return matrix;\n\t    },\n\t\n\t    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n\t      var skewMatrix,\n\t          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n\t          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n\t          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n\t      if (skewX) {\n\t        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n\t        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n\t      }\n\t      if (skewY) {\n\t        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n\t        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n\t      }\n\t      return scaleMatrix;\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     * @return {Object} .x width dimension\n\t     * @return {Object} .y height dimension\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var strokeWidth = this.strokeWidth,\n\t          w = this.width + strokeWidth,\n\t          h = this.height + strokeWidth;\n\t      return { x: w, y: h };\n\t    },\n\t\n\t    /*\n\t     * Calculate object bounding boxdimensions from its properties scale, skew.\n\t     * @private\n\t     * @return {Object} .x width dimension\n\t     * @return {Object} .y height dimension\n\t     */\n\t    _getTransformedDimensions: function(skewX, skewY) {\n\t      if (typeof skewX === 'undefined') {\n\t        skewX = this.skewX;\n\t      }\n\t      if (typeof skewY === 'undefined') {\n\t        skewY = this.skewY;\n\t      }\n\t      var dimensions = this._getNonTransformedDimensions(),\n\t          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n\t          points = [\n\t            {\n\t              x: -dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: -dimX,\n\t              y: dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: dimY\n\t            }],\n\t          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n\t          bbox;\n\t      for (i = 0; i < points.length; i++) {\n\t        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n\t      }\n\t      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n\t      return { x: bbox.width, y: bbox.height };\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions for controls. include padding and canvas zoom\n\t     * private\n\t     */\n\t    _calculateCurrentDimensions: function()  {\n\t      var vpt = this.getViewportTransform(),\n\t          dim = this._getTransformedDimensions(),\n\t          p = fabric.util.transformPoint(dim, vpt, true);\n\t\n\t      return p.scalarAdd(2 * this.padding);\n\t    },\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Moves an object to the bottom of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendToBack: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.sendToBack(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to the top of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringToFront: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.bringToFront(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object down in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendBackwards: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.sendBackwards(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object up in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringForward: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.bringForward(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to specified level in stack of drawn objects\n\t   * @param {Number} index New position of object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  moveTo: function(index) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n\t    }\n\t    else {\n\t      this.canvas.moveTo(this, index);\n\t    }\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t\n\t  function getSvgColorString(prop, value) {\n\t    if (!value) {\n\t      return prop + ': none; ';\n\t    }\n\t    else if (value.toLive) {\n\t      return prop + ': url(#SVGID_' + value.id + '); ';\n\t    }\n\t    else {\n\t      var color = new fabric.Color(value),\n\t          str = prop + ': ' + color.toRgb() + '; ',\n\t          opacity = color.getAlpha();\n\t      if (opacity !== 1) {\n\t        //change the color in rgb + opacity\n\t        str += prop + '-opacity: ' + opacity.toString() + '; ';\n\t      }\n\t      return str;\n\t    }\n\t  }\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t    /**\n\t     * Returns styles-string for svg-export\n\t     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n\t     * @return {String}\n\t     */\n\t    getSvgStyles: function(skipShadow) {\n\t\n\t      var fillRule = this.fillRule,\n\t          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n\t          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n\t          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n\t          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n\t          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n\t          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n\t          visibility = this.visible ? '' : ' visibility: hidden;',\n\t          filter = skipShadow ? '' : this.getSvgFilter(),\n\t          fill = getSvgColorString('fill', this.fill),\n\t          stroke = getSvgColorString('stroke', this.stroke);\n\t\n\t      return [\n\t        stroke,\n\t        'stroke-width: ', strokeWidth, '; ',\n\t        'stroke-dasharray: ', strokeDashArray, '; ',\n\t        'stroke-linecap: ', strokeLineCap, '; ',\n\t        'stroke-linejoin: ', strokeLineJoin, '; ',\n\t        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n\t        fill,\n\t        'fill-rule: ', fillRule, '; ',\n\t        'opacity: ', opacity, ';',\n\t        filter,\n\t        visibility\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns filter for svg shadow\n\t     * @return {String}\n\t     */\n\t    getSvgFilter: function() {\n\t      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns id attribute for svg output\n\t     * @return {String}\n\t     */\n\t    getSvgId: function() {\n\t      return this.id ? 'id=\"' + this.id + '\" ' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export\n\t     * @return {String}\n\t     */\n\t    getSvgTransform: function() {\n\t      if (this.group && this.group.type === 'path-group') {\n\t        return '';\n\t      }\n\t      var toFixed = fabric.util.toFixed,\n\t          angle = this.getAngle(),\n\t          skewX = (this.getSkewX() % 360),\n\t          skewY = (this.getSkewY() % 360),\n\t          center = this.getCenterPoint(),\n\t\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n\t                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n\t                            ' ' +\n\t                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n\t                          ')',\n\t\n\t          anglePart = angle !== 0\n\t            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n\t            : '',\n\t\n\t          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n\t            ? '' :\n\t            (' scale(' +\n\t              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n\t              ' ' +\n\t              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n\t            ')'),\n\t\n\t          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\t\n\t          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\t\n\t          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\t\n\t          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\t\n\t      return [\n\t        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export from the transform matrix of single elements\n\t     * @return {String}\n\t     */\n\t    getSvgTransformMatrix: function() {\n\t      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createBaseSVGMarkup: function() {\n\t      var markup = [];\n\t\n\t      if (this.fill && this.fill.toLive) {\n\t        markup.push(this.fill.toSVG(this, false));\n\t      }\n\t      if (this.stroke && this.stroke.toLive) {\n\t        markup.push(this.stroke.toSVG(this, false));\n\t      }\n\t      if (this.shadow) {\n\t        markup.push(this.shadow.toSVG(this));\n\t      }\n\t      return markup;\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var extend = fabric.util.object.extend,\n\t      originalSet = 'stateProperties';\n\t\n\t  /*\n\t    Depends on `stateProperties`\n\t  */\n\t  function saveProps(origin, destination, props) {\n\t    var tmpObj = { }, deep = true;\n\t    props.forEach(function(prop) {\n\t      tmpObj[prop] = origin[prop];\n\t    });\n\t    extend(origin[destination], tmpObj, deep);\n\t  }\n\t\n\t  function _isEqual(origValue, currentValue, firstPass) {\n\t    if (origValue === currentValue) {\n\t      // if the objects are identical, return\n\t      return true;\n\t    }\n\t    else if (Array.isArray(origValue)) {\n\t      if (origValue.length !== currentValue.length) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = origValue.length; i < len; i++) {\n\t        if (!_isEqual(origValue[i], currentValue[i])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t    else if (origValue && typeof origValue === 'object') {\n\t      var keys = Object.keys(origValue), key;\n\t      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        if (!_isEqual(origValue[key], currentValue[key])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t  }\n\t\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Returns true if object state (one of its state properties) was changed\n\t     * @param {String} [propertySet] optional name for the set of property we want to save\n\t     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n\t     */\n\t    hasStateChanged: function(propertySet) {\n\t      propertySet = propertySet || originalSet;\n\t      var dashedPropertySet = '_' + propertySet;\n\t      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n\t        return true;\n\t      }\n\t      return !_isEqual(this[dashedPropertySet], this, true);\n\t    },\n\t\n\t    /**\n\t     * Saves state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    saveState: function(options) {\n\t      var propertySet = options && options.propertySet || originalSet,\n\t          destination = '_' + propertySet;\n\t      if (!this[destination]) {\n\t        return this.setupState(options);\n\t      }\n\t      saveProps(this, destination, this[propertySet]);\n\t      if (options && options.stateProperties) {\n\t        saveProps(this, destination, options.stateProperties);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Setups state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    setupState: function(options) {\n\t      options = options || { };\n\t      var propertySet = options.propertySet || originalSet;\n\t      options.propertySet = propertySet;\n\t      this['_' + propertySet] = { };\n\t      this.saveState(options);\n\t      return this;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      /* eslint-disable camelcase */\n\t      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n\t      /* eslint-enable camelcase */\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * The object interactivity controls.\n\t     * @private\n\t     */\n\t    _controlsVisibility: null,\n\t\n\t    /**\n\t     * Determines which corner has been clicked\n\t     * @private\n\t     * @param {Object} pointer The pointer indicating the mouse position\n\t     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n\t     */\n\t    _findTargetCorner: function(pointer) {\n\t      if (!this.hasControls || !this.active) {\n\t        return false;\n\t      }\n\t\n\t      var ex = pointer.x,\n\t          ey = pointer.y,\n\t          xPoints,\n\t          lines;\n\t      this.__corner = 0;\n\t      for (var i in this.oCoords) {\n\t\n\t        if (!this.isControlVisible(i)) {\n\t          continue;\n\t        }\n\t\n\t        if (i === 'mtr' && !this.hasRotatingPoint) {\n\t          continue;\n\t        }\n\t\n\t        if (this.get('lockUniScaling') &&\n\t           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n\t          continue;\n\t        }\n\t\n\t        lines = this._getImageLines(this.oCoords[i].corner);\n\t\n\t        // debugging\n\t\n\t        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\t\n\t        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n\t        if (xPoints !== 0 && xPoints % 2 === 1) {\n\t          this.__corner = i;\n\t          return i;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets the coordinates of the draggable boxes in the corners of\n\t     * the image used to scale/rotate it.\n\t     * @private\n\t     */\n\t    _setCornerCoords: function() {\n\t      var coords = this.oCoords,\n\t          newTheta = degreesToRadians(45 - this.angle),\n\t          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\t          /* 0.707106 stands for sqrt(2)/2 */\n\t          cornerHypotenuse = this.cornerSize * 0.707106,\n\t          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n\t          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n\t          x, y;\n\t\n\t      for (var point in coords) {\n\t        x = coords[point].x;\n\t        y = coords[point].y;\n\t        coords[point].corner = {\n\t          tl: {\n\t            x: x - sinHalfOffset,\n\t            y: y - cosHalfOffset\n\t          },\n\t          tr: {\n\t            x: x + cosHalfOffset,\n\t            y: y - sinHalfOffset\n\t          },\n\t          bl: {\n\t            x: x - cosHalfOffset,\n\t            y: y + sinHalfOffset\n\t          },\n\t          br: {\n\t            x: x + sinHalfOffset,\n\t            y: y + cosHalfOffset\n\t          }\n\t        };\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a colored layer behind the object, inside its selection borders.\n\t     * Requires public options: padding, selectionBackgroundColor\n\t     * this function is called when the context is transformed\n\t     * has checks to be skipped when the object is on a staticCanvas\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawSelectionBackground: function(ctx) {\n\t      if (!this.selectionBackgroundColor || this.group || !this.active ||\n\t        (this.canvas && !this.canvas.interactive)) {\n\t        return this;\n\t      }\n\t      ctx.save();\n\t      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n\t          vpt = this.canvas.viewportTransform;\n\t      ctx.translate(center.x, center.y);\n\t      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.fillStyle = this.selectionBackgroundColor;\n\t      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBorders: function(ctx) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = this.borderColor;\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\t\n\t        var rotateHeight = -height / 2;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, rotateHeight);\n\t        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box when it is inside a group.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @param {object} options object representing current object parameters\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBordersInGroup: function(ctx, options) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var p = this._getNonTransformedDimensions(),\n\t          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n\t          wh = fabric.util.transformPoint(p, matrix),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t      ctx.strokeStyle = this.borderColor;\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws corners of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: cornerSize, padding\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawControls: function(ctx) {\n\t      if (!this.hasControls) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          width = wh.x,\n\t          height = wh.y,\n\t          scaleOffset = this.cornerSize,\n\t          left = -(width + scaleOffset) / 2,\n\t          top = -(height + scaleOffset) / 2,\n\t          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n\t      if (!this.transparentCorners) {\n\t        ctx.strokeStyle = this.cornerStrokeColor;\n\t      }\n\t      this._setLineDash(ctx, this.cornerDashArray, null);\n\t\n\t      // top-left\n\t      this._drawControl('tl', ctx, methodName,\n\t        left,\n\t        top);\n\t\n\t      // top-right\n\t      this._drawControl('tr', ctx, methodName,\n\t        left + width,\n\t        top);\n\t\n\t      // bottom-left\n\t      this._drawControl('bl', ctx, methodName,\n\t        left,\n\t        top + height);\n\t\n\t      // bottom-right\n\t      this._drawControl('br', ctx, methodName,\n\t        left + width,\n\t        top + height);\n\t\n\t      if (!this.get('lockUniScaling')) {\n\t\n\t        // middle-top\n\t        this._drawControl('mt', ctx, methodName,\n\t          left + width / 2,\n\t          top);\n\t\n\t        // middle-bottom\n\t        this._drawControl('mb', ctx, methodName,\n\t          left + width / 2,\n\t          top + height);\n\t\n\t        // middle-right\n\t        this._drawControl('mr', ctx, methodName,\n\t          left + width,\n\t          top + height / 2);\n\t\n\t        // middle-left\n\t        this._drawControl('ml', ctx, methodName,\n\t          left,\n\t          top + height / 2);\n\t      }\n\t\n\t      // middle-top-rotate\n\t      if (this.hasRotatingPoint) {\n\t        this._drawControl('mtr', ctx, methodName,\n\t          left + width / 2,\n\t          top - this.rotatingPointOffset);\n\t      }\n\t\n\t      ctx.restore();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawControl: function(control, ctx, methodName, left, top) {\n\t      if (!this.isControlVisible(control)) {\n\t        return;\n\t      }\n\t      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n\t      switch (this.cornerStyle) {\n\t        case 'circle':\n\t          ctx.beginPath();\n\t          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n\t          ctx[methodName]();\n\t          if (stroke) {\n\t            ctx.stroke();\n\t          }\n\t          break;\n\t        default:\n\t          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n\t          ctx[methodName + 'Rect'](left, top, size, size);\n\t          if (stroke) {\n\t            ctx.strokeRect(left, top, size, size);\n\t          }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns true if the specified control is visible, false otherwise.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @returns {Boolean} true if the specified control is visible, false otherwise\n\t     */\n\t    isControlVisible: function(controlName) {\n\t      return this._getControlsVisibility()[controlName];\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility of the specified control.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @param {Boolean} visible true to set the specified control visible, false otherwise\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlVisible: function(controlName, visible) {\n\t      this._getControlsVisibility()[controlName] = visible;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility state of object controls.\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n\t     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n\t     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n\t     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n\t     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n\t     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n\t     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n\t     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n\t     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlsVisibility: function(options) {\n\t      options || (options = { });\n\t\n\t      for (var p in options) {\n\t        this.setControlVisible(p, options[p]);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns the instance of the control visibility set for this object.\n\t     * @private\n\t     * @returns {Object}\n\t     */\n\t    _getControlsVisibility: function() {\n\t      if (!this._controlsVisibility) {\n\t        this._controlsVisibility = {\n\t          tl: true,\n\t          tr: true,\n\t          br: true,\n\t          bl: true,\n\t          ml: true,\n\t          mt: true,\n\t          mr: true,\n\t          mb: true,\n\t          mtr: true\n\t        };\n\t      }\n\t      return this._controlsVisibility;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Animation duration (in ms) for fx* methods\n\t   * @type Number\n\t   * @default\n\t   */\n\t  FX_DURATION: 500,\n\t\n\t  /**\n\t   * Centers object horizontally with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectH: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('left'),\n\t      endValue: this.getCenter().left,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('left', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Centers object vertically with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectV: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('top'),\n\t      endValue: this.getCenter().top,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('top', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as `fabric.Canvas#remove` but animated\n\t   * @param {fabric.Object} object Object to remove\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxRemove: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('opacity'),\n\t      endValue: 0,\n\t      duration: this.FX_DURATION,\n\t      onStart: function() {\n\t        object.set('active', false);\n\t      },\n\t      onChange: function(value) {\n\t        object.set('opacity', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function () {\n\t        _this.remove(object);\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t  /**\n\t   * Animates object's properties\n\t   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n\t   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n\t   * @return {fabric.Object} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n\t   * @chainable\n\t   *\n\t   * As object — multiple properties\n\t   *\n\t   * object.animate({ left: ..., top: ... });\n\t   * object.animate({ left: ..., top: ... }, { duration: ... });\n\t   *\n\t   * As string — one property\n\t   *\n\t   * object.animate('left', ...);\n\t   * object.animate('left', { duration: ... });\n\t   *\n\t   */\n\t  animate: function() {\n\t    if (arguments[0] && typeof arguments[0] === 'object') {\n\t      var propsToAnimate = [], prop, skipCallbacks;\n\t      for (prop in arguments[0]) {\n\t        propsToAnimate.push(prop);\n\t      }\n\t      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n\t        prop = propsToAnimate[i];\n\t        skipCallbacks = i !== len - 1;\n\t        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n\t      }\n\t    }\n\t    else {\n\t      this._animate.apply(this, arguments);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to animate\n\t   * @param {String} to Value to animate to\n\t   * @param {Object} [options] Options object\n\t   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n\t   */\n\t  _animate: function(property, to, options, skipCallbacks) {\n\t    var _this = this, propPair;\n\t\n\t    to = to.toString();\n\t\n\t    if (!options) {\n\t      options = { };\n\t    }\n\t    else {\n\t      options = fabric.util.object.clone(options);\n\t    }\n\t\n\t    if (~property.indexOf('.')) {\n\t      propPair = property.split('.');\n\t    }\n\t\n\t    var currentValue = propPair\n\t      ? this.get(propPair[0])[propPair[1]]\n\t      : this.get(property);\n\t\n\t    if (!('from' in options)) {\n\t      options.from = currentValue;\n\t    }\n\t\n\t    if (~to.indexOf('=')) {\n\t      to = currentValue + parseFloat(to.replace('=', ''));\n\t    }\n\t    else {\n\t      to = parseFloat(to);\n\t    }\n\t\n\t    fabric.util.animate({\n\t      startValue: options.from,\n\t      endValue: to,\n\t      byValue: options.by,\n\t      easing: options.easing,\n\t      duration: options.duration,\n\t      abort: options.abort && function() {\n\t        return options.abort.call(_this);\n\t      },\n\t      onChange: function(value, valueProgress, timeProgress) {\n\t        if (propPair) {\n\t          _this[propPair[0]][propPair[1]] = value;\n\t        }\n\t        else {\n\t          _this.set(property, value);\n\t        }\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t        options.onChange && options.onChange(value, valueProgress, timeProgress);\n\t      },\n\t      onComplete: function(value, valueProgress, timeProgress) {\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t\n\t        _this.setCoords();\n\t        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n\t      }\n\t    });\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Line) {\n\t    fabric.warn('fabric.Line is already defined');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'x1',\n\t    'x2',\n\t    'y1',\n\t    'y2'\n\t  );\n\t\n\t  /**\n\t   * Line class\n\t   * @class fabric.Line\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Line#initialize} for constructor definition\n\t   */\n\t  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'line',\n\t\n\t    /**\n\t     * x value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x1: 0,\n\t\n\t    /**\n\t     * y value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y1: 0,\n\t\n\t    /**\n\t     * x value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x2: 0,\n\t\n\t    /**\n\t     * y value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y2: 0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} [points] Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Line} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      if (!points) {\n\t        points = [0, 0, 0, 0];\n\t      }\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('x1', points[0]);\n\t      this.set('y1', points[1]);\n\t      this.set('x2', points[2]);\n\t      this.set('y2', points[3]);\n\t\n\t      this._setWidthHeight(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      options || (options = { });\n\t\n\t      this.width = Math.abs(this.x2 - this.x1);\n\t      this.height = Math.abs(this.y2 - this.y1);\n\t\n\t      this.left = 'left' in options\n\t        ? options.left\n\t        : this._getLeftToOriginX();\n\t\n\t      this.top = 'top' in options\n\t        ? options.top\n\t        : this._getTopToOriginY();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      if (typeof coordProps[key] !== 'undefined') {\n\t        this._setWidthHeight();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n\t     */\n\t    _getLeftToOriginX: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originX',\n\t        axis1: 'x1',\n\t        axis2: 'x2',\n\t        dimension: 'width'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'left',\n\t        center: 'center',\n\t        farthest: 'right'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n\t     */\n\t    _getTopToOriginY: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originY',\n\t        axis1: 'y1',\n\t        axis2: 'y2',\n\t        dimension: 'height'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'top',\n\t        center: 'center',\n\t        farthest: 'bottom'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t\n\t      if (noTransform) {\n\t        //  Line coords are distances from left-top of canvas to origin of line.\n\t        //  To render line in a path-group, we need to translate them to\n\t        //  distances from center of path-group to center of line.\n\t        var cp = this.getCenterPoint(),\n\t            offset = this.strokeWidth / 2;\n\t        ctx.translate(\n\t          cp.x - (this.strokeLineCap === 'butt' && this.height === 0 ? 0 : offset),\n\t          cp.y - (this.strokeLineCap === 'butt' && this.width === 0 ? 0 : offset)\n\t        );\n\t      }\n\t\n\t      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n\t        // move from center (of virtual box) to its left/top corner\n\t        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n\t        var p = this.calcLinePoints();\n\t        ctx.moveTo(p.x1, p.y1);\n\t        ctx.lineTo(p.x2, p.y2);\n\t      }\n\t\n\t      ctx.lineWidth = this.strokeWidth;\n\t\n\t      // TODO: test this\n\t      // make sure setting \"fill\" changes color of a line\n\t      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\t      var origStrokeStyle = ctx.strokeStyle;\n\t      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n\t      this.stroke && this._renderStroke(ctx);\n\t      ctx.strokeStyle = origStrokeStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p = this.calcLinePoints();\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @methd toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var dim = this.callSuper('_getNonTransformedDimensions');\n\t      if (this.strokeLineCap === 'butt') {\n\t        if (this.width === 0) {\n\t          dim.y -= this.strokeWidth;\n\t        }\n\t        if (this.height === 0) {\n\t          dim.x -= this.strokeWidth;\n\t        }\n\t      }\n\t      return dim;\n\t    },\n\t\n\t    /**\n\t     * Recalculates line points given width and height\n\t     * @private\n\t     */\n\t    calcLinePoints: function() {\n\t      var xMult = this.x1 <= this.x2 ? -1 : 1,\n\t          yMult = this.y1 <= this.y2 ? -1 : 1,\n\t          x1 = (xMult * this.width * 0.5),\n\t          y1 = (yMult * this.height * 0.5),\n\t          x2 = (xMult * this.width * -0.5),\n\t          y2 = (yMult * this.height * -0.5);\n\t\n\t      return {\n\t        x1: x1,\n\t        x2: x2,\n\t        y1: y1,\n\t        y2: y2\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        p = this.calcLinePoints();\n\t      }\n\t      markup.push(\n\t        '<line ', this.getSvgId(),\n\t          'x1=\"', p.x1,\n\t          '\" y1=\"', p.y1,\n\t          '\" x2=\"', p.x2,\n\t          '\" y2=\"', p.y2,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n\t   */\n\t  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromElement = function(element, options) {\n\t    options = options || { };\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n\t        points = [\n\t          parsedAttributes.x1 || 0,\n\t          parsedAttributes.y1 || 0,\n\t          parsedAttributes.x2 || 0,\n\t          parsedAttributes.y2 || 0\n\t        ];\n\t    options.originX = 'left';\n\t    options.originY = 'top';\n\t    return new fabric.Line(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromObject = function(object, callback, forceAsync) {\n\t    function _callback(instance) {\n\t      delete instance.points;\n\t      callback && callback(instance);\n\t    };\n\t    var options = clone(object, true);\n\t    options.points = [object.x1, object.y1, object.x2, object.y2];\n\t    var line = fabric.Object._fromObject('Line', options, _callback, forceAsync, 'points');\n\t    if (line) {\n\t      delete line.points;\n\t    }\n\t    return line;\n\t  };\n\t\n\t  /**\n\t   * Produces a function that calculates distance from canvas edge to Line origin.\n\t   */\n\t  function makeEdgeToOriginGetter(propertyNames, originValues) {\n\t    var origin = propertyNames.origin,\n\t        axis1 = propertyNames.axis1,\n\t        axis2 = propertyNames.axis2,\n\t        dimension = propertyNames.dimension,\n\t        nearest = originValues.nearest,\n\t        center = originValues.center,\n\t        farthest = originValues.farthest;\n\t\n\t    return function() {\n\t      switch (this.get(origin)) {\n\t        case nearest:\n\t          return Math.min(this.get(axis1), this.get(axis2));\n\t        case center:\n\t          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n\t        case farthest:\n\t          return Math.max(this.get(axis1), this.get(axis2));\n\t      }\n\t    };\n\t\n\t  }\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      pi = Math.PI,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Circle) {\n\t    fabric.warn('fabric.Circle is already defined.');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'radius'\n\t  );\n\t\n\t  /**\n\t   * Circle class\n\t   * @class fabric.Circle\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Circle#initialize} for constructor definition\n\t   */\n\t  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'circle',\n\t\n\t    /**\n\t     * Radius of this circle\n\t     * @type Number\n\t     * @default\n\t     */\n\t    radius: 0,\n\t\n\t    /**\n\t     * Start angle of the circle, moving clockwise\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    startAngle: 0,\n\t\n\t    /**\n\t     * End angle of the circle\n\t     * @type Number\n\t     * @default 2Pi\n\t     */\n\t    endAngle: pi * 2,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('radius', options && options.radius || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key === 'radius') {\n\t        this.setRadius(value);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n\t          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\t\n\t      if (angle === 0) {\n\t        if (this.group && this.group.type === 'path-group') {\n\t          x = this.left + this.radius;\n\t          y = this.top + this.radius;\n\t        }\n\t        markup.push(\n\t          '<circle ', this.getSvgId(),\n\t            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n\t            'r=\"', this.radius,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            '\" transform=\"', this.getSvgTransform(),\n\t            ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t      else {\n\t        var startX = Math.cos(this.startAngle) * this.radius,\n\t            startY = Math.sin(this.startAngle) * this.radius,\n\t            endX = Math.cos(this.endAngle) * this.radius,\n\t            endY = Math.sin(this.endAngle) * this.radius,\n\t            largeFlag = angle > pi ? '1' : '0';\n\t\n\t        markup.push(\n\t          '<path d=\"M ' + startX + ' ' + startY,\n\t          ' A ' + this.radius + ' ' + this.radius,\n\t          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.arc(noTransform ? this.left + this.radius : 0,\n\t              noTransform ? this.top + this.radius : 0,\n\t              this.radius,\n\t              this.startAngle,\n\t              this.endAngle, false);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusX: function() {\n\t      return this.get('radius') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusY: function() {\n\t      return this.get('radius') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Sets radius of an object (and updates width accordingly)\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    setRadius: function(value) {\n\t      this.radius = value;\n\t      return this.set('width', value * 2).set('height', value * 2);\n\t    },\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n\t   */\n\t  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @throws {Error} If value of `r` attribute is missing or invalid\n\t   * @return {fabric.Circle} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\t\n\t    if (!isValidRadius(parsedAttributes)) {\n\t      throw new Error('value of `r` attribute is required and can not be negative');\n\t    }\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\t\n\t    obj.left -= obj.radius;\n\t    obj.top -= obj.radius;\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function isValidRadius(attributes) {\n\t    return (('radius' in attributes) && (attributes.radius >= 0));\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {Object} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Circle', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Triangle) {\n\t    fabric.warn('fabric.Triangle is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Triangle class\n\t   * @class fabric.Triangle\n\t   * @extends fabric.Object\n\t   * @return {fabric.Triangle} thisArg\n\t   * @see {@link fabric.Triangle#initialize} for constructor definition\n\t   */\n\t  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'triangle',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('width', options && options.width || 100)\n\t          .set('height', options && options.height || 100);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(-widthBy2, heightBy2);\n\t      ctx.lineTo(0, -heightBy2);\n\t      ctx.lineTo(widthBy2, heightBy2);\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2,\n\t          points = [\n\t            -widthBy2 + ' ' + heightBy2,\n\t            '0 ' + -heightBy2,\n\t            widthBy2 + ' ' + heightBy2\n\t          ]\n\t          .join(',');\n\t\n\t      markup.push(\n\t        '<polygon ', this.getSvgId(),\n\t          'points=\"', points,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t        '\"/>'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Triangle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Triangle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Triangle}\n\t   */\n\t  fabric.Triangle.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Triangle', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      piBy2   = Math.PI * 2,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Ellipse) {\n\t    fabric.warn('fabric.Ellipse is already defined.');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'rx',\n\t    'ry'\n\t  );\n\t\n\t  /**\n\t   * Ellipse class\n\t   * @class fabric.Ellipse\n\t   * @extends fabric.Object\n\t   * @return {fabric.Ellipse} thisArg\n\t   * @see {@link fabric.Ellipse#initialize} for constructor definition\n\t   */\n\t  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'ellipse',\n\t\n\t    /**\n\t     * Horizontal radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('rx', options && options.rx || 0);\n\t      this.set('ry', options && options.ry || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      switch (key) {\n\t\n\t        case 'rx':\n\t          this.rx = value;\n\t          this.set('width', value * 2);\n\t          break;\n\t\n\t        case 'ry':\n\t          this.ry = value;\n\t          this.set('height', value * 2);\n\t          break;\n\t\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRx: function() {\n\t      return this.get('rx') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns Vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRy: function() {\n\t      return this.get('ry') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left + this.rx;\n\t        y = this.top + this.ry;\n\t      }\n\t      markup.push(\n\t        '<ellipse ', this.getSvgId(),\n\t          'cx=\"', x, '\" cy=\"', y, '\" ',\n\t          'rx=\"', this.rx,\n\t          '\" ry=\"', this.ry,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.save();\n\t      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n\t      ctx.arc(\n\t        noTransform ? this.left + this.rx : 0,\n\t        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n\t        this.rx,\n\t        0,\n\t        piBy2,\n\t        false);\n\t      ctx.restore();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n\t   */\n\t  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\t\n\t    ellipse.top -= ellipse.ry;\n\t    ellipse.left -= ellipse.rx;\n\t    return ellipse;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Ellipse', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Rect) {\n\t    fabric.warn('fabric.Rect is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push('rx', 'ry');\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push('rx', 'ry');\n\t\n\t  /**\n\t   * Rectangle class\n\t   * @class fabric.Rect\n\t   * @extends fabric.Object\n\t   * @return {fabric.Rect} thisArg\n\t   * @see {@link fabric.Rect#initialize} for constructor definition\n\t   */\n\t  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\t\n\t    /**\n\t     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'rect',\n\t\n\t    /**\n\t     * Horizontal border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this._initRxRy();\n\t    },\n\t\n\t    /**\n\t     * Initializes rx/ry attributes\n\t     * @private\n\t     */\n\t    _initRxRy: function() {\n\t      if (this.rx && !this.ry) {\n\t        this.ry = this.rx;\n\t      }\n\t      else if (this.ry && !this.rx) {\n\t        this.rx = this.ry;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t\n\t      // optimize 1x1 case (used in spray brush)\n\t      if (this.width === 1 && this.height === 1) {\n\t        ctx.fillRect(-0.5, -0.5, 1, 1);\n\t        return;\n\t      }\n\t\n\t      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n\t          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n\t          w = this.width,\n\t          h = this.height,\n\t          x = noTransform ? this.left : -this.width / 2,\n\t          y = noTransform ? this.top : -this.height / 2,\n\t          isRounded = rx !== 0 || ry !== 0,\n\t          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n\t          k = 1 - 0.5522847498;\n\t      ctx.beginPath();\n\t\n\t      ctx.moveTo(x + rx, y);\n\t\n\t      ctx.lineTo(x + w - rx, y);\n\t      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\t\n\t      ctx.lineTo(x + w, y + h - ry);\n\t      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\t\n\t      ctx.lineTo(x + rx, y + h);\n\t      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\t\n\t      ctx.lineTo(x, y + ry);\n\t      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\t\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        x = -this.width / 2;\n\t        y = -this.height / 2;\n\t      }\n\t      markup.push(\n\t        '<rect ', this.getSvgId(),\n\t          'x=\"', x, '\" y=\"', y,\n\t          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n\t          '\" width=\"', this.width, '\" height=\"', this.height,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n\t   */\n\t  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Rect} Instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options = options || { };\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top  = parsedAttributes.top  || 0;\n\t    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n\t    return rect;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {Object} instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Rect', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  if (fabric.Polyline) {\n\t    fabric.warn('fabric.Polyline is already defined');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push('points');\n\t\n\t  /**\n\t   * Polyline class\n\t   * @class fabric.Polyline\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polyline#initialize} for constructor definition\n\t   */\n\t  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polyline',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points (where each point is an object with x and y)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polyline} thisArg\n\t     * @example\n\t     * var poly = new fabric.Polyline([\n\t     *     { x: 10, y: 10 },\n\t     *     { x: 50, y: 30 },\n\t     *     { x: 40, y: 70 },\n\t     *     { x: 60, y: 50 },\n\t     *     { x: 100, y: 150 },\n\t     *     { x: 40, y: 100 }\n\t     *   ], {\n\t     *   stroke: 'red',\n\t     *   left: 100,\n\t     *   top: 100\n\t     * });\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || {};\n\t      this.points = points || [];\n\t      this.callSuper('initialize', options);\n\t      this._calcDimensions();\n\t      if (!('top' in options)) {\n\t        this.top = this.minY;\n\t      }\n\t      if (!('left' in options)) {\n\t        this.left = this.minX;\n\t      }\n\t      this.pathOffset = {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t\n\t      var points = this.points,\n\t          minX = min(points, 'x'),\n\t          minY = min(points, 'y'),\n\t          maxX = max(points, 'x'),\n\t          maxY = max(points, 'y');\n\t\n\t      this.width = (maxX - minX) || 0;\n\t      this.height = (maxY - minY) || 0;\n\t      this.minX = minX || 0;\n\t      this.minY = minY || 0;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        points: this.points.concat()\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var points = [],\n\t          diffX = 0,\n\t          diffY = 0,\n\t          markup = this._createBaseSVGMarkup();\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        diffX = this.pathOffset.x;\n\t        diffY = this.pathOffset.y;\n\t      }\n\t\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        points.push(\n\t          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n\t          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n\t        );\n\t      }\n\t      markup.push(\n\t        '<', this.type, ' ', this.getSvgId(),\n\t          'points=\"', points.join(''),\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    commonRender: function(ctx, noTransform) {\n\t      var point, len = this.points.length,\n\t          x = noTransform ? 0 : this.pathOffset.x,\n\t          y = noTransform ? 0 : this.pathOffset.y;\n\t\n\t      if (!len || isNaN(this.points[len - 1].y)) {\n\t        // do not draw if no points or odd points\n\t        // NaN comes from parseFloat of a empty string in parser\n\t        return false;\n\t      }\n\t      ctx.beginPath();\n\t      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n\t      for (var i = 0; i < len; i++) {\n\t        point = this.points[i];\n\t        ctx.lineTo(point.x - x, point.y - y);\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!this.commonRender(ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p1, p2;\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        p1 = this.points[i];\n\t        p2 = this.points[i + 1] || p1;\n\t        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.get('points').length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n\t   */\n\t  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Polyline', object, callback, forceAsync, 'points');\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Polygon) {\n\t    fabric.warn('fabric.Polygon is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Polygon class\n\t   * @class fabric.Polygon\n\t   * @extends fabric.Polyline\n\t   * @see {@link fabric.Polygon#initialize} for constructor definition\n\t   */\n\t  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polygon',\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!this.commonRender(ctx, noTransform)) {\n\t        return;\n\t      }\n\t      ctx.closePath();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      this.callSuper('_renderDashedStroke', ctx);\n\t      ctx.closePath();\n\t    },\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n\t   */\n\t  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns {@link fabric.Polygon} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polygon(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polygon instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Polygon', object, callback, forceAsync, 'points');\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      extend = fabric.util.object.extend,\n\t      _toString = Object.prototype.toString,\n\t      drawArc = fabric.util.drawArc,\n\t      commandLengths = {\n\t        m: 2,\n\t        l: 2,\n\t        h: 1,\n\t        v: 1,\n\t        c: 6,\n\t        s: 4,\n\t        q: 4,\n\t        t: 2,\n\t        a: 7\n\t      },\n\t      repeatedCommands = {\n\t        m: 'l',\n\t        M: 'L'\n\t      };\n\t\n\t  if (fabric.Path) {\n\t    fabric.warn('fabric.Path is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push('path');\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push('path', 'fillRule');\n\t\n\t  /**\n\t   * Path class\n\t   * @class fabric.Path\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.Path#initialize} for constructor definition\n\t   */\n\t  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path',\n\t\n\t    /**\n\t     * Array of path points\n\t     * @type Array\n\t     * @default\n\t     */\n\t    path: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Path} thisArg\n\t     */\n\t    initialize: function(path, options) {\n\t      options = options || { };\n\t      this.callSuper('initialize', options);\n\t\n\t      if (!path) {\n\t        path = [];\n\t      }\n\t\n\t      var fromArray = _toString.call(path) === '[object Array]';\n\t\n\t      this.path = fromArray\n\t        ? path\n\t        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n\t        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\t\n\t      if (!this.path) {\n\t        return;\n\t      }\n\t\n\t      if (!fromArray) {\n\t        this.path = this._parsePath();\n\t      }\n\t\n\t      this._setPositionDimensions(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} options Options object\n\t     */\n\t    _setPositionDimensions: function(options) {\n\t      var calcDim = this._parseDimensions();\n\t\n\t      this.minX = calcDim.left;\n\t      this.minY = calcDim.top;\n\t      this.width = calcDim.width;\n\t      this.height = calcDim.height;\n\t\n\t      if (typeof options.left === 'undefined') {\n\t        this.left = calcDim.left + (this.originX === 'center'\n\t          ? this.width / 2\n\t          : this.originX === 'right'\n\t            ? this.width\n\t            : 0);\n\t      }\n\t\n\t      if (typeof options.top === 'undefined') {\n\t        this.top = calcDim.top + (this.originY === 'center'\n\t          ? this.height / 2\n\t          : this.originY === 'bottom'\n\t            ? this.height\n\t            : 0);\n\t      }\n\t\n\t      this.pathOffset = this.pathOffset || {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _renderPathCommands: function(ctx) {\n\t      var current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          l = -this.pathOffset.x,\n\t          t = -this.pathOffset.y;\n\t\n\t      if (this.group && this.group.type === 'path-group') {\n\t        l = 0;\n\t        t = 0;\n\t      }\n\t\n\t      ctx.beginPath();\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            ctx.bezierCurveTo(\n\t              x + current[1] + l, // x1\n\t              y + current[2] + t, // y1\n\t              controlX + l, // x2\n\t              controlY + t, // y2\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            ctx.bezierCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              controlX + l,\n\t              controlY + t,\n\t              x + l,\n\t              y + t\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              x + current[1] + l,\n\t              y + current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t\n\t            ctx.quadraticCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x + l,\n\t              current[7] + y + t\n\t            ]);\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + l,\n\t              current[7] + t\n\t            ]);\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            ctx.closePath();\n\t            break;\n\t        }\n\t        previous = current;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _render: function(ctx) {\n\t      this._renderPathCommands(ctx);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Path (' + this.complexity() +\n\t        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n\t        path: this.path.map(function(item) { return item.slice(); }),\n\t        top: this.top,\n\t        left: this.left,\n\t      });\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.path = this.sourcePath;\n\t      }\n\t      delete o.sourcePath;\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var chunks = [],\n\t          markup = this._createBaseSVGMarkup(), addTransform = '';\n\t\n\t      for (var i = 0, len = this.path.length; i < len; i++) {\n\t        chunks.push(this.path[i].join(' '));\n\t      }\n\t      var path = chunks.join(' ');\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<path ', this.getSvgId(),\n\t          'd=\"', path,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n\t        '/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns number representation of an instance complexity\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.path.length;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parsePath: function() {\n\t      var result = [],\n\t          coords = [],\n\t          currentPath,\n\t          parsed,\n\t          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n\t          match,\n\t          coordsStr;\n\t\n\t      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n\t        currentPath = this.path[i];\n\t\n\t        coordsStr = currentPath.slice(1).trim();\n\t        coords.length = 0;\n\t\n\t        while ((match = re.exec(coordsStr))) {\n\t          coords.push(match[0]);\n\t        }\n\t\n\t        coordsParsed = [currentPath.charAt(0)];\n\t\n\t        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n\t          parsed = parseFloat(coords[j]);\n\t          if (!isNaN(parsed)) {\n\t            coordsParsed.push(parsed);\n\t          }\n\t        }\n\t\n\t        var command = coordsParsed[0],\n\t            commandLength = commandLengths[command.toLowerCase()],\n\t            repeatedCommand = repeatedCommands[command] || command;\n\t\n\t        if (coordsParsed.length - 1 > commandLength) {\n\t          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n\t            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n\t            command = repeatedCommand;\n\t          }\n\t        }\n\t        else {\n\t          result.push(coordsParsed);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parseDimensions: function() {\n\t\n\t      var aX = [],\n\t          aY = [],\n\t          current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          bounds;\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              x + current[1], // x1\n\t              y + current[2], // y1\n\t              controlX, // x2\n\t              controlY, // y2\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              current[1],\n\t              current[2],\n\t              controlX,\n\t              controlY,\n\t              current[5],\n\t              current[6]\n\t            );\n\t            x = current[5];\n\t            y = current[6];\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              x + current[1],\n\t              y + current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              current[1],\n\t              current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              current[3],\n\t              current[4]\n\t            );\n\t            x = current[3];\n\t            y = current[4];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x,\n\t              current[7] + y\n\t            );\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6],\n\t              current[7]\n\t            );\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            break;\n\t        }\n\t        previous = current;\n\t        bounds.forEach(function (point) {\n\t          aX.push(point.x);\n\t          aY.push(point.y);\n\t        });\n\t        aX.push(x);\n\t        aY.push(y);\n\t      }\n\t\n\t      var minX = min(aX) || 0,\n\t          minY = min(aY) || 0,\n\t          maxX = max(aX) || 0,\n\t          maxY = max(aY) || 0,\n\t          deltaX = maxX - minX,\n\t          deltaY = maxY - minY,\n\t\n\t          o = {\n\t            left: minX,\n\t            top: minY,\n\t            width: deltaX,\n\t            height: deltaY\n\t          };\n\t\n\t      return o;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an object\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {Object} object\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   */\n\t  fabric.Path.fromObject = function(object, callback, forceAsync) {\n\t    // remove this pattern rom 2.0, accept just object.\n\t    var path;\n\t    if (typeof object.path === 'string') {\n\t      fabric.loadSVGFromURL(object.path, function (elements) {\n\t        var pathUrl = object.path;\n\t        path = elements[0];\n\t        delete object.path;\n\t\n\t        path.setOptions(object);\n\t        path.setSourcePath(pathUrl);\n\t\n\t        callback && callback(path);\n\t      });\n\t    }\n\t    else {\n\t      return fabric.Object._fromObject('Path', object, callback, forceAsync, 'path');\n\t    }\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n\t   */\n\t  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an SVG <path> element\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {SVGElement} element to parse\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   * @param {Object} [options] Options object\n\t   */\n\t  fabric.Path.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n\t    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Path.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.PathGroup) {\n\t    fabric.warn('fabric.PathGroup is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path group class\n\t   * @class fabric.PathGroup\n\t   * @extends fabric.Path\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.PathGroup#initialize} for constructor definition\n\t   */\n\t  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path-group',\n\t\n\t    /**\n\t     * Fill value\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill: '',\n\t\n\t    /**\n\t     * Pathgroups are container, do not render anything on theyr own, ence no cache properties\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    cacheProperties: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} paths\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    initialize: function(paths, options) {\n\t\n\t      options = options || { };\n\t      this.paths = paths || [];\n\t\n\t      for (var i = this.paths.length; i--;) {\n\t        this.paths[i].group = this;\n\t      }\n\t\n\t      if (options.toBeParsed) {\n\t        this.parseDimensionsFromPaths(options);\n\t        delete options.toBeParsed;\n\t      }\n\t      this.setOptions(options);\n\t      this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Calculate width and height based on paths contained\n\t     */\n\t    parseDimensionsFromPaths: function(options) {\n\t      var points, p, xC = [], yC = [], path, height, width,\n\t          m;\n\t      for (var j = this.paths.length; j--;) {\n\t        path = this.paths[j];\n\t        height = path.height + path.strokeWidth;\n\t        width = path.width + path.strokeWidth;\n\t        points = [\n\t          { x: path.left, y: path.top },\n\t          { x: path.left + width, y: path.top },\n\t          { x: path.left, y: path.top + height },\n\t          { x: path.left + width, y: path.top + height }\n\t        ];\n\t        m = this.paths[j].transformMatrix;\n\t        for (var i = 0; i < points.length; i++) {\n\t          p = points[i];\n\t          if (m) {\n\t            p = fabric.util.transformPoint(p, m, false);\n\t          }\n\t          xC.push(p.x);\n\t          yC.push(p.y);\n\t        }\n\t      }\n\t      options.width = Math.max.apply(null, xC);\n\t      options.height = Math.max.apply(null, yC);\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx) {\n\t      ctx.save();\n\t      ctx.translate(-this.width / 2, -this.height / 2);\n\t      for (var i = 0, l = this.paths.length; i < l; ++i) {\n\t        this.paths[i].render(ctx, true);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Decide if the object should cache or not.\n\t     * objectCaching is a global flag, wins over everything\n\t     * needsItsOwnCache should be used when the object drawing method requires\n\t     * a cache step. None of the fabric classes requires it.\n\t     * Generally you do not cache objects in groups because the group outside is cached.\n\t     * @return {Boolean}\n\t     */\n\t    shouldCache: function() {\n\t      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n\t      this.caching = parentCache;\n\t      if (parentCache) {\n\t        for (var i = 0, len = this.paths.length; i < len; i++) {\n\t          if (this.paths[i].willDrawShadow()) {\n\t            this.caching = false;\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return parentCache;\n\t    },\n\t\n\t    /**\n\t     * Check if this object or a child object will cast a shadow\n\t     * @return {Boolean}\n\t     */\n\t    willDrawShadow: function() {\n\t      if (this.shadow) {\n\t        return true;\n\t      }\n\t      for (var i = 0, len = this.paths.length; i < len; i++) {\n\t        if (this.paths[i].willDrawShadow()) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Check if this group or its parent group are caching, recursively up\n\t     * @return {Boolean}\n\t     */\n\t    isCaching: function() {\n\t      return this.caching || this.group && this.group.isCaching();\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     */\n\t    isCacheDirty: function() {\n\t      if (this.callSuper('isCacheDirty')) {\n\t        return true;\n\t      }\n\t      if (!this.statefullCache) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = this.paths.length; i < len; i++) {\n\t        if (this.paths[i].isCacheDirty(true)) {\n\t          if (this._cacheCanvas) {\n\t            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n\t            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n\t          }\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets certain property to a certain value\n\t     * @param {String} prop\n\t     * @param {*} value\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    _set: function(prop, value) {\n\t\n\t      if (prop === 'fill' && value && this.isSameColor()) {\n\t        var i = this.paths.length;\n\t        while (i--) {\n\t          this.paths[i]._set(prop, value);\n\t        }\n\t      }\n\t\n\t      return this.callSuper('_set', prop, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var pathsToObject = this.paths.map(function(path) {\n\t        var originalDefaults = path.includeDefaultValues;\n\t        path.includeDefaultValues = path.group.includeDefaultValues;\n\t        var obj = path.toObject(propertiesToInclude);\n\t        path.includeDefaultValues = originalDefaults;\n\t        return obj;\n\t      });\n\t      var o = extend(this.callSuper('toObject', ['sourcePath'].concat(propertiesToInclude)), {\n\t        paths: pathsToObject\n\t      });\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} dataless object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.paths = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var objects = this.getObjects(),\n\t          p = this.getPointByOrigin('left', 'top'),\n\t          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n\t          markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(),\n\t        'style=\"', this.getSvgStyles(), '\" ',\n\t        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n\t        '>\\n'\n\t      );\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        markup.push('\\t', objects[i].toSVG(reviver));\n\t      }\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns a string representation of this path group\n\t     * @return {String} string representation of an object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.PathGroup (' + this.complexity() +\n\t        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns true if all paths in this group are of same color\n\t     * @return {Boolean} true if all paths are of the same color (`fill`)\n\t     */\n\t    isSameColor: function() {\n\t      var firstPathFill = this.getObjects()[0].get('fill') || '';\n\t      if (typeof firstPathFill !== 'string') {\n\t        return false;\n\t      }\n\t      firstPathFill = firstPathFill.toLowerCase();\n\t      return this.getObjects().every(function(path) {\n\t        var pathFill = path.get('fill') || '';\n\t        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns number representation of object's complexity\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return this.paths.reduce(function(total, path) {\n\t        return total + ((path && path.complexity) ? path.complexity() : 0);\n\t      }, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns all paths in this path group\n\t     * @return {Array} array of path objects included in this path group\n\t     */\n\t    getObjects: function() {\n\t      return this.paths;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates fabric.PathGroup instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n\t   */\n\t  fabric.PathGroup.fromObject = function(object, callback) {\n\t    var originalPaths = object.paths;\n\t    delete object.paths;\n\t    if (typeof originalPaths === 'string') {\n\t      fabric.loadSVGFromURL(originalPaths, function (elements) {\n\t        var pathUrl = originalPaths;\n\t        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\t        object.paths = originalPaths;\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t    else {\n\t      fabric.util.enlivenObjects(originalPaths, function(enlivenedObjects) {\n\t        var pathGroup = new fabric.PathGroup(enlivenedObjects, object);\n\t        object.paths = originalPaths;\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.PathGroup.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max;\n\t\n\t  if (fabric.Group) {\n\t    return;\n\t  }\n\t\n\t  // lock-related properties, for use in fabric.Group#get\n\t  // to enable locking behavior on group\n\t  // when one of its objects has lock-related properties set\n\t  var _lockProperties = {\n\t    lockMovementX:  true,\n\t    lockMovementY:  true,\n\t    lockRotation:   true,\n\t    lockScalingX:   true,\n\t    lockScalingY:   true,\n\t    lockUniScaling: true\n\t  };\n\t\n\t  /**\n\t   * Group class\n\t   * @class fabric.Group\n\t   * @extends fabric.Object\n\t   * @mixes fabric.Collection\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n\t   * @see {@link fabric.Group#initialize} for constructor definition\n\t   */\n\t  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'group',\n\t\n\t    /**\n\t     * Width of stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * Indicates if click events should also check for subtargets\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    subTargetCheck: false,\n\t\n\t    /**\n\t     * Groups are container, do not render anything on theyr own, ence no cache properties\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    cacheProperties: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} objects Group objects\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(objects, options, isAlreadyGrouped) {\n\t      options = options || { };\n\t\n\t      this._objects = [];\n\t      // if objects enclosed in a group have been grouped already,\n\t      // we cannot change properties of objects.\n\t      // Thus we need to set options to group without objects,\n\t      // because delegatedProperties propagate to objects.\n\t      isAlreadyGrouped && this.callSuper('initialize', options);\n\t\n\t      this._objects = objects || [];\n\t      for (var i = this._objects.length; i--; ) {\n\t        this._objects[i].group = this;\n\t      }\n\t\n\t      if (options.originX) {\n\t        this.originX = options.originX;\n\t      }\n\t      if (options.originY) {\n\t        this.originY = options.originY;\n\t      }\n\t\n\t      if (isAlreadyGrouped) {\n\t        // do not change coordinate of objects enclosed in a group,\n\t        // because objects coordinate system have been group coodinate system already.\n\t        this._updateObjectsCoords(true);\n\t        this._updateObjectsACoords();\n\t      }\n\t      else {\n\t        this._calcBounds();\n\t        this._updateObjectsCoords();\n\t        this.callSuper('initialize', options);\n\t      }\n\t\n\t      this.setCoords();\n\t      this.saveCoords();\n\t    },\n\t\n\t    _updateObjectsACoords: function() {\n\t      var ignoreZoom = true, skipAbsolute = true;\n\t      for (var i = this._objects.length; i--; ){\n\t        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n\t     */\n\t    _updateObjectsCoords: function(skipCoordsChange) {\n\t      var center = this.getCenterPoint();\n\t      for (var i = this._objects.length; i--; ){\n\t        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     * @param {fabric.Point} center, current center of group.\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n\t     */\n\t    _updateObjectCoords: function(object, center, skipCoordsChange) {\n\t      // do not display corners of objects enclosed in a group\n\t      object.__origHasControls = object.hasControls;\n\t      object.hasControls = false;\n\t\n\t      if (skipCoordsChange) {\n\t        return;\n\t      }\n\t\n\t      var objectLeft = object.getLeft(),\n\t          objectTop = object.getTop(),\n\t          ignoreZoom = true, skipAbsolute = true;\n\t\n\t      object.set({\n\t        left: objectLeft - center.x,\n\t        top: objectTop - center.y\n\t      });\n\t      object.setCoords(ignoreZoom, skipAbsolute);\n\t    },\n\t\n\t    /**\n\t     * Returns string represenation of a group\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Group: (' + this.complexity() + ')>';\n\t    },\n\t\n\t    /**\n\t     * Adds an object to a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    addWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      if (object) {\n\t        this._objects.push(object);\n\t        object.group = this;\n\t        object._set('canvas', this.canvas);\n\t      }\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      this.setCoords();\n\t      this.dirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectActive: function(object) {\n\t      object.set('active', true);\n\t      object.group = this;\n\t    },\n\t\n\t    /**\n\t     * Removes an object from a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    removeWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t\n\t      this.remove(object);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      this.setCoords();\n\t      this.dirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectAdded: function(object) {\n\t      this.dirty = true;\n\t      object.group = this;\n\t      object._set('canvas', this.canvas);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectRemoved: function(object) {\n\t      this.dirty = true;\n\t      delete object.group;\n\t      object.set('active', false);\n\t    },\n\t\n\t    /**\n\t     * Properties that are delegated to group objects when reading/writing\n\t     * @param {Object} delegatedProperties\n\t     */\n\t    delegatedProperties: {\n\t      fill:             true,\n\t      stroke:           true,\n\t      strokeWidth:      true,\n\t      fontFamily:       true,\n\t      fontWeight:       true,\n\t      fontSize:         true,\n\t      fontStyle:        true,\n\t      lineHeight:       true,\n\t      textDecoration:   true,\n\t      textAlign:        true,\n\t      backgroundColor:  true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _set: function(key, value) {\n\t      var i = this._objects.length;\n\t\n\t      if (this.delegatedProperties[key] || key === 'canvas') {\n\t        while (i--) {\n\t          this._objects[i].set(key, value);\n\t        }\n\t      }\n\t      else {\n\t        while (i--) {\n\t          this._objects[i].setOnGroup(key, value);\n\t        }\n\t      }\n\t\n\t      this.callSuper('_set', key, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var objsToObject = this.getObjects().map(function(obj) {\n\t        var originalDefaults = obj.includeDefaultValues;\n\t        obj.includeDefaultValues = obj.group.includeDefaultValues;\n\t        var _obj = obj.toObject(propertiesToInclude);\n\t        obj.includeDefaultValues = originalDefaults;\n\t        return _obj;\n\t      });\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        objects: objsToObject\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance, in dataless mode.\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var objsToObject = this.getObjects().map(function(obj) {\n\t        var originalDefaults = obj.includeDefaultValues;\n\t        obj.includeDefaultValues = obj.group.includeDefaultValues;\n\t        var _obj = obj.toDatalessObject(propertiesToInclude);\n\t        obj.includeDefaultValues = originalDefaults;\n\t        return _obj;\n\t      });\n\t      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n\t        objects: objsToObject\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Renders instance on a given context\n\t     * @param {CanvasRenderingContext2D} ctx context to render instance on\n\t     */\n\t    render: function(ctx) {\n\t      this._transformDone = true;\n\t      this.callSuper('render', ctx);\n\t      this._transformDone = false;\n\t    },\n\t\n\t    /**\n\t     * Decide if the object should cache or not.\n\t     * objectCaching is a global flag, wins over everything\n\t     * needsItsOwnCache should be used when the object drawing method requires\n\t     * a cache step. None of the fabric classes requires it.\n\t     * Generally you do not cache objects in groups because the group outside is cached.\n\t     * @return {Boolean}\n\t     */\n\t    shouldCache: function() {\n\t      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n\t      this.caching = parentCache;\n\t      if (parentCache) {\n\t        for (var i = 0, len = this._objects.length; i < len; i++) {\n\t          if (this._objects[i].willDrawShadow()) {\n\t            this.caching = false;\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return parentCache;\n\t    },\n\t\n\t    /**\n\t     * Check if this object or a child object will cast a shadow\n\t     * @return {Boolean}\n\t     */\n\t    willDrawShadow: function() {\n\t      if (this.callSuper('willDrawShadow')) {\n\t        return true;\n\t      }\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        if (this._objects[i].willDrawShadow()) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Check if this group or its parent group are caching, recursively up\n\t     * @return {Boolean}\n\t     */\n\t    isCaching: function() {\n\t      return this.caching || this.group && this.group.isCaching();\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._renderObject(this._objects[i], ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     */\n\t    isCacheDirty: function() {\n\t      if (this.callSuper('isCacheDirty')) {\n\t        return true;\n\t      }\n\t      if (!this.statefullCache) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        if (this._objects[i].isCacheDirty(true)) {\n\t          if (this._cacheCanvas) {\n\t            // if this group has not a cache canvas there is nothing to clean\n\t            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n\t            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n\t          }\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      ctx.save();\n\t      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      this.callSuper('_renderControls', ctx, noTransform);\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _renderObject: function(object, ctx) {\n\t      // do not render if object is not visible\n\t      if (!object.visible) {\n\t        return;\n\t      }\n\t\n\t      var originalHasRotatingPoint = object.hasRotatingPoint;\n\t      object.hasRotatingPoint = false;\n\t      object.render(ctx);\n\t      object.hasRotatingPoint = originalHasRotatingPoint;\n\t    },\n\t\n\t    /**\n\t     * Retores original state of each of group objects (original state is that which was before group was created).\n\t     * @private\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    _restoreObjectsState: function() {\n\t      this._objects.forEach(this._restoreObjectState, this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Realises the transform from this group onto the supplied object\n\t     * i.e. it tells you what would happen if the supplied object was in\n\t     * the group, and then the group was destroyed. It mutates the supplied\n\t     * object.\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Object} transformedObject\n\t     */\n\t    realizeTransform: function(object) {\n\t      var matrix = object.calcTransformMatrix(),\n\t          options = fabric.util.qrDecompose(matrix),\n\t          center = new fabric.Point(options.translateX, options.translateY);\n\t      object.flipX = false;\n\t      object.flipY = false;\n\t      object.set('scaleX', options.scaleX);\n\t      object.set('scaleY', options.scaleY);\n\t      object.skewX = options.skewX;\n\t      object.skewY = options.skewY;\n\t      object.angle = options.angle;\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Restores original state of a specified object in group\n\t     * @private\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Group} thisArg\n\t     */\n\t    _restoreObjectState: function(object) {\n\t      this.realizeTransform(object);\n\t      object.setCoords();\n\t      object.hasControls = object.__origHasControls;\n\t      delete object.__origHasControls;\n\t      object.set('active', false);\n\t      delete object.group;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Destroys a group (restoring state of its objects)\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    destroy: function() {\n\t      // when group is destroyed objects needs to get a repaint to be eventually\n\t      // displayed on canvas.\n\t      this._objects.forEach(function(object) {\n\t        object.set('dirty', true);\n\t      });\n\t      return this._restoreObjectsState();\n\t    },\n\t\n\t    /**\n\t     * Saves coordinates of this instance (to be used together with `hasMoved`)\n\t     * @saveCoords\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    saveCoords: function() {\n\t      this._originalLeft = this.get('left');\n\t      this._originalTop = this.get('top');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Checks whether this group was moved (since `saveCoords` was called last)\n\t     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n\t     */\n\t    hasMoved: function() {\n\t      return this._originalLeft !== this.get('left') ||\n\t             this._originalTop !== this.get('top');\n\t    },\n\t\n\t    /**\n\t     * Sets coordinates of all objects inside group\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    setObjectsCoords: function() {\n\t      var ignoreZoom = true, skipAbsolute = true;\n\t      this.forEachObject(function(object) {\n\t        object.setCoords(ignoreZoom, skipAbsolute);\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcBounds: function(onlyWidthHeight) {\n\t      var aX = [],\n\t          aY = [],\n\t          o, prop,\n\t          props = ['tr', 'br', 'bl', 'tl'],\n\t          i = 0, iLen = this._objects.length,\n\t          j, jLen = props.length,\n\t          ignoreZoom = true;\n\t\n\t      for ( ; i < iLen; ++i) {\n\t        o = this._objects[i];\n\t        o.setCoords(ignoreZoom);\n\t        for (j = 0; j < jLen; j++) {\n\t          prop = props[j];\n\t          aX.push(o.oCoords[prop].x);\n\t          aY.push(o.oCoords[prop].y);\n\t        }\n\t      }\n\t\n\t      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getBounds: function(aX, aY, onlyWidthHeight) {\n\t      var minXY = new fabric.Point(min(aX), min(aY)),\n\t          maxXY = new fabric.Point(max(aX), max(aY)),\n\t          obj = {\n\t            width: (maxXY.x - minXY.x) || 0,\n\t            height: (maxXY.y - minXY.y) || 0\n\t          };\n\t\n\t      if (!onlyWidthHeight) {\n\t        obj.left = minXY.x || 0;\n\t        obj.top = minXY.y || 0;\n\t        if (this.originX === 'center') {\n\t          obj.left += obj.width / 2;\n\t        }\n\t        if (this.originX === 'right') {\n\t          obj.left += obj.width;\n\t        }\n\t        if (this.originY === 'center') {\n\t          obj.top += obj.height / 2;\n\t        }\n\t        if (this.originY === 'bottom') {\n\t          obj.top += obj.height;\n\t        }\n\t      }\n\t      return obj;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(), 'transform=\"',\n\t        /* avoiding styles intentionally */\n\t        this.getSvgTransform(),\n\t        this.getSvgTransformMatrix(),\n\t        '\" style=\"',\n\t        this.getSvgFilter(),\n\t        '\">\\n'\n\t      );\n\t\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        markup.push('\\t', this._objects[i].toSVG(reviver));\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns requested property\n\t     * @param {String} prop Property to get\n\t     * @return {*}\n\t     */\n\t    get: function(prop) {\n\t      if (prop in _lockProperties) {\n\t        if (this[prop]) {\n\t          return this[prop];\n\t        }\n\t        else {\n\t          for (var i = 0, len = this._objects.length; i < len; i++) {\n\t            if (this._objects[i][prop]) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t      else {\n\t        if (prop in this.delegatedProperties) {\n\t          return this._objects[0] && this._objects[0].get(prop);\n\t        }\n\t        return this[prop];\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Group} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @param {Object} object Object to create a group from\n\t   * @param {Function} [callback] Callback to invoke when an group instance is created\n\t   */\n\t  fabric.Group.fromObject = function(object, callback) {\n\t    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n\t      var options = fabric.util.object.clone(object, true);\n\t      delete options.objects;\n\t      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Group.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var extend = fabric.util.object.extend;\n\t\n\t  if (!global.fabric) {\n\t    global.fabric = { };\n\t  }\n\t\n\t  if (global.fabric.Image) {\n\t    fabric.warn('fabric.Image is already defined.');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'alignX',\n\t    'alignY',\n\t    'meetOrSlice'\n\t  );\n\t\n\t  /**\n\t   * Image class\n\t   * @class fabric.Image\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n\t   * @see {@link fabric.Image#initialize} for constructor definition\n\t   */\n\t  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'image',\n\t\n\t    /**\n\t     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n\t     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n\t     * @type String\n\t     * @default\n\t     */\n\t    crossOrigin: '',\n\t\n\t    /**\n\t     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignX: 'none',\n\t\n\t    /**\n\t     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignY: 'none',\n\t\n\t    /**\n\t     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n\t     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * @type String\n\t     * @default\n\t     */\n\t    meetOrSlice: 'meet',\n\t\n\t    /**\n\t     * Width of a stroke.\n\t     * For image quality a stroke multiple of 2 gives better results.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleX to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleX: 1,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleY to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleY: 1,\n\t\n\t    /**\n\t     * minimum scale factor under which any resizeFilter is triggered to resize the image\n\t     * 0 will disable the automatic resize. 1 will trigger automatically always.\n\t     * number bigger than 1 can be used in case we want to scale with some filter above\n\t     * the natural image dimensions\n\t     * @type Number\n\t     */\n\t    minimumScaleTrigger: 0.5,\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * When `true`, object is cached on an additional canvas.\n\t     * default to false for images\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    objectCaching: false,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLImageElement | String} element Image element\n\t     * @param {Object} [options] Options object\n\t     * @param {function} [callback] callback function to call after eventual filters applied.\n\t     * @return {fabric.Image} thisArg\n\t     */\n\t    initialize: function(element, options, callback) {\n\t      options || (options = { });\n\t      this.filters = [];\n\t      this.resizeFilters = [];\n\t      this.callSuper('initialize', options);\n\t      this._initElement(element, options, callback);\n\t    },\n\t\n\t    /**\n\t     * Returns image element which this instance if based on\n\t     * @return {HTMLImageElement} Image element\n\t     */\n\t    getElement: function() {\n\t      return this._element;\n\t    },\n\t\n\t    /**\n\t     * Sets image element for this instance to a specified one.\n\t     * If filters defined they are applied to new image.\n\t     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n\t     * @param {HTMLImageElement} element\n\t     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setElement: function(element, callback, options) {\n\t\n\t      var _callback, _this;\n\t\n\t      this._element = element;\n\t      this._originalElement = element;\n\t      this._initConfig(options);\n\t\n\t      if (this.resizeFilters.length === 0) {\n\t        _callback = callback;\n\t      }\n\t      else {\n\t        _this = this;\n\t        _callback = function() {\n\t          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n\t        };\n\t      }\n\t\n\t      if (this.filters.length !== 0) {\n\t        this.applyFilters(_callback);\n\t      }\n\t      else if (_callback) {\n\t        _callback(this);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets crossOrigin value (on an instance and corresponding image element)\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setCrossOrigin: function(value) {\n\t      this.crossOrigin = value;\n\t      this._element.crossOrigin = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns original size of an image\n\t     * @return {Object} Object with \"width\" and \"height\" properties\n\t     */\n\t    getOriginalSize: function() {\n\t      var element = this.getElement();\n\t      return {\n\t        width: element.width,\n\t        height: element.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _stroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t      var w = this.width / 2, h = this.height / 2;\n\t      ctx.beginPath();\n\t      ctx.moveTo(-w, -h);\n\t      ctx.lineTo(w, -h);\n\t      ctx.lineTo(w, h);\n\t      ctx.lineTo(-w, h);\n\t      ctx.lineTo(-w, -h);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.save();\n\t      this._setStrokeStyles(ctx);\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var filters = [], resizeFilters = [],\n\t          scaleX = 1, scaleY = 1;\n\t\n\t      this.filters.forEach(function(filterObj) {\n\t        if (filterObj) {\n\t          if (filterObj.type === 'Resize') {\n\t            scaleX *= filterObj.scaleX;\n\t            scaleY *= filterObj.scaleY;\n\t          }\n\t          filters.push(filterObj.toObject());\n\t        }\n\t      });\n\t\n\t      this.resizeFilters.forEach(function(filterObj) {\n\t        filterObj && resizeFilters.push(filterObj.toObject());\n\t      });\n\t      var object = extend(\n\t        this.callSuper(\n\t          'toObject',\n\t          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n\t        ), {\n\t          src: this.getSrc(),\n\t          filters: filters,\n\t          resizeFilters: resizeFilters,\n\t        });\n\t\n\t      object.width /= scaleX;\n\t      object.height /= scaleY;\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n\t          preserveAspectRatio = 'none', filtered = true;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left;\n\t        y = this.top;\n\t      }\n\t      if (this.alignX !== 'none' && this.alignY !== 'none') {\n\t        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n\t      }\n\t      markup.push(\n\t        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n\t          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n\t            '\" x=\"', x, '\" y=\"', y,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n\t            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n\t            // so that object's center aligns with container's left/top\n\t            '\" width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n\t          '></image>\\n'\n\t      );\n\t\n\t      if (this.stroke || this.strokeDashArray) {\n\t        var origFill = this.fill;\n\t        this.fill = null;\n\t        markup.push(\n\t          '<rect ',\n\t            'x=\"', x, '\" y=\"', y,\n\t            '\" width=\"', this.width, '\" height=\"', this.height,\n\t            '\" style=\"', this.getSvgStyles(),\n\t          '\"/>\\n'\n\t        );\n\t        this.fill = origFill;\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns source of an image\n\t     * @param {Boolean} filtered indicates if the src is needed for svg\n\t     * @return {String} Source of an image\n\t     */\n\t    getSrc: function(filtered) {\n\t      var element = filtered ? this._element : this._originalElement;\n\t      if (element) {\n\t        return fabric.isLikelyNode ? element._src : element.src;\n\t      }\n\t      else {\n\t        return this.src || '';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets source of an image\n\t     * @param {String} src Source string (URL)\n\t     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setSrc: function(src, callback, options) {\n\t      fabric.util.loadImage(src, function(img) {\n\t        return this.setElement(img, callback, options);\n\t      }, this, options && options.crossOrigin);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Applies filters assigned to this image (from \"filters\" array)\n\t     * @method applyFilters\n\t     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Array} filters to be applied\n\t     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n\t     * @param {Boolean} forResizing\n\t     * @return {CanvasElement} canvasEl to be drawn immediately\n\t     * @chainable\n\t     */\n\t    applyFilters: function(callback, filters, imgElement, forResizing) {\n\t\n\t      filters = filters || this.filters;\n\t      imgElement = imgElement || this._originalElement;\n\t\n\t      if (!imgElement) {\n\t        return;\n\t      }\n\t\n\t      var replacement = fabric.util.createImage(),\n\t          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n\t          minimumScale = this.minimumScaleTrigger / retinaScaling,\n\t          _this = this, scaleX, scaleY;\n\t\n\t      if (filters.length === 0) {\n\t        this._element = imgElement;\n\t        callback && callback(this);\n\t        return imgElement;\n\t      }\n\t\n\t      var canvasEl = fabric.util.createCanvasElement();\n\t      canvasEl.width = imgElement.width;\n\t      canvasEl.height = imgElement.height;\n\t      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\t\n\t      filters.forEach(function(filter) {\n\t        if (!filter) {\n\t          return;\n\t        }\n\t        if (forResizing) {\n\t          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n\t          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n\t          if (scaleX * retinaScaling < 1) {\n\t            scaleX *= retinaScaling;\n\t          }\n\t          if (scaleY * retinaScaling < 1) {\n\t            scaleY *= retinaScaling;\n\t          }\n\t        }\n\t        else {\n\t          scaleX = filter.scaleX;\n\t          scaleY = filter.scaleY;\n\t        }\n\t        filter.applyTo(canvasEl, scaleX, scaleY);\n\t        if (!forResizing && filter.type === 'Resize') {\n\t          _this.width *= filter.scaleX;\n\t          _this.height *= filter.scaleY;\n\t        }\n\t      });\n\t\n\t      /** @ignore */\n\t      replacement.width = canvasEl.width;\n\t      replacement.height = canvasEl.height;\n\t      if (fabric.isLikelyNode) {\n\t        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n\t        // onload doesn't fire in some node versions, so we invoke callback manually\n\t        _this._element = replacement;\n\t        !forResizing && (_this._filteredEl = replacement);\n\t        callback && callback(_this);\n\t      }\n\t      else {\n\t        replacement.onload = function() {\n\t          _this._element = replacement;\n\t          !forResizing && (_this._filteredEl = replacement);\n\t          callback && callback(_this);\n\t          replacement.onload = canvasEl = null;\n\t        };\n\t        replacement.src = canvasEl.toDataURL('image/png');\n\t      }\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\t\n\t      x = (noTransform ? this.left : -this.width / 2);\n\t      y = (noTransform ? this.top : -this.height / 2);\n\t\n\t      if (this.meetOrSlice === 'slice') {\n\t        ctx.beginPath();\n\t        ctx.rect(x, y, this.width, this.height);\n\t        ctx.clip();\n\t      }\n\t\n\t      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n\t        this._lastScaleX = this.scaleX;\n\t        this._lastScaleY = this.scaleY;\n\t        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n\t      }\n\t      else {\n\t        elementToDraw = this._element;\n\t      }\n\t      elementToDraw && ctx.drawImage(elementToDraw,\n\t                                     x + imageMargins.marginX,\n\t                                     y + imageMargins.marginY,\n\t                                     imageMargins.width,\n\t                                     imageMargins.height\n\t                                    );\n\t\n\t      this._stroke(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private, needed to check if image needs resize\n\t     */\n\t    _needsResize: function() {\n\t      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findMargins: function() {\n\t      var width = this.width, height = this.height, scales,\n\t          scale, marginX = 0, marginY = 0;\n\t\n\t      if (this.alignX !== 'none' || this.alignY !== 'none') {\n\t        scales = [this.width / this._element.width, this.height / this._element.height];\n\t        scale = this.meetOrSlice === 'meet'\n\t                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n\t        width = this._element.width * scale;\n\t        height = this._element.height * scale;\n\t        if (this.alignX === 'Mid') {\n\t          marginX = (this.width - width) / 2;\n\t        }\n\t        if (this.alignX === 'Max') {\n\t          marginX = this.width - width;\n\t        }\n\t        if (this.alignY === 'Mid') {\n\t          marginY = (this.height - height) / 2;\n\t        }\n\t        if (this.alignY === 'Max') {\n\t          marginY = this.height - height;\n\t        }\n\t      }\n\t      return {\n\t        width:  width,\n\t        height: height,\n\t        marginX: marginX,\n\t        marginY: marginY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetWidthHeight: function() {\n\t      var element = this.getElement();\n\t\n\t      this.set('width', element.width);\n\t      this.set('height', element.height);\n\t    },\n\t\n\t    /**\n\t     * The Image class's initialization method. This method is automatically\n\t     * called by the constructor.\n\t     * @private\n\t     * @param {HTMLImageElement|String} element The element representing the image\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initElement: function(element, options, callback) {\n\t      this.setElement(fabric.util.getById(element), callback, options);\n\t      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initConfig: function(options) {\n\t      options || (options = { });\n\t      this.setOptions(options);\n\t      this._setWidthHeight(options);\n\t      if (this._element && this.crossOrigin) {\n\t        this._element.crossOrigin = this.crossOrigin;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Array} filters to be initialized\n\t     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n\t     */\n\t    _initFilters: function(filters, callback) {\n\t      if (filters && filters.length) {\n\t        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }, 'fabric.Image.filters');\n\t      }\n\t      else {\n\t        callback && callback();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Object with width/height properties\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      this.width = 'width' in options\n\t        ? options.width\n\t        : (this.getElement()\n\t            ? this.getElement().width || 0\n\t            : 0);\n\t\n\t      this.height = 'height' in options\n\t        ? options.height\n\t        : (this.getElement()\n\t            ? this.getElement().height || 0\n\t            : 0);\n\t    },\n\t  });\n\t\n\t  /**\n\t   * Default CSS class name for canvas\n\t   * @static\n\t   * @type String\n\t   * @default\n\t   */\n\t  fabric.Image.CSS_CANVAS = 'canvas-img';\n\t\n\t  /**\n\t   * Alias for getSrc\n\t   * @static\n\t   */\n\t  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from its object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} callback Callback to invoke when an image instance is created\n\t   */\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img, error) {\n\t      if (error) {\n\t        callback && callback(null, error);\n\t        return;\n\t      }\n\t      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n\t        object.filters = filters || [];\n\t        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n\t          object.resizeFilters = resizeFilters || [];\n\t          return new fabric.Image(img, object, callback);\n\t        });\n\t      });\n\t    }, null, object.crossOrigin);\n\t  };\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from an URL string\n\t   * @static\n\t   * @param {String} url URL to create an image from\n\t   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n\t   * @param {Object} [imgOptions] Options object\n\t   */\n\t  fabric.Image.fromURL = function(url, callback, imgOptions) {\n\t    fabric.util.loadImage(url, function(img) {\n\t      callback && callback(new fabric.Image(img, imgOptions));\n\t    }, null, imgOptions && imgOptions.crossOrigin);\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n\t   * @static\n\t   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n\t   */\n\t  fabric.Image.ATTRIBUTE_NAMES =\n\t    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Image} instance from an SVG element\n\t   * @static\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Function} callback Callback to execute when fabric.Image object is created\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Image} Instance of fabric.Image\n\t   */\n\t  fabric.Image.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n\t        preserveAR;\n\t\n\t    if (parsedAttributes.preserveAspectRatio) {\n\t      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n\t      extend(parsedAttributes, preserveAR);\n\t    }\n\t\n\t    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n\t      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.async = true;\n\t\n\t  /**\n\t   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n\t   * @static\n\t   * @type Number\n\t   * @default\n\t   */\n\t  fabric.Image.pngCompression = 1;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * @private\n\t   * @return {Number} angle value\n\t   */\n\t  _getAngleValueForStraighten: function() {\n\t    var angle = this.getAngle() % 360;\n\t    if (angle > 0) {\n\t      return Math.round((angle - 1) / 90) * 90;\n\t    }\n\t    return Math.round(angle / 90) * 90;\n\t  },\n\t\n\t  /**\n\t   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  straighten: function() {\n\t    this.setAngle(this._getAngleValueForStraighten());\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Object.prototype.straighten} but with animation\n\t   * @param {Object} callbacks Object with callback functions\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraighten: function(callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: this.get('angle'),\n\t      endValue: this._getAngleValueForStraighten(),\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        _this.setAngle(value);\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        _this.setCoords();\n\t        onComplete();\n\t      },\n\t      onStart: function() {\n\t        _this.set('active', false);\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Straightens object, then rerenders canvas\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  straightenObject: function (object) {\n\t    object.straighten();\n\t    this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraightenObject: function (object) {\n\t    object.fxStraighten({\n\t      onChange: this.renderAll.bind(this)\n\t    });\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * @namespace fabric.Image.filters\n\t * @memberOf fabric.Image\n\t * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n\t * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t */\n\tfabric.Image.filters = fabric.Image.filters || { };\n\t\n\t/**\n\t * Root filter class from which all filter classes inherit from\n\t * @class fabric.Image.filters.BaseFilter\n\t * @memberOf fabric.Image.filters\n\t */\n\tfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\t\n\t  /**\n\t   * Filter type\n\t   * @param {String} type\n\t   * @default\n\t   */\n\t  type: 'BaseFilter',\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   */\n\t  initialize: function(options) {\n\t    if (options) {\n\t      this.setOptions(options);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets filter's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this[prop] = options[prop];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of an instance\n\t   * @return {Object} Object representation of an instance\n\t   */\n\t  toObject: function() {\n\t    return { type: this.type };\n\t  },\n\t\n\t  /**\n\t   * Returns a JSON representation of an instance\n\t   * @return {Object} JSON\n\t   */\n\t  toJSON: function() {\n\t    // delegate, not alias\n\t    return this.toObject();\n\t  }\n\t});\n\t\n\tfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n\t  var filter = new fabric.Image.filters[object.type](object);\n\t  callback && callback(filter);\n\t  return filter;\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Brightness filter class\n\t   * @class fabric.Image.filters.Brightness\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Brightness({\n\t   *   brightness: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Brightness',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Brightness.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.brightness = options.brightness || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          brightness = this.brightness;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] += brightness;\n\t        data[i + 1] += brightness;\n\t        data[i + 2] += brightness;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        brightness: this.brightness\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n\t   */\n\t  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n\t   * @class fabric.Image.filters.Convolute\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Sharpen filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 0, -1,  0,\n\t   *            -1,  5, -1,\n\t   *             0, -1,  0 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Blur filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter with opaqueness</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   opaque: true,\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Convolute',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Convolute.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n\t     * @param {Array} [options.matrix] Filter matrix\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.opaque = options.opaque;\n\t      this.matrix = options.matrix || [\n\t        0, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t\n\t      var weights = this.matrix,\n\t          context = canvasEl.getContext('2d'),\n\t          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t\n\t          side = Math.round(Math.sqrt(weights.length)),\n\t          halfSide = Math.floor(side / 2),\n\t          src = pixels.data,\n\t          sw = pixels.width,\n\t          sh = pixels.height,\n\t          output = context.createImageData(sw, sh),\n\t          dst = output.data,\n\t          // go through the destination image pixels\n\t          alphaFac = this.opaque ? 1 : 0,\n\t          r, g, b, a, dstOff,\n\t          scx, scy, srcOff, wt;\n\t\n\t      for (var y = 0; y < sh; y++) {\n\t        for (var x = 0; x < sw; x++) {\n\t          dstOff = (y * sw + x) * 4;\n\t          // calculate the weighed sum of the source image pixels that\n\t          // fall under the convolution matrix\n\t          r = 0; g = 0; b = 0; a = 0;\n\t\n\t          for (var cy = 0; cy < side; cy++) {\n\t            for (var cx = 0; cx < side; cx++) {\n\t              scy = y + cy - halfSide;\n\t              scx = x + cx - halfSide;\n\t\n\t              // eslint-disable-next-line max-depth\n\t              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n\t                continue;\n\t              }\n\t\n\t              srcOff = (scy * sw + scx) * 4;\n\t              wt = weights[cy * side + cx];\n\t\n\t              r += src[srcOff] * wt;\n\t              g += src[srcOff + 1] * wt;\n\t              b += src[srcOff + 2] * wt;\n\t              a += src[srcOff + 3] * wt;\n\t            }\n\t          }\n\t          dst[dstOff] = r;\n\t          dst[dstOff + 1] = g;\n\t          dst[dstOff + 2] = b;\n\t          dst[dstOff + 3] = a + alphaFac * (255 - a);\n\t        }\n\t      }\n\t\n\t      context.putImageData(output, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        opaque: this.opaque,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n\t   */\n\t  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * GradientTransparency filter class\n\t   * @class fabric.Image.filters.GradientTransparency\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.GradientTransparency({\n\t   *   threshold: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'GradientTransparency',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=100] Threshold value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 100;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          total = data.length;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i + 3] = threshold + 255 * (total - i) / total;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n\t   */\n\t  fabric.Image.filters.GradientTransparency.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Grayscale image filter class\n\t   * @class fabric.Image.filters.Grayscale\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Grayscale();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Grayscale',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Grayscale.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          len = imageData.width * imageData.height * 4,\n\t          index = 0,\n\t          average;\n\t\n\t      while (index < len) {\n\t        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n\t        data[index]     = average;\n\t        data[index + 1] = average;\n\t        data[index + 2] = average;\n\t        index += 4;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n\t   */\n\t  fabric.Image.filters.Grayscale.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Grayscale';\n\t    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Invert filter class\n\t   * @class fabric.Image.filters.Invert\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Invert();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Invert',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Invert.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] = 255 - data[i];\n\t        data[i + 1] = 255 - data[i + 1];\n\t        data[i + 2] = 255 - data[i + 2];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n\t   */\n\t  fabric.Image.filters.Invert.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Invert';\n\t    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Mask filter class\n\t   * See http://resources.aleph-1.com/mask/\n\t   * @class fabric.Image.filters.Mask\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n\t   */\n\t  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Mask',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Mask.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {fabric.Image} [options.mask] Mask image object\n\t     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.mask = options.mask;\n\t      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      if (!this.mask) {\n\t        return;\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          maskEl = this.mask.getElement(),\n\t          maskCanvasEl = fabric.util.createCanvasElement(),\n\t          channel = this.channel,\n\t          i,\n\t          iLen = imageData.width * imageData.height * 4;\n\t\n\t      maskCanvasEl.width = canvasEl.width;\n\t      maskCanvasEl.height = canvasEl.height;\n\t\n\t      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\t\n\t      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          maskData = maskImageData.data;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i + 3] = maskData[i + channel];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        mask: this.mask.toObject(),\n\t        channel: this.channel\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n\t   */\n\t  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.mask.src, function(img) {\n\t      object.mask = new fabric.Image(img, object.mask);\n\t      return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.filters.Mask.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Noise filter class\n\t   * @class fabric.Image.filters.Noise\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Noise({\n\t   *   noise: 700\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Noise',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Noise.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.noise=0] Noise value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.noise = options.noise || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          noise = this.noise, rand;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        rand = (0.5 - Math.random()) * noise;\n\t\n\t        data[i] += rand;\n\t        data[i + 1] += rand;\n\t        data[i + 2] += rand;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        noise: this.noise\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n\t   */\n\t  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Pixelate filter class\n\t   * @class fabric.Image.filters.Pixelate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Pixelate({\n\t   *   blocksize: 8\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Pixelate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Pixelate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.blocksize = options.blocksize || 4;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = imageData.height,\n\t          jLen = imageData.width,\n\t          index, i, j, r, g, b, a;\n\t\n\t      for (i = 0; i < iLen; i += this.blocksize) {\n\t        for (j = 0; j < jLen; j += this.blocksize) {\n\t\n\t          index = (i * 4) * jLen + (j * 4);\n\t\n\t          r = data[index];\n\t          g = data[index + 1];\n\t          b = data[index + 2];\n\t          a = data[index + 3];\n\t\n\t          /*\n\t           blocksize: 4\n\t\n\t           [1,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [1,1,1,1,1]\n\t           */\n\t\n\t          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n\t            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n\t              index = (_i * 4) * jLen + (_j * 4);\n\t              data[index] = r;\n\t              data[index + 1] = g;\n\t              data[index + 2] = b;\n\t              data[index + 3] = a;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        blocksize: this.blocksize\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n\t   */\n\t  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Remove white filter class\n\t   * @class fabric.Image.filters.RemoveWhite\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.RemoveWhite({\n\t   *   threshold: 40,\n\t   *   distance: 140\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'RemoveWhite',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=30] Threshold value\n\t     * @param {Number} [options.distance=20] Distance value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 30;\n\t      this.distance = options.distance || 20;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          distance = this.distance,\n\t          limit = 255 - threshold,\n\t          abs = Math.abs,\n\t          r, g, b;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (r > limit &&\n\t            g > limit &&\n\t            b > limit &&\n\t            abs(r - g) < distance &&\n\t            abs(r - b) < distance &&\n\t            abs(g - b) < distance\n\t        ) {\n\t          data[i + 3] = 0;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold,\n\t        distance: this.distance\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n\t   */\n\t  fabric.Image.filters.RemoveWhite.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia filter class\n\t   * @class fabric.Image.filters.Sepia\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, avg;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n\t        data[i] = avg + 100;\n\t        data[i + 1] = avg + 50;\n\t        data[i + 2] = avg + 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n\t   */\n\t  fabric.Image.filters.Sepia.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Sepia';\n\t    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia2 filter class\n\t   * @class fabric.Image.filters.Sepia2\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia2();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia2',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, r, g, b;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n\t        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n\t        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n\t   */\n\t  fabric.Image.filters.Sepia2.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Sepia2';\n\t    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Tint filter class\n\t   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n\t   * @class fabric.Image.filters.Tint\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Tint filter with hex color and opacity</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: '#3513B0',\n\t   *   opacity: 0.5\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Tint filter with rgba color</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: 'rgba(53, 21, 176, 0.5)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Tint',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Tint.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to tint the image with\n\t     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t      this.opacity = typeof options.opacity !== 'undefined'\n\t                      ? options.opacity\n\t                      : new fabric.Color(this.color).getAlpha();\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          tintR, tintG, tintB,\n\t          r, g, b, alpha1,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      tintR = source[0] * this.opacity;\n\t      tintG = source[1] * this.opacity;\n\t      tintB = source[2] * this.opacity;\n\t\n\t      alpha1 = 1 - this.opacity;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        // alpha compositing\n\t        data[i] = tintR + r * alpha1;\n\t        data[i + 1] = tintG + g * alpha1;\n\t        data[i + 2] = tintB + b * alpha1;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color,\n\t        opacity: this.opacity\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n\t   */\n\t  fabric.Image.filters.Tint.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Multiply filter class\n\t   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n\t   * @class fabric.Image.filters.Multiply\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example <caption>Multiply filter with hex color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: '#F0F'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Multiply filter with rgb color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: 'rgb(53, 21, 176)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Multiply',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Multiply.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] *= source[0] / 255;\n\t        data[i + 1] *= source[1] / 255;\n\t        data[i + 2] *= source[2] / 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n\t   */\n\t  fabric.Image.filters.Multiply.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t  'use strict';\n\t\n\t  var fabric = global.fabric,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Blend filter class\n\t   * @class fabric.Image.filter.Blend\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  color: '#000',\n\t   *  mode: 'multiply'\n\t   * });\n\t   *\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  image: fabricImageObject,\n\t   *  mode: 'multiply',\n\t   *  alpha: 0.5\n\t   * });\n\t\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t\n\t  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n\t    type: 'Blend',\n\t\n\t    initialize: function(options) {\n\t      options = options || {};\n\t      this.color = options.color || '#000';\n\t      this.image = options.image || false;\n\t      this.mode = options.mode || 'multiply';\n\t      this.alpha = options.alpha || 1;\n\t    },\n\t\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          tr, tg, tb,\n\t          r, g, b,\n\t          _r, _g, _b,\n\t          source,\n\t          isImage = false;\n\t\n\t      if (this.image) {\n\t        // Blend images\n\t        isImage = true;\n\t\n\t        var _el = fabric.util.createCanvasElement();\n\t        _el.width = this.image.width;\n\t        _el.height = this.image.height;\n\t\n\t        var tmpCanvas = new fabric.StaticCanvas(_el);\n\t        tmpCanvas.add(this.image);\n\t        var context2 =  tmpCanvas.getContext('2d');\n\t        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n\t      }\n\t      else {\n\t        // Blend color\n\t        source = new fabric.Color(this.color).getSource();\n\t\n\t        tr = source[0] * this.alpha;\n\t        tg = source[1] * this.alpha;\n\t        tb = source[2] * this.alpha;\n\t      }\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (isImage) {\n\t          tr = source[i] * this.alpha;\n\t          tg = source[i + 1] * this.alpha;\n\t          tb = source[i + 2] * this.alpha;\n\t        }\n\t\n\t        switch (this.mode) {\n\t          case 'multiply':\n\t            data[i] = r * tr / 255;\n\t            data[i + 1] = g * tg / 255;\n\t            data[i + 2] = b * tb / 255;\n\t            break;\n\t          case 'screen':\n\t            data[i] = 1 - (1 - r) * (1 - tr);\n\t            data[i + 1] = 1 - (1 - g) * (1 - tg);\n\t            data[i + 2] = 1 - (1 - b) * (1 - tb);\n\t            break;\n\t          case 'add':\n\t            data[i] = Math.min(255, r + tr);\n\t            data[i + 1] = Math.min(255, g + tg);\n\t            data[i + 2] = Math.min(255, b + tb);\n\t            break;\n\t          case 'diff':\n\t          case 'difference':\n\t            data[i] = Math.abs(r - tr);\n\t            data[i + 1] = Math.abs(g - tg);\n\t            data[i + 2] = Math.abs(b - tb);\n\t            break;\n\t          case 'subtract':\n\t            _r = r - tr;\n\t            _g = g - tg;\n\t            _b = b - tb;\n\t\n\t            data[i] = (_r < 0) ? 0 : _r;\n\t            data[i + 1] = (_g < 0) ? 0 : _g;\n\t            data[i + 2] = (_b < 0) ? 0 : _b;\n\t            break;\n\t          case 'darken':\n\t            data[i] = Math.min(r, tr);\n\t            data[i + 1] = Math.min(g, tg);\n\t            data[i + 2] = Math.min(b, tb);\n\t            break;\n\t          case 'lighten':\n\t            data[i] = Math.max(r, tr);\n\t            data[i + 1] = Math.max(g, tg);\n\t            data[i + 2] = Math.max(b, tb);\n\t            break;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        color: this.color,\n\t        image: this.image,\n\t        mode: this.mode,\n\t        alpha: this.alpha\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Blend} Instance of fabric.Image.filters.Blend\n\t   */\n\t  fabric.Image.filters.Blend.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n\t      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n\t      ceil = Math.ceil,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Resize image filter class\n\t   * @class fabric.Image.filters.Resize\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Resize();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Resize',\n\t\n\t    /**\n\t     * Resize type\n\t     * @param {String} resizeType\n\t     * @default\n\t     */\n\t    resizeType: 'hermite',\n\t\n\t    /**\n\t     * Scale factor for resizing, x axis\n\t     * @param {Number} scaleX\n\t     * @default\n\t     */\n\t    scaleX: 0,\n\t\n\t    /**\n\t     * Scale factor for resizing, y axis\n\t     * @param {Number} scaleY\n\t     * @default\n\t     */\n\t    scaleY: 0,\n\t\n\t    /**\n\t     * LanczosLobes parameter for lanczos filter\n\t     * @param {Number} lanczosLobes\n\t     * @default\n\t     */\n\t    lanczosLobes: 3,\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Resize.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} scaleX\n\t     * @param {Number} scaleY\n\t     */\n\t    applyTo: function(canvasEl, scaleX, scaleY) {\n\t      if (scaleX === 1 && scaleY === 1) {\n\t        return;\n\t      }\n\t\n\t      this.rcpScaleX = 1 / scaleX;\n\t      this.rcpScaleY = 1 / scaleY;\n\t\n\t      var oW = canvasEl.width, oH = canvasEl.height,\n\t          dW = round(oW * scaleX), dH = round(oH * scaleY),\n\t          imageData;\n\t\n\t      if (this.resizeType === 'sliceHack') {\n\t        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'hermite') {\n\t        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'bilinear') {\n\t        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'lanczos') {\n\t        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      canvasEl.width = dW;\n\t      canvasEl.height = dH;\n\t      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Filter sliceByTwo\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n\t      var context = canvasEl.getContext('2d'), imageData,\n\t          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n\t          doneW = false, doneH = false, stepW = oW, stepH = oH,\n\t          tmpCanvas = fabric.util.createCanvasElement(),\n\t          tmpCtx = tmpCanvas.getContext('2d');\n\t      dW = floor(dW);\n\t      dH = floor(dH);\n\t      tmpCanvas.width = max(dW, oW);\n\t      tmpCanvas.height = max(dH, oH);\n\t\n\t      if (dW > oW) {\n\t        multW = 2;\n\t        signW = -1;\n\t      }\n\t      if (dH > oH) {\n\t        multH = 2;\n\t        signH = -1;\n\t      }\n\t      imageData = context.getImageData(0, 0, oW, oH);\n\t      canvasEl.width = max(dW, oW);\n\t      canvasEl.height = max(dH, oH);\n\t      context.putImageData(imageData, 0, 0);\n\t\n\t      while (!doneW || !doneH) {\n\t        oW = stepW;\n\t        oH = stepH;\n\t        if (dW * signW < floor(stepW * multW * signW)) {\n\t          stepW = floor(stepW * multW);\n\t        }\n\t        else {\n\t          stepW = dW;\n\t          doneW = true;\n\t        }\n\t        if (dH * signH < floor(stepH * multH * signH)) {\n\t          stepH = floor(stepH * multH);\n\t        }\n\t        else {\n\t          stepH = dH;\n\t          doneH = true;\n\t        }\n\t        imageData = context.getImageData(0, 0, oW, oH);\n\t        tmpCtx.putImageData(imageData, 0, 0);\n\t        context.clearRect(0, 0, stepW, stepH);\n\t        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n\t      }\n\t      return context.getImageData(0, 0, dW, dH);\n\t    },\n\t\n\t    /**\n\t     * Filter lanczosResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\t\n\t      function lanczosCreate(lobes) {\n\t        return function(x) {\n\t          if (x > lobes) {\n\t            return 0;\n\t          }\n\t          x *= Math.PI;\n\t          if (abs(x) < 1e-16) {\n\t            return 1;\n\t          }\n\t          var xx = x / lobes;\n\t          return sin(x) * sin(xx) / x / xx;\n\t        };\n\t      }\n\t\n\t      function process(u) {\n\t        var v, i, weight, idx, a, red, green,\n\t            blue, alpha, fX, fY;\n\t        center.x = (u + 0.5) * ratioX;\n\t        icenter.x = floor(center.x);\n\t        for (v = 0; v < dH; v++) {\n\t          center.y = (v + 0.5) * ratioY;\n\t          icenter.y = floor(center.y);\n\t          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n\t          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n\t            if (i < 0 || i >= oW) {\n\t              continue;\n\t            }\n\t            fX = floor(1000 * abs(i - center.x));\n\t            if (!cacheLanc[fX]) {\n\t              cacheLanc[fX] = { };\n\t            }\n\t            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n\t              if (j < 0 || j >= oH) {\n\t                continue;\n\t              }\n\t              fY = floor(1000 * abs(j - center.y));\n\t              if (!cacheLanc[fX][fY]) {\n\t                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n\t              }\n\t              weight = cacheLanc[fX][fY];\n\t              if (weight > 0) {\n\t                idx = (j * oW + i) * 4;\n\t                a += weight;\n\t                red += weight * srcData[idx];\n\t                green += weight * srcData[idx + 1];\n\t                blue += weight * srcData[idx + 2];\n\t                alpha += weight * srcData[idx + 3];\n\t              }\n\t            }\n\t          }\n\t          idx = (v * dW + u) * 4;\n\t          destData[idx] = red / a;\n\t          destData[idx + 1] = green / a;\n\t          destData[idx + 2] = blue / a;\n\t          destData[idx + 3] = alpha / a;\n\t        }\n\t\n\t        if (++u < dW) {\n\t          return process(u);\n\t        }\n\t        else {\n\t          return destImg;\n\t        }\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          srcImg = context.getImageData(0, 0, oW, oH),\n\t          destImg = context.getImageData(0, 0, dW, dH),\n\t          srcData = srcImg.data, destData = destImg.data,\n\t          lanczos = lanczosCreate(this.lanczosLobes),\n\t          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n\t          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n\t          range2X = ceil(ratioX * this.lanczosLobes / 2),\n\t          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n\t          cacheLanc = { }, center = { }, icenter = { };\n\t\n\t      return process(0);\n\t    },\n\t\n\t    /**\n\t     * bilinearFiltering\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n\t      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n\t          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n\t          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n\t          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n\t          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n\t          destPixels = destImage.data;\n\t      for (i = 0; i < dH; i++) {\n\t        for (j = 0; j < dW; j++) {\n\t          x = floor(ratioX * j);\n\t          y = floor(ratioY * i);\n\t          xDiff = ratioX * j - x;\n\t          yDiff = ratioY * i - y;\n\t          origPix = 4 * (y * oW + x);\n\t\n\t          for (chnl = 0; chnl < 4; chnl++) {\n\t            a = pixels[origPix + chnl];\n\t            b = pixels[origPix + 4 + chnl];\n\t            c = pixels[origPix + w4 + chnl];\n\t            d = pixels[origPix + w4 + 4 + chnl];\n\t            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n\t                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n\t            destPixels[offset++] = color;\n\t          }\n\t        }\n\t      }\n\t      return destImage;\n\t    },\n\t\n\t    /**\n\t     * hermiteFastResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n\t      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n\t          ratioWHalf = ceil(ratioW / 2),\n\t          ratioHHalf = ceil(ratioH / 2),\n\t          context = canvasEl.getContext('2d'),\n\t          img = context.getImageData(0, 0, oW, oH), data = img.data,\n\t          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n\t      for (var j = 0; j < dH; j++) {\n\t        for (var i = 0; i < dW; i++) {\n\t          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n\t              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n\t          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n\t            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n\t                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n\t            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n\t              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n\t                  w = sqrt(w0 + dx * dx);\n\t              /* eslint-disable max-depth */\n\t              if (w > 1 && w < -1) {\n\t                continue;\n\t              }\n\t              //hermite filter\n\t              weight = 2 * w * w * w - 3 * w * w + 1;\n\t              if (weight > 0) {\n\t                dx = 4 * (xx + yy * oW);\n\t                //alpha\n\t                gxA += weight * data[dx + 3];\n\t                weightsAlpha += weight;\n\t                //colors\n\t                if (data[dx + 3] < 255) {\n\t                  weight = weight * data[dx + 3] / 250;\n\t                }\n\t                gxR += weight * data[dx];\n\t                gxG += weight * data[dx + 1];\n\t                gxB += weight * data[dx + 2];\n\t                weights += weight;\n\t              }\n\t              /* eslint-enable max-depth */\n\t            }\n\t          }\n\t          data2[x2] = gxR / weights;\n\t          data2[x2 + 1] = gxG / weights;\n\t          data2[x2 + 2] = gxB / weights;\n\t          data2[x2 + 3] = gxA / weightsAlpha;\n\t        }\n\t      }\n\t      return img2;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        scaleX: this.scaleX,\n\t        scaleY: this.scaleY,\n\t        resizeType: this.resizeType,\n\t        lanczosLobes: this.lanczosLobes\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n\t   */\n\t  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Matrix filter class\n\t   * @class fabric.Image.filters.ColorMatrix\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n\t   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n\t   * @example <caption>Kodachrome filter</caption>\n\t   * var filter = new fabric.Image.filters.ColorMatrix({\n\t   *  matrix: [\n\t       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n\t       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n\t       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n\t       0, 0, 0, 1, 0\n\t      ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'ColorMatrix',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n\t     */\n\t    initialize: function( options ) {\n\t      options || ( options = {} );\n\t      this.matrix = options.matrix || [\n\t        1, 0, 0, 0, 0,\n\t        0, 1, 0, 0, 0,\n\t        0, 0, 1, 0, 0,\n\t        0, 0, 0, 1, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function( canvasEl ) {\n\t      var context = canvasEl.getContext( '2d' ),\n\t          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n\t          data = imageData.data,\n\t          iLen = data.length,\n\t          i,\n\t          r,\n\t          g,\n\t          b,\n\t          a,\n\t          m = this.matrix;\n\t\n\t      for ( i = 0; i < iLen; i += 4 ) {\n\t        r = data[ i ];\n\t        g = data[ i + 1 ];\n\t        b = data[ i + 2 ];\n\t        a = data[ i + 3 ];\n\t\n\t        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n\t        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n\t        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n\t        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n\t      }\n\t\n\t      context.putImageData( imageData, 0, 0 );\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        type: this.type,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] function to invoke after filter creation\n\t   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n\t   */\n\t  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Contrast filter class\n\t   * @class fabric.Image.filters.Contrast\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Contrast({\n\t   *   contrast: 40\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Contrast',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Contrast.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.contrast = options.contrast || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] = contrastF * (data[i] - 128) + 128;\n\t        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n\t        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        contrast: this.contrast\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n\t   */\n\t  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Saturate filter class\n\t   * @class fabric.Image.filters.Saturate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Saturate({\n\t   *   saturate: 100\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Saturate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Saturate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.saturate = options.saturate || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          max, adjust = -this.saturate * 0.01;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        max = Math.max(data[i], data[i + 1], data[i + 2]);\n\t        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n\t        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n\t        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        saturate: this.saturate\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n\t   */\n\t  fabric.Image.filters.Saturate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t      MIN_TEXT_WIDTH = 2;\n\t\n\t  if (fabric.Text) {\n\t    fabric.warn('fabric.Text is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor',\n\t    'charSpacing'\n\t  );\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor',\n\t    'charSpacing',\n\t    'styles'\n\t  );\n\t  /**\n\t   * Text class\n\t   * @class fabric.Text\n\t   * @extends fabric.Object\n\t   * @return {fabric.Text} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n\t   * @see {@link fabric.Text#initialize} for constructor definition\n\t   */\n\t  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\t\n\t    /**\n\t     * Properties which when set cause object to change dimensions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    _dimensionAffectingProps: [\n\t      'fontSize',\n\t      'fontWeight',\n\t      'fontFamily',\n\t      'fontStyle',\n\t      'lineHeight',\n\t      'text',\n\t      'charSpacing',\n\t      'textAlign'\n\t    ],\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reNewline: /\\r?\\n/,\n\t\n\t    /**\n\t     * Use this regular expression to filter for whitespace that is not a new line.\n\t     * Mostly used when text is 'justify' aligned.\n\t     * @private\n\t     */\n\t    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\t\n\t    /**\n\t     * Retrieves object's fontSize\n\t     * @method getFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font size (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontSize\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} fontSize Font size (in pixels)\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontWeight\n\t     * @method getFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {(String|Number)} Font weight\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontWeight\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {(Number|String)} fontWeight Font weight\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontFamily\n\t     * @method getFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font family\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontFamily\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontFamily Font family\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's text\n\t     * @method getText\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} text\n\t     */\n\t\n\t    /**\n\t     * Sets object's text\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setText\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} text Text\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textDecoration\n\t     * @method getTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text decoration\n\t     */\n\t\n\t    /**\n\t     * Sets object's textDecoration\n\t     * @method setTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textDecoration Text decoration\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontStyle\n\t     * @method getFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font style\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontStyle\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontStyle Font style\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's lineHeight\n\t     * @method getLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {Number} Line height\n\t     */\n\t\n\t    /**\n\t     * Sets object's lineHeight\n\t     * @method setLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} lineHeight Line height\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textAlign\n\t     * @method getTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text alignment\n\t     */\n\t\n\t    /**\n\t     * Sets object's textAlign\n\t     * @method setTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textAlign Text alignment\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textBackgroundColor\n\t     * @method getTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text background color\n\t     */\n\t\n\t    /**\n\t     * Sets object's textBackgroundColor\n\t     * @method setTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textBackgroundColor Text background color\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                 'text',\n\t\n\t    /**\n\t     * Font size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    fontSize:             40,\n\t\n\t    /**\n\t     * Font weight (e.g. bold, normal, 400, 600, 800)\n\t     * @type {(Number|String)}\n\t     * @default\n\t     */\n\t    fontWeight:           'normal',\n\t\n\t    /**\n\t     * Font family\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontFamily:           'Times New Roman',\n\t\n\t    /**\n\t     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textDecoration:       '',\n\t\n\t    /**\n\t     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textAlign:            'left',\n\t\n\t    /**\n\t     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontStyle:            '',\n\t\n\t    /**\n\t     * Line height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    lineHeight:           1.16,\n\t\n\t    /**\n\t     * Background color of text lines\n\t     * @type String\n\t     * @default\n\t     */\n\t    textBackgroundColor:  '',\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:      stateProperties,\n\t\n\t    /**\n\t     * List of properties to consider when checking if cache needs refresh\n\t     * @type Array\n\t     */\n\t    cacheProperties:      cacheProperties,\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:               null,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:               null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fontSizeFraction: 0.25,\n\t\n\t    /**\n\t     * Text Line proportion to font Size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    _fontSizeMult:             1.13,\n\t\n\t    /**\n\t     * additional space between characters\n\t     * expressed in thousands of em unit\n\t     * @type Number\n\t     * @default\n\t     */\n\t    charSpacing:             0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Text} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      options = options || { };\n\t      this.text = text;\n\t      this.__skipDimension = true;\n\t      this.callSuper('initialize', options);\n\t      this.__skipDimension = false;\n\t      this._initDimensions();\n\t      this.setCoords();\n\t      this.setupState({ propertySet: '_dimensionAffectingProps' });\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t      this._textLines = this._splitTextIntoLines();\n\t      this._clearCache();\n\t      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n\t      this.height = this._getTextHeight(ctx);\n\t      this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of text object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Text (' + this.complexity() +\n\t        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Return the dimension and the zoom level needed to create a cache canvas\n\t     * big enough to host the object to be cached.\n\t     * @private\n\t     * @param {Object} dim.x width of object to be cached\n\t     * @param {Object} dim.y height of object to be cached\n\t     * @return {Object}.width width of canvas\n\t     * @return {Object}.height height of canvas\n\t     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     */\n\t    _getCacheCanvasDimensions: function() {\n\t      var dims = this.callSuper('_getCacheCanvasDimensions');\n\t      var fontSize = this.fontSize;\n\t      dims.width += fontSize * dims.zoomX;\n\t      dims.height += fontSize * dims.zoomY;\n\t      return dims;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this._setTextStyles(ctx);\n\t      if (this.group && this.group.type === 'path-group') {\n\t        ctx.translate(this.left, this.top);\n\t      }\n\t      this._renderTextLinesBackground(ctx);\n\t      this._renderText(ctx);\n\t      this._renderTextDecoration(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderText: function(ctx) {\n\t      this._renderTextFill(ctx);\n\t      this._renderTextStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setTextStyles: function(ctx) {\n\t      ctx.textBaseline = 'alphabetic';\n\t      ctx.font = this._getFontDeclaration();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Height of fabric.Text object\n\t     */\n\t    _getTextHeight: function() {\n\t      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Maximum width of fabric.Text object\n\t     */\n\t    _getTextWidth: function(ctx) {\n\t      var maxWidth = this._getLineWidth(ctx, 0);\n\t\n\t      for (var i = 1, len = this._textLines.length; i < len; i++) {\n\t        var currentLineWidth = this._getLineWidth(ctx, i);\n\t        if (currentLineWidth > maxWidth) {\n\t          maxWidth = currentLineWidth;\n\t        }\n\t      }\n\t      return maxWidth;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} chars Chars to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     */\n\t    _renderChars: function(method, ctx, chars, left, top) {\n\t      // remove Text word from method var\n\t      var shortM = method.slice(0, -4), _char, width;\n\t      if (this[shortM].toLive) {\n\t        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n\t            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n\t        ctx.save();\n\t        ctx.translate(offsetX, offsetY);\n\t        left -= offsetX;\n\t        top -= offsetY;\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        var additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = chars.split('');\n\t        for (var i = 0, len = chars.length; i < len; i++) {\n\t          _char = chars[i];\n\t          width = ctx.measureText(_char).width + additionalSpace;\n\t          ctx[method](_char, left, top);\n\t          left += width > 0 ? width : 0;\n\t        }\n\t      }\n\t      else {\n\t        ctx[method](chars, left, top);\n\t      }\n\t      this[shortM].toLive && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Text to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     * @param {Number} lineIndex Index of a line in a text\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // lift the line by quarter of fontSize\n\t      top -= this.fontSize * this._fontSizeFraction;\n\t\n\t      // short-circuit\n\t      var lineWidth = this._getLineWidth(ctx, lineIndex);\n\t      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n\t        this._renderChars(method, ctx, line, left, top, lineIndex);\n\t        return;\n\t      }\n\t\n\t      // stretch the line\n\t      var words = line.split(/\\s+/),\n\t          charOffset = 0,\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          leftOffset = 0, word;\n\t\n\t      for (var i = 0, len = words.length; i < len; i++) {\n\t        while (line[charOffset] === ' ' && charOffset < line.length) {\n\t          charOffset++;\n\t        }\n\t        word = words[i];\n\t        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n\t        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n\t        charOffset += word.length;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} word\n\t     */\n\t    _getWidthOfWords: function (ctx, word) {\n\t      var width = ctx.measureText(word).width, charCount, additionalSpace;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = word.split('').length;\n\t        additionalSpace = charCount * this._getWidthOfCharSpacing();\n\t        width += additionalSpace;\n\t      }\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Left offset\n\t     */\n\t    _getLeftOffset: function() {\n\t      return -this.width / 2;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Top offset\n\t     */\n\t    _getTopOffset: function() {\n\t      return -this.height / 2;\n\t    },\n\t\n\t    /**\n\t     * Returns true because text has no style\n\t     */\n\t    isEmptyStyles: function() {\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     */\n\t    _renderTextCommon: function(ctx, method) {\n\t\n\t      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight,\n\t            lineWidth = this._getLineWidth(ctx, i),\n\t            leftOffset = this._getLineLeftOffset(lineWidth);\n\t        this._renderTextLine(\n\t          method,\n\t          ctx,\n\t          this._textLines[i],\n\t          left + leftOffset,\n\t          top + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextFill: function(ctx) {\n\t      if (!this.fill && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      this._renderTextCommon(ctx, 'fillText');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextStroke: function(ctx) {\n\t      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.strokeDashArray);\n\t      ctx.beginPath();\n\t      this._renderTextCommon(ctx, 'strokeText');\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line\n\t     */\n\t    _getHeightOfLine: function() {\n\t      return this._getHeightOfSingleLine() * this.lineHeight;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line without lineHeight\n\t     */\n\t    _getHeightOfSingleLine: function() {\n\t      return this.fontSize * this._fontSizeMult;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      if (!this.textBackgroundColor) {\n\t        return;\n\t      }\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\t\n\t      ctx.fillStyle = this.textBackgroundColor;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        if (lineWidth > 0) {\n\t          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t          ctx.fillRect(\n\t            this._getLeftOffset() + lineLeftOffset,\n\t            this._getTopOffset() + lineTopOffset,\n\t            lineWidth,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      ctx.fillStyle = originalFill;\n\t      // if there is text background color no\n\t      // other shadows should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} lineWidth Width of text line\n\t     * @return {Number} Line left offset\n\t     */\n\t    _getLineLeftOffset: function(lineWidth) {\n\t      if (this.textAlign === 'center') {\n\t        return (this.width - lineWidth) / 2;\n\t      }\n\t      if (this.textAlign === 'right') {\n\t        return this.width - lineWidth;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.__lineWidths = [];\n\t      this.__lineHeights = [];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _shouldClearDimensionCache: function() {\n\t      var shouldClear = this._forceClearCache;\n\t      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n\t      if (shouldClear) {\n\t        this.saveState({ propertySet: '_dimensionAffectingProps' });\n\t        this.dirty = true;\n\t      }\n\t      return shouldClear;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _getLineWidth: function(ctx, lineIndex) {\n\t      if (this.__lineWidths[lineIndex]) {\n\t        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n\t      }\n\t\n\t      var width, wordCount, line = this._textLines[lineIndex];\n\t\n\t      if (line === '') {\n\t        width = 0;\n\t      }\n\t      else {\n\t        width = this._measureLine(ctx, lineIndex);\n\t      }\n\t      this.__lineWidths[lineIndex] = width;\n\t\n\t      if (width && this.textAlign === 'justify') {\n\t        wordCount = line.split(/\\s+/);\n\t        if (wordCount.length > 1) {\n\t          this.__lineWidths[lineIndex] = -1;\n\t        }\n\t      }\n\t      return width;\n\t    },\n\t\n\t    _getWidthOfCharSpacing: function() {\n\t      if (this.charSpacing !== 0) {\n\t        return this.fontSize * this.charSpacing / 1000;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      var line = this._textLines[lineIndex],\n\t          width = ctx.measureText(line).width,\n\t          additionalSpace = 0, charCount, finalWidth;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = line.split('').length;\n\t        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n\t      }\n\t      finalWidth = width + additionalSpace;\n\t      return finalWidth > 0 ? finalWidth : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (!this.textDecoration) {\n\t        return;\n\t      }\n\t      var halfOfVerticalBox = this.height / 2,\n\t          _this = this, offsets = [];\n\t\n\t      /** @ignore */\n\t      function renderLinesAtOffset(offsets) {\n\t        var i, lineHeight = 0, len, j, oLen, lineWidth,\n\t            lineLeftOffset, heightOfLine;\n\t\n\t        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\t\n\t          lineWidth = _this._getLineWidth(ctx, i);\n\t          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n\t          heightOfLine = _this._getHeightOfLine(ctx, i);\n\t\n\t          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n\t            ctx.fillRect(\n\t              _this._getLeftOffset() + lineLeftOffset,\n\t              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n\t              lineWidth,\n\t              _this.fontSize / 15);\n\t          }\n\t          lineHeight += heightOfLine;\n\t        }\n\t      }\n\t\n\t      if (this.textDecoration.indexOf('underline') > -1) {\n\t        offsets.push(0.85); // 1 - 3/16\n\t      }\n\t      if (this.textDecoration.indexOf('line-through') > -1) {\n\t        offsets.push(0.43);\n\t      }\n\t      if (this.textDecoration.indexOf('overline') > -1) {\n\t        offsets.push(-0.12);\n\t      }\n\t      if (offsets.length > 0) {\n\t        renderLinesAtOffset(offsets);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * return font declaration string for canvas context\n\t     * @returns {String} font declaration formatted for canvas context.\n\t     */\n\t    _getFontDeclaration: function() {\n\t      return [\n\t        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n\t        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n\t        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n\t        this.fontSize + 'px',\n\t        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n\t      ].join(' ');\n\t    },\n\t\n\t    /**\n\t     * Renders text instance on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n\t        return;\n\t      }\n\t      if (this._shouldClearDimensionCache()) {\n\t        this._setTextStyles(ctx);\n\t        this._initDimensions(ctx);\n\t      }\n\t      this.callSuper('render', ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * Returns the text as an array of lines.\n\t     * @returns {Array} Lines in the text\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      return this.text.split(this._reNewline);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var additionalProperties = [\n\t        'text',\n\t        'fontSize',\n\t        'fontWeight',\n\t        'fontFamily',\n\t        'fontStyle',\n\t        'lineHeight',\n\t        'textDecoration',\n\t        'textAlign',\n\t        'textBackgroundColor',\n\t        'charSpacing'\n\t      ].concat(propertiesToInclude);\n\t      return this.callSuper('toObject', additionalProperties);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      if (!this.ctx) {\n\t        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\t      }\n\t      var markup = this._createBaseSVGMarkup(),\n\t          offsets = this._getSVGLeftTopOffsets(this.ctx),\n\t          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\t      this._wrapSVGTextAndBg(markup, textAndBg);\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLeftTopOffsets: function(ctx) {\n\t      var lineTop = this._getHeightOfLine(ctx, 0),\n\t          textLeft = -this.width / 2,\n\t          textTop = 0;\n\t\n\t      return {\n\t        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n\t        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n\t        lineTop: lineTop\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _wrapSVGTextAndBg: function(markup, textAndBg) {\n\t      var noShadow = true, filter = this.getSvgFilter(),\n\t          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\t\n\t      markup.push(\n\t        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n\t          style, '>\\n',\n\t          textAndBg.textBgRects.join(''),\n\t          '\\t\\t<text xml:space=\"preserve\" ',\n\t            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n\t            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n\t            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n\t            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n\t            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n\t            textAndBg.textSpans.join(''),\n\t          '\\t\\t</text>\\n',\n\t        '\\t</g>\\n'\n\t      );\n\t    },\n\t\n\t    getSvgStyles: function(skipShadow) {\n\t      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n\t      return svgStyle + ' white-space: pre;';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} textTopOffset Text top offset\n\t     * @param {Number} textLeftOffset Text left offset\n\t     * @return {Object}\n\t     */\n\t    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n\t      var textSpans = [],\n\t          textBgRects = [],\n\t          height = 0;\n\t      // bounding-box background\n\t      this._setSVGBg(textBgRects);\n\t\n\t      // text and text-background\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        if (this.textBackgroundColor) {\n\t          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n\t        }\n\t        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n\t        height += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      return {\n\t        textSpans: textSpans,\n\t        textBgRects: textBgRects\n\t      };\n\t    },\n\t\n\t    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n\t      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n\t        - textTopOffset + height - this.height / 2;\n\t      if (this.textAlign === 'justify') {\n\t        // i call from here to do not intefere with IText\n\t        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n\t        return;\n\t      }\n\t      textSpans.push(\n\t        '\\t\\t\\t<tspan x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n\t          'y=\"',\n\t          toFixed(yPos, NUM_FRACTION_DIGITS),\n\t          '\" ',\n\t          // doing this on <tspan> elements since setting opacity\n\t          // on containing <text> one doesn't work in Illustrator\n\t          this._getFillAttributes(this.fill), '>',\n\t          fabric.util.string.escapeXml(this._textLines[i]),\n\t        '</tspan>\\n'\n\t      );\n\t    },\n\t\n\t    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n\t      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\t\n\t      this._setTextStyles(ctx);\n\t\n\t      var line = this._textLines[i],\n\t          words = line.split(/\\s+/),\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          word, attributes = this._getFillAttributes(this.fill),\n\t          len;\n\t\n\t      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\t\n\t      for (i = 0, len = words.length; i < len; i++) {\n\t        word = words[i];\n\t        textSpans.push(\n\t          '\\t\\t\\t<tspan x=\"',\n\t            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n\t            'y=\"',\n\t            toFixed(yPos, NUM_FRACTION_DIGITS),\n\t            '\" ',\n\t            // doing this on <tspan> elements since setting opacity\n\t            // on containing <text> one doesn't work in Illustrator\n\t            attributes, '>',\n\t            fabric.util.string.escapeXml(word),\n\t          '</tspan>\\n'\n\t        );\n\t        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n\t      }\n\t    },\n\t\n\t    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n\t      textBgRects.push(\n\t        '\\t\\t<rect ',\n\t          this._getFillAttributes(this.textBackgroundColor),\n\t          ' x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n\t          '\" y=\"',\n\t          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n\t          '\" width=\"',\n\t          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n\t          '\" height=\"',\n\t          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n');\n\t    },\n\t\n\t    _setSVGBg: function(textBgRects) {\n\t      if (this.backgroundColor) {\n\t        textBgRects.push(\n\t          '\\t\\t<rect ',\n\t            this._getFillAttributes(this.backgroundColor),\n\t            ' x=\"',\n\t            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n\t            '\" y=\"',\n\t            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n\t            '\" width=\"',\n\t            toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            '\" height=\"',\n\t            toFixed(this.height, NUM_FRACTION_DIGITS),\n\t          '\"></rect>\\n');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n\t     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n\t     *\n\t     * @private\n\t     * @param {*} value\n\t     * @return {String}\n\t     */\n\t    _getFillAttributes: function(value) {\n\t      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n\t      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n\t        return 'fill=\"' + value + '\"';\n\t      }\n\t      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Sets specified property to a specified value\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Text} thisArg\n\t     * @chainable\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n\t        this._initDimensions();\n\t        this.setCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n\t   */\n\t  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n\t    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\t\n\t  /**\n\t   * Default SVG font size\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   */\n\t  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n\t    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\t\n\t    options.top = options.top || 0;\n\t    options.left = options.left || 0;\n\t    if ('dx' in parsedAttributes) {\n\t      options.left += parsedAttributes.dx;\n\t    }\n\t    if ('dy' in parsedAttributes) {\n\t      options.top += parsedAttributes.dy;\n\t    }\n\t    if (!('fontSize' in options)) {\n\t      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t    }\n\t\n\t    if (!options.originX) {\n\t      options.originX = 'left';\n\t    }\n\t\n\t    var textContent = '';\n\t\n\t    // The XML is not properly parsed in IE9 so a workaround to get\n\t    // textContent is through firstChild.data. Another workaround would be\n\t    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\t    if (!('textContent' in element)) {\n\t      if ('firstChild' in element && element.firstChild !== null) {\n\t        if ('data' in element.firstChild && element.firstChild.data !== null) {\n\t          textContent = element.firstChild.data;\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      textContent = element.textContent;\n\t    }\n\t\n\t    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\t\n\t    var text = new fabric.Text(textContent, options),\n\t        textHeightScaleFactor = text.getHeight() / text.height,\n\t        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n\t        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n\t        textHeight = text.getHeight() + scaledDiff,\n\t        offX = 0;\n\t    /*\n\t      Adjust positioning:\n\t        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n\t        top/left properties in Fabric correspond to center point of text bounding box\n\t    */\n\t    if (text.originX === 'left') {\n\t      offX = text.getWidth() / 2;\n\t    }\n\t    if (text.originX === 'right') {\n\t      offX = -text.getWidth() / 2;\n\t    }\n\t    text.set({\n\t      left: text.getLeft() + offX,\n\t      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n\t    });\n\t\n\t    return text;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Text', object, callback, forceAsync, 'text');\n\t  };\n\t\n\t  fabric.util.createAccessors(fabric.Text);\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n\t   * prefix when observing canvas.\n\t   * @class fabric.IText\n\t   * @extends fabric.Text\n\t   * @mixes fabric.Observable\n\t   *\n\t   * @fires changed\n\t   * @fires selection:changed\n\t   * @fires editing:entered\n\t   * @fires editing:exited\n\t   *\n\t   * @return {fabric.IText} thisArg\n\t   * @see {@link fabric.IText#initialize} for constructor definition\n\t   *\n\t   * <p>Supported key combinations:</p>\n\t   * <pre>\n\t   *   Move cursor:                    left, right, up, down\n\t   *   Select character:               shift + left, shift + right\n\t   *   Select text vertically:         shift + up, shift + down\n\t   *   Move cursor by word:            alt + left, alt + right\n\t   *   Select words:                   shift + alt + left, shift + alt + right\n\t   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n\t   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n\t   *   Jump to start/end of text:      cmd + up, cmd + down\n\t   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n\t   *   Delete character:               backspace\n\t   *   Delete word:                    alt + backspace\n\t   *   Delete line:                    cmd + backspace\n\t   *   Forward delete:                 delete\n\t   *   Copy text:                      ctrl/cmd + c\n\t   *   Paste text:                     ctrl/cmd + v\n\t   *   Cut text:                       ctrl/cmd + x\n\t   *   Select entire text:             ctrl/cmd + a\n\t   *   Quit editing                    tab or esc\n\t   * </pre>\n\t   *\n\t   * <p>Supported mouse/touch combination</p>\n\t   * <pre>\n\t   *   Position cursor:                click/touch\n\t   *   Create selection:               click/touch & drag\n\t   *   Create selection:               click & shift + click\n\t   *   Select word:                    double click\n\t   *   Select line:                    triple click\n\t   * </pre>\n\t   */\n\t  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'i-text',\n\t\n\t    /**\n\t     * Index where text selection starts (or where cursor is when there is no selection)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionStart: 0,\n\t\n\t    /**\n\t     * Index where text selection ends\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionEnd: 0,\n\t\n\t    /**\n\t     * Color of text selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor: 'rgba(17,119,255,0.3)',\n\t\n\t    /**\n\t     * Indicates whether text is in editing mode\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isEditing: false,\n\t\n\t    /**\n\t     * Indicates whether a text can be edited\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    editable: true,\n\t\n\t    /**\n\t     * Border color of text object while it's in editing mode\n\t     * @type String\n\t     * @default\n\t     */\n\t    editingBorderColor: 'rgba(102,153,255,0.25)',\n\t\n\t    /**\n\t     * Width of cursor (in px)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorWidth: 2,\n\t\n\t    /**\n\t     * Color of default cursor (when not overwritten by character style)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cursorColor: '#333',\n\t\n\t    /**\n\t     * Delay between cursor blink (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDelay: 1000,\n\t\n\t    /**\n\t     * Duration of cursor fadein (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDuration: 600,\n\t\n\t    /**\n\t     * Object containing character styles\n\t     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n\t     * @type Object\n\t     * @default\n\t     */\n\t    styles: null,\n\t\n\t    /**\n\t     * Indicates whether internal text char widths can be cached\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    caching: true,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reSpace: /\\s|\\n/,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _currentCursorOpacity: 0,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _selectionDirection: null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _abortCursorAnimation: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __widthOfSpace: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.IText} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.styles = options ? (options.styles || { }) : { };\n\t      this.callSuper('initialize', text, options);\n\t      this.initBehavior();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.callSuper('_clearCache');\n\t      this.__widthOfSpace = [];\n\t    },\n\t\n\t    /**\n\t     * Returns true if object has no styling\n\t     */\n\t    isEmptyStyles: function() {\n\t      if (!this.styles) {\n\t        return true;\n\t      }\n\t      var obj = this.styles;\n\t\n\t      for (var p1 in obj) {\n\t        for (var p2 in obj[p1]) {\n\t          // eslint-disable-next-line no-unused-vars\n\t          for (var p3 in obj[p1][p2]) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Sets selection start (left boundary of a selection)\n\t     * @param {Number} index Index to set selection start to\n\t     */\n\t    setSelectionStart: function(index) {\n\t      index = Math.max(index, 0);\n\t      this._updateAndFire('selectionStart', index);\n\t    },\n\t\n\t    /**\n\t     * Sets selection end (right boundary of a selection)\n\t     * @param {Number} index Index to set selection end to\n\t     */\n\t    setSelectionEnd: function(index) {\n\t      index = Math.min(index, this.text.length);\n\t      this._updateAndFire('selectionEnd', index);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property 'selectionStart' or 'selectionEnd'\n\t     * @param {Number} index new position of property\n\t     */\n\t    _updateAndFire: function(property, index) {\n\t      if (this[property] !== index) {\n\t        this._fireSelectionChanged();\n\t        this[property] = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Fires the even of selection changed\n\t     * @private\n\t     */\n\t    _fireSelectionChanged: function() {\n\t      this.fire('selection:changed');\n\t      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t    },\n\t\n\t    /**\n\t     * Gets style of a current selection/cursor (at the start position)\n\t     * @param {Number} [startIndex] Start index to get styles at\n\t     * @param {Number} [endIndex] End index to get styles at\n\t     * @return {Object} styles Style object at a specified (or current) index\n\t     */\n\t    getSelectionStyles: function(startIndex, endIndex) {\n\t\n\t      if (arguments.length === 2) {\n\t        var styles = [];\n\t        for (var i = startIndex; i < endIndex; i++) {\n\t          styles.push(this.getSelectionStyles(i));\n\t        }\n\t        return styles;\n\t      }\n\t\n\t      var loc = this.get2DCursorLocation(startIndex),\n\t          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\t\n\t      return style || {};\n\t    },\n\t\n\t    /**\n\t     * Sets style of a current selection\n\t     * @param {Object} [styles] Styles object\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    setSelectionStyles: function(styles) {\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        this._extendStyles(this.selectionStart, styles);\n\t      }\n\t      else {\n\t        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n\t          this._extendStyles(i, styles);\n\t        }\n\t      }\n\t      /* not included in _extendStyles to avoid clearing cache more than once */\n\t      this._forceClearCache = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _extendStyles: function(index, styles) {\n\t      var loc = this.get2DCursorLocation(index);\n\t\n\t      if (!this._getLineStyle(loc.lineIndex)) {\n\t        this._setLineStyle(loc.lineIndex, {});\n\t      }\n\t\n\t      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n\t        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n\t      }\n\t\n\t      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (!ctx) {\n\t        this.clearContextTop();\n\t      }\n\t      this.callSuper('_initDimensions', ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      this.clearContextTop();\n\t      this.callSuper('render', ctx, noTransform);\n\t      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n\t      // the correct position but not at every cursor animation.\n\t      this.cursorOffsetCache = { };\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.callSuper('_render', ctx);\n\t      this.ctx = ctx;\n\t    },\n\t\n\t    /**\n\t     * Prepare and clean the contextTop\n\t     */\n\t    clearContextTop: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      if (this.canvas && this.canvas.contextTop) {\n\t        var ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t        ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders cursor or selection (depending on what exists)\n\t     */\n\t    renderCursorOrSelection: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries, ctx;\n\t      if (this.canvas && this.canvas.contextTop) {\n\t        ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t      }\n\t      else {\n\t        ctx = this.ctx;\n\t        ctx.save();\n\t      }\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        boundaries = this._getCursorBoundaries(chars, 'cursor');\n\t        this.renderCursor(boundaries, ctx);\n\t      }\n\t      else {\n\t        boundaries = this._getCursorBoundaries(chars, 'selection');\n\t        this.renderSelection(chars, boundaries, ctx);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    _clearTextArea: function(ctx) {\n\t      // we add 4 pixel, to be sure to do not leave any pixel out\n\t      var width = this.width + 4, height = this.height + 4;\n\t      ctx.clearRect(-width / 2, -height / 2, width, height);\n\t    },\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t      var len = this._textLines.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (selectionStart <= this._textLines[i].length) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart\n\t          };\n\t        }\n\t        selectionStart -= this._textLines[i].length + 1;\n\t      }\n\t      return {\n\t        lineIndex: i - 1,\n\t        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns complete style of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Object} Character style\n\t     */\n\t    getCurrentCharStyle: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t\n\t      return {\n\t        fontSize: style && style.fontSize || this.fontSize,\n\t        fill: style && style.fill || this.fill,\n\t        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n\t        textDecoration: style && style.textDecoration || this.textDecoration,\n\t        fontFamily: style && style.fontFamily || this.fontFamily,\n\t        fontWeight: style && style.fontWeight || this.fontWeight,\n\t        fontStyle: style && style.fontStyle || this.fontStyle,\n\t        stroke: style && style.stroke || this.stroke,\n\t        strokeWidth: style && style.strokeWidth || this.strokeWidth\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns fontSize of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Number} Character font size\n\t     */\n\t    getCurrentCharFontSize: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * Returns color (fill) of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {String} Character color (fill)\n\t     */\n\t    getCurrentCharColor: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fill ? style.fill : this.cursorColor;\n\t    },\n\t\n\t    /**\n\t     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n\t     * @private\n\t     * @param {Array} chars Array of characters\n\t     * @param {String} typeOfBoundaries\n\t     */\n\t    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\t\n\t      // left/top are left/top of entire text box\n\t      // leftOffset/topOffset are offset from that left/top point of a text box\n\t\n\t      var left = Math.round(this._getLeftOffset()),\n\t          top = this._getTopOffset(),\n\t\n\t          offsets = this._getCursorBoundariesOffsets(\n\t                      chars, typeOfBoundaries);\n\t\n\t      return {\n\t        left: left,\n\t        top: top,\n\t        leftOffset: offsets.left + offsets.lineLeft,\n\t        topOffset: offsets.top\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n\t        return this.cursorOffsetCache;\n\t      }\n\t      var lineLeftOffset = 0,\n\t          lineIndex = 0,\n\t          charIndex = 0,\n\t          topOffset = 0,\n\t          leftOffset = 0,\n\t          boundaries;\n\t\n\t      for (var i = 0; i < this.selectionStart; i++) {\n\t        if (chars[i] === '\\n') {\n\t          leftOffset = 0;\n\t          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t          lineIndex++;\n\t          charIndex = 0;\n\t        }\n\t        else {\n\t          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n\t          charIndex++;\n\t        }\n\t\n\t        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n\t      }\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n\t          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n\t      }\n\t      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n\t        leftOffset -= this._getWidthOfCharSpacing();\n\t      }\n\t      boundaries = {\n\t        top: topOffset,\n\t        left: leftOffset > 0 ? leftOffset : 0,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t      this.cursorOffsetCache = boundaries;\n\t      return this.cursorOffsetCache;\n\t    },\n\t\n\t    /**\n\t     * Renders cursor\n\t     * @param {Object} boundaries\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderCursor: function(boundaries, ctx) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = boundaries.leftOffset,\n\t          multiplier = this.scaleX * this.canvas.getZoom(),\n\t          cursorWidth = this.cursorWidth / multiplier;\n\t\n\t      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n\t      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\t\n\t      ctx.fillRect(\n\t        boundaries.left + leftOffset - cursorWidth / 2,\n\t        boundaries.top + boundaries.topOffset,\n\t        cursorWidth,\n\t        charHeight);\n\t    },\n\t\n\t    /**\n\t     * Renders text selection\n\t     * @param {Array} chars Array of characters\n\t     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderSelection: function(chars, boundaries, ctx) {\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      var start = this.get2DCursorLocation(this.selectionStart),\n\t          end = this.get2DCursorLocation(this.selectionEnd),\n\t          startLine = start.lineIndex,\n\t          endLine = end.lineIndex;\n\t      for (var i = startLine; i <= endLine; i++) {\n\t        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n\t            lineHeight = this._getHeightOfLine(this.ctx, i),\n\t            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\t\n\t        if (i === startLine) {\n\t          for (var j = 0, len = line.length; j < len; j++) {\n\t            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n\t              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t            if (j < start.charIndex) {\n\t              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t          }\n\t          if (j === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        else if (i > startLine && i < endLine) {\n\t          boxWidth += this._getLineWidth(ctx, i) || 5;\n\t        }\n\t        else if (i === endLine) {\n\t          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n\t            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n\t          }\n\t          if (end.charIndex === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        realLineHeight = lineHeight;\n\t        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n\t          lineHeight /= this.lineHeight;\n\t        }\n\t        ctx.fillRect(\n\t          boundaries.left + lineOffset,\n\t          boundaries.top + boundaries.topOffset,\n\t          boxWidth > 0 ? boxWidth : 0,\n\t          lineHeight);\n\t\n\t        boundaries.topOffset += realLineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\t\n\t      if (this.isEmptyStyles()) {\n\t        return this._renderCharsFast(method, ctx, line, left, top);\n\t      }\n\t\n\t      charOffset = charOffset || 0;\n\t\n\t      // set proper line offset\n\t      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n\t          prevStyle,\n\t          thisStyle,\n\t          charsToRender = '';\n\t\n\t      ctx.save();\n\t      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n\t      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n\t        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n\t        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\t\n\t        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n\t          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n\t          charsToRender = '';\n\t          prevStyle = thisStyle;\n\t        }\n\t        charsToRender += line[i - charOffset];\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     */\n\t    _renderCharsFast: function(method, ctx, line, left, top) {\n\t\n\t      if (method === 'fillText' && this.fill) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} i\n\t     * @param {String} _char\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     * @param {Number} lineHeight Height of the line\n\t     */\n\t    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n\t      var charWidth, charHeight, shouldFill, shouldStroke,\n\t          decl = this._getStyleDeclaration(lineIndex, i),\n\t          offset, textDecoration, chars, additionalSpace, _charWidth;\n\t\n\t      if (decl) {\n\t        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n\t        shouldStroke = decl.stroke;\n\t        shouldFill = decl.fill;\n\t        textDecoration = decl.textDecoration;\n\t      }\n\t      else {\n\t        charHeight = this.fontSize;\n\t      }\n\t\n\t      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n\t      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\t\n\t      decl && ctx.save();\n\t\n\t      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n\t      textDecoration = textDecoration || this.textDecoration;\n\t\n\t      if (decl && decl.textBackgroundColor) {\n\t        this._removeShadow(ctx);\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = _char.split('');\n\t        charWidth = 0;\n\t        for (var j = 0, len = chars.length, jChar; j < len; j++) {\n\t          jChar = chars[j];\n\t          shouldFill && ctx.fillText(jChar, left + charWidth, top);\n\t          shouldStroke && ctx.strokeText(jChar, left + charWidth, top);\n\t          _charWidth = ctx.measureText(jChar).width + additionalSpace;\n\t          charWidth += _charWidth > 0 ? _charWidth : 0;\n\t        }\n\t      }\n\t      else {\n\t        shouldFill && ctx.fillText(_char, left, top);\n\t        shouldStroke && ctx.strokeText(_char, left, top);\n\t      }\n\t\n\t      if (textDecoration || textDecoration !== '') {\n\t        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n\t        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n\t      }\n\t\n\t      decl && ctx.restore();\n\t      ctx.translate(charWidth, 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} prevStyle\n\t     * @param {Object} thisStyle\n\t     */\n\t    _hasStyleChanged: function(prevStyle, thisStyle) {\n\t      return (prevStyle.fill !== thisStyle.fill ||\n\t              prevStyle.fontSize !== thisStyle.fontSize ||\n\t              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n\t              prevStyle.textDecoration !== thisStyle.textDecoration ||\n\t              prevStyle.fontFamily !== thisStyle.fontFamily ||\n\t              prevStyle.fontWeight !== thisStyle.fontWeight ||\n\t              prevStyle.fontStyle !== thisStyle.fontStyle ||\n\t              prevStyle.stroke !== thisStyle.stroke ||\n\t              prevStyle.strokeWidth !== thisStyle.strokeWidth\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\t\n\t      if (!textDecoration) {\n\t        return;\n\t      }\n\t\n\t      var decorationWeight = charHeight / 15,\n\t          positions = {\n\t            underline: top + charHeight / 10,\n\t            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n\t            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n\t          },\n\t          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\t\n\t      for (i = 0; i < decorations.length; i++) {\n\t        decoration = decorations[i];\n\t        if (textDecoration.indexOf(decoration) > -1) {\n\t          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n\t      // the adding 0.03 is just to align text with itext by overlap test\n\t      if (!this.isEmptyStyles()) {\n\t        top += this.fontSize * (this._fontSizeFraction + 0.03);\n\t      }\n\t      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (this.isEmptyStyles()) {\n\t        return this.callSuper('_renderTextDecoration', ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      this.callSuper('_renderTextLinesBackground', ctx);\n\t\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset,\n\t          leftOffset = this._getLeftOffset(),\n\t          topOffset = this._getTopOffset(),\n\t          colorCache = '',\n\t          line, _char, style, leftCache,\n\t          topCache, widthCache, heightCache;\n\t      ctx.save();\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        line = this._textLines[i];\n\t\n\t        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n\t          lineTopOffset += heightOfLine;\n\t          continue;\n\t        }\n\t\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t        leftCache = topCache = widthCache = heightCache = 0;\n\t        for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t          style = this._getStyleDeclaration(i, j) || {};\n\t\n\t          if (colorCache !== style.textBackgroundColor) {\n\t            if (heightCache && widthCache) {\n\t              ctx.fillStyle = colorCache;\n\t              ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n\t            }\n\t            leftCache = topCache = widthCache = heightCache = 0;\n\t            colorCache = style.textBackgroundColor || '';\n\t          }\n\t\n\t          if (!style.textBackgroundColor) {\n\t            colorCache = '';\n\t            continue;\n\t          }\n\t          _char = line[j];\n\t\n\t          if (colorCache === style.textBackgroundColor) {\n\t            colorCache = style.textBackgroundColor;\n\t            if (!leftCache) {\n\t              leftCache = leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j);\n\t            }\n\t            topCache = topOffset + lineTopOffset;\n\t            widthCache += this._getWidthOfChar(ctx, _char, i, j);\n\t            heightCache = heightOfLine / this.lineHeight;\n\t          }\n\t        }\n\t        // if a textBackgroundColor ends on the last character of a line\n\t        if (heightCache && widthCache) {\n\t          ctx.fillStyle = colorCache;\n\t          ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n\t          leftCache = topCache = widthCache = heightCache = 0;\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCacheProp: function(_char, styleDeclaration) {\n\t      return _char +\n\t             styleDeclaration.fontSize +\n\t             styleDeclaration.fontWeight +\n\t             styleDeclaration.fontStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} fontFamily name\n\t     * @return {Object} reference to cache\n\t     */\n\t    _getFontCache: function(fontFamily) {\n\t      if (!fabric.charWidthsCache[fontFamily]) {\n\t        fabric.charWidthsCache[fontFamily] = { };\n\t      }\n\t      return fabric.charWidthsCache[fontFamily];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} _char\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} [decl]\n\t     */\n\t    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n\t      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n\t          styleDeclaration = clone(charDecl),\n\t          width, cacheProp, charWidthsCache;\n\t\n\t      this._applyFontStyles(styleDeclaration);\n\t      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n\t      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      // short-circuit if no styles for this char\n\t      // global style from object is always applyed and handled by save and restore\n\t      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n\t        return charWidthsCache[cacheProp];\n\t      }\n\t\n\t      if (typeof styleDeclaration.shadow === 'string') {\n\t        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n\t      }\n\t\n\t      var fill = styleDeclaration.fill || this.fill;\n\t      ctx.fillStyle = fill.toLive\n\t        ? fill.toLive(ctx, this)\n\t        : fill;\n\t\n\t      if (styleDeclaration.stroke) {\n\t        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n\t          ? styleDeclaration.stroke.toLive(ctx, this)\n\t          : styleDeclaration.stroke;\n\t      }\n\t\n\t      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n\t      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\t\n\t      //if we want this._setShadow.call to work with styleDeclarion\n\t      //we have to add those references\n\t      if (styleDeclaration.shadow) {\n\t        styleDeclaration.scaleX = this.scaleX;\n\t        styleDeclaration.scaleY = this.scaleY;\n\t        styleDeclaration.canvas = this.canvas;\n\t        styleDeclaration.getObjectScaling = this.getObjectScaling;\n\t        this._setShadow.call(styleDeclaration, ctx);\n\t      }\n\t\n\t      if (!this.caching || !charWidthsCache[cacheProp]) {\n\t        width = ctx.measureText(_char).width;\n\t        this.caching && (charWidthsCache[cacheProp] = width);\n\t        return width;\n\t      }\n\t\n\t      return charWidthsCache[cacheProp];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} styleDeclaration\n\t     */\n\t    _applyFontStyles: function(styleDeclaration) {\n\t      if (!styleDeclaration.fontFamily) {\n\t        styleDeclaration.fontFamily = this.fontFamily;\n\t      }\n\t      if (!styleDeclaration.fontSize) {\n\t        styleDeclaration.fontSize = this.fontSize;\n\t      }\n\t      if (!styleDeclaration.fontWeight) {\n\t        styleDeclaration.fontWeight = this.fontWeight;\n\t      }\n\t      if (!styleDeclaration.fontStyle) {\n\t        styleDeclaration.fontStyle = this.fontStyle;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (returnCloneOrEmpty) {\n\t        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n\t          ? clone(this.styles[lineIndex][charIndex])\n\t          : { };\n\t      }\n\t\n\t      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      return this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      this.styles[lineIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      delete this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n\t      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n\t        return this._getWidthOfSpace(ctx, lineIndex);\n\t      }\n\t      ctx.save();\n\t      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n\t      if (this.charSpacing !== 0) {\n\t        width += this._getWidthOfCharSpacing();\n\t      }\n\t      ctx.restore();\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n\t      var width = 0, i, _char;\n\t      for (i = 0; i < charIndex; i++) {\n\t        _char = this._textLines[lineIndex][i];\n\t        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      this._isMeasuring = true;\n\t      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n\t      if (this.charSpacing !== 0) {\n\t        width -= this._getWidthOfCharSpacing();\n\t      }\n\t      this._isMeasuring = false;\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfSpace: function (ctx, lineIndex) {\n\t      if (this.__widthOfSpace[lineIndex]) {\n\t        return this.__widthOfSpace[lineIndex];\n\t      }\n\t      var line = this._textLines[lineIndex],\n\t          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n\t          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n\t      this.__widthOfSpace[lineIndex] = width;\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n\t      var width = 0;\n\t\n\t      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n\t        var _char = line[charIndex];\n\t\n\t        if (!_char.match(/\\s/)) {\n\t          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n\t        }\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfLine: function(ctx, lineIndex) {\n\t      if (this.__lineHeights[lineIndex]) {\n\t        return this.__lineHeights[lineIndex];\n\t      }\n\t\n\t      var line = this._textLines[lineIndex],\n\t          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\t\n\t      for (var i = 1, len = line.length; i < len; i++) {\n\t        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n\t        if (currentCharHeight > maxHeight) {\n\t          maxHeight = currentCharHeight;\n\t        }\n\t      }\n\t      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n\t      return this.__lineHeights[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getTextHeight: function(ctx) {\n\t      var lineHeight, height = 0;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        lineHeight = this._getHeightOfLine(ctx, i);\n\t        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n\t      }\n\t      return height;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        styles: clone(this.styles, true)\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.IText instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.IText\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.IText} instance of fabric.IText\n\t   */\n\t  fabric.IText.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('IText', object, callback, forceAsync, 'text');\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Initializes all the interactive behavior of IText\n\t     */\n\t    initBehavior: function() {\n\t      this.initAddedHandler();\n\t      this.initRemovedHandler();\n\t      this.initCursorSelectionHandlers();\n\t      this.initDoubleClickSimulation();\n\t      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n\t    },\n\t\n\t    onDeselect: function() {\n\t      this.isEditing && this.exitEditing();\n\t      this.selected = false;\n\t      this.callSuper('onDeselect');\n\t    },\n\t\n\t    /**\n\t     * Initializes \"added\" event handler\n\t     */\n\t    initAddedHandler: function() {\n\t      var _this = this;\n\t      this.on('added', function() {\n\t        var canvas = _this.canvas;\n\t        if (canvas) {\n\t          if (!canvas._hasITextHandlers) {\n\t            canvas._hasITextHandlers = true;\n\t            _this._initCanvasHandlers(canvas);\n\t          }\n\t          canvas._iTextInstances = canvas._iTextInstances || [];\n\t          canvas._iTextInstances.push(_this);\n\t        }\n\t      });\n\t    },\n\t\n\t    initRemovedHandler: function() {\n\t      var _this = this;\n\t      this.on('removed', function() {\n\t        var canvas = _this.canvas;\n\t        if (canvas) {\n\t          canvas._iTextInstances = canvas._iTextInstances || [];\n\t          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n\t          if (canvas._iTextInstances.length === 0) {\n\t            canvas._hasITextHandlers = false;\n\t            _this._removeCanvasHandlers(canvas);\n\t          }\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * register canvas event to manage exiting on other instances\n\t     * @private\n\t     */\n\t    _initCanvasHandlers: function(canvas) {\n\t      canvas._mouseUpITextHandler = (function() {\n\t        if (canvas._iTextInstances) {\n\t          canvas._iTextInstances.forEach(function(obj) {\n\t            obj.__isMousedown = false;\n\t          });\n\t        }\n\t      }).bind(this);\n\t      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n\t    },\n\t\n\t    /**\n\t     * remove canvas event to manage exiting on other instances\n\t     * @private\n\t     */\n\t    _removeCanvasHandlers: function(canvas) {\n\t      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _tick: function() {\n\t      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\t\n\t      var tickState;\n\t\n\t      tickState = {\n\t        isAborted: false,\n\t        abort: function() {\n\t          this.isAborted = true;\n\t        },\n\t      };\n\t\n\t      obj.animate('_currentCursorOpacity', targetOpacity, {\n\t        duration: duration,\n\t        onComplete: function() {\n\t          if (!tickState.isAborted) {\n\t            obj[completeMethod]();\n\t          }\n\t        },\n\t        onChange: function() {\n\t          // we do not want to animate a selection, only cursor\n\t          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n\t            obj.renderCursorOrSelection();\n\t          }\n\t        },\n\t        abort: function() {\n\t          return tickState.isAborted;\n\t        }\n\t      });\n\t      return tickState;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onTickComplete: function() {\n\t\n\t      var _this = this;\n\t\n\t      if (this._cursorTimeout1) {\n\t        clearTimeout(this._cursorTimeout1);\n\t      }\n\t      this._cursorTimeout1 = setTimeout(function() {\n\t        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n\t      }, 100);\n\t    },\n\t\n\t    /**\n\t     * Initializes delayed cursor\n\t     */\n\t    initDelayedCursor: function(restart) {\n\t      var _this = this,\n\t          delay = restart ? 0 : this.cursorDelay;\n\t\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this._cursorTimeout2 = setTimeout(function() {\n\t        _this._tick();\n\t      }, delay);\n\t    },\n\t\n\t    /**\n\t     * Aborts cursor animation and clears all timeouts\n\t     */\n\t    abortCursorAnimation: function() {\n\t      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n\t      this._currentTickState && this._currentTickState.abort();\n\t      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\t\n\t      clearTimeout(this._cursorTimeout1);\n\t      clearTimeout(this._cursorTimeout2);\n\t\n\t      this._currentCursorOpacity = 0;\n\t      // to clear just itext area we need to transform the context\n\t      // it may not be worth it\n\t      if (shouldClear) {\n\t        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * Selects entire text\n\t     */\n\t    selectAll: function() {\n\t      this.selectionStart = 0;\n\t      this.selectionEnd = this.text.length;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Returns selected text\n\t     * @return {String}\n\t     */\n\t    getSelectedText: function() {\n\t      return this.text.slice(this.selectionStart, this.selectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current word according to current selection index\n\t     * @param {Number} startFrom Surrent selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      // remove space before cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index--;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current word according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      // remove space after cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index++;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Returns number of newlines in selected text\n\t     * @return {Number} Number of newlines in selected text\n\t     */\n\t    getNumNewLinesInSelectedText: function() {\n\t      var selectedText = this.getSelectedText(),\n\t          numNewLines  = 0;\n\t\n\t      for (var i = 0, len = selectedText.length; i < len; i++) {\n\t        if (selectedText[i] === '\\n') {\n\t          numNewLines++;\n\t        }\n\t      }\n\t      return numNewLines;\n\t    },\n\t\n\t    /**\n\t     * Finds index corresponding to beginning or end of a word\n\t     * @param {Number} selectionStart Index of a character\n\t     * @param {Number} direction 1 or -1\n\t     * @return {Number} Index of the beginning or end of a word\n\t     */\n\t    searchWordBoundary: function(selectionStart, direction) {\n\t      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n\t          _char     = this.text.charAt(index),\n\t          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\t\n\t      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n\t        index += direction;\n\t        _char = this.text.charAt(index);\n\t      }\n\t      if (reNonWord.test(_char) && _char !== '\\n') {\n\t        index += direction === 1 ? 0 : 1;\n\t      }\n\t      return index;\n\t    },\n\t\n\t    /**\n\t     * Selects a word based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectWord: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n\t          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Selects a line based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectLine: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n\t          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Enters editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    enterEditing: function(e) {\n\t      if (this.isEditing || !this.editable) {\n\t        return;\n\t      }\n\t\n\t      if (this.canvas) {\n\t        this.exitEditingOnOthers(this.canvas);\n\t      }\n\t\n\t      this.isEditing = true;\n\t      this.selected = true;\n\t      this.initHiddenTextarea(e);\n\t      this.hiddenTextarea.focus();\n\t      this._updateTextarea();\n\t      this._saveEditingProps();\n\t      this._setEditingProps();\n\t      this._textBeforeEdit = this.text;\n\t\n\t      this._tick();\n\t      this.fire('editing:entered');\n\t      this._fireSelectionChanged();\n\t      if (!this.canvas) {\n\t        return this;\n\t      }\n\t      this.canvas.fire('text:editing:entered', { target: this });\n\t      this.initMouseMoveHandler();\n\t      this.canvas.renderAll();\n\t      return this;\n\t    },\n\t\n\t    exitEditingOnOthers: function(canvas) {\n\t      if (canvas._iTextInstances) {\n\t        canvas._iTextInstances.forEach(function(obj) {\n\t          obj.selected = false;\n\t          if (obj.isEditing) {\n\t            obj.exitEditing();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Initializes \"mousemove\" event handler\n\t     */\n\t    initMouseMoveHandler: function() {\n\t      this.canvas.on('mouse:move', this.mouseMoveHandler);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    mouseMoveHandler: function(options) {\n\t      if (!this.__isMousedown || !this.isEditing) {\n\t        return;\n\t      }\n\t\n\t      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n\t          currentStart = this.selectionStart,\n\t          currentEnd = this.selectionEnd;\n\t      if (\n\t        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n\t        &&\n\t        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n\t      ) {\n\t        return;\n\t      }\n\t      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n\t        this.selectionStart = this.__selectionStartOnMouseDown;\n\t        this.selectionEnd = newSelectionStart;\n\t      }\n\t      else {\n\t        this.selectionStart = newSelectionStart;\n\t        this.selectionEnd = this.__selectionStartOnMouseDown;\n\t      }\n\t      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n\t        this.restartCursorIfNeeded();\n\t        this._fireSelectionChanged();\n\t        this._updateTextarea();\n\t        this.renderCursorOrSelection();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setEditingProps: function() {\n\t      this.hoverCursor = 'text';\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n\t      }\n\t\n\t      this.borderColor = this.editingBorderColor;\n\t\n\t      this.hasControls = this.selectable = false;\n\t      this.lockMovementX = this.lockMovementY = true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateTextarea: function() {\n\t      if (!this.hiddenTextarea || this.inCompositionMode) {\n\t        return;\n\t      }\n\t      this.cursorOffsetCache = { };\n\t      this.hiddenTextarea.value = this.text;\n\t      this.hiddenTextarea.selectionStart = this.selectionStart;\n\t      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        var style = this._calcTextareaPosition();\n\t        this.hiddenTextarea.style.left = style.left;\n\t        this.hiddenTextarea.style.top = style.top;\n\t        this.hiddenTextarea.style.fontSize = style.fontSize;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Object} style contains style for hiddenTextarea\n\t     */\n\t    _calcTextareaPosition: function() {\n\t      if (!this.canvas) {\n\t        return { x: 1, y: 1 };\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = boundaries.leftOffset,\n\t          m = this.calcTransformMatrix(),\n\t          p = {\n\t            x: boundaries.left + leftOffset,\n\t            y: boundaries.top + boundaries.topOffset + charHeight\n\t          },\n\t          upperCanvas = this.canvas.upperCanvasEl,\n\t          maxWidth = upperCanvas.width - charHeight,\n\t          maxHeight = upperCanvas.height - charHeight;\n\t\n\t      p = fabric.util.transformPoint(p, m);\n\t      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\t\n\t      if (p.x < 0) {\n\t        p.x = 0;\n\t      }\n\t      if (p.x > maxWidth) {\n\t        p.x = maxWidth;\n\t      }\n\t      if (p.y < 0) {\n\t        p.y = 0;\n\t      }\n\t      if (p.y > maxHeight) {\n\t        p.y = maxHeight;\n\t      }\n\t\n\t      // add canvas offset on document\n\t      p.x += this.canvas._offset.left;\n\t      p.y += this.canvas._offset.top;\n\t\n\t      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _saveEditingProps: function() {\n\t      this._savedProps = {\n\t        hasControls: this.hasControls,\n\t        borderColor: this.borderColor,\n\t        lockMovementX: this.lockMovementX,\n\t        lockMovementY: this.lockMovementY,\n\t        hoverCursor: this.hoverCursor,\n\t        defaultCursor: this.canvas && this.canvas.defaultCursor,\n\t        moveCursor: this.canvas && this.canvas.moveCursor\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _restoreEditingProps: function() {\n\t      if (!this._savedProps) {\n\t        return;\n\t      }\n\t\n\t      this.hoverCursor = this._savedProps.overCursor;\n\t      this.hasControls = this._savedProps.hasControls;\n\t      this.borderColor = this._savedProps.borderColor;\n\t      this.lockMovementX = this._savedProps.lockMovementX;\n\t      this.lockMovementY = this._savedProps.lockMovementY;\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n\t        this.canvas.moveCursor = this._savedProps.moveCursor;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Exits from editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    exitEditing: function() {\n\t      var isTextChanged = (this._textBeforeEdit !== this.text);\n\t      this.selected = false;\n\t      this.isEditing = false;\n\t      this.selectable = true;\n\t\n\t      this.selectionEnd = this.selectionStart;\n\t\n\t      if (this.hiddenTextarea) {\n\t        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n\t        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n\t        this.hiddenTextarea = null;\n\t      }\n\t\n\t      this.abortCursorAnimation();\n\t      this._restoreEditingProps();\n\t      this._currentCursorOpacity = 0;\n\t\n\t      this.fire('editing:exited');\n\t      isTextChanged && this.fire('modified');\n\t      if (this.canvas) {\n\t        this.canvas.off('mouse:move', this.mouseMoveHandler);\n\t        this.canvas.fire('text:editing:exited', { target: this });\n\t        isTextChanged && this.canvas.fire('object:modified', { target: this });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this.styles) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[prop];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeCharsFromTo: function(start, end) {\n\t      while (end !== start) {\n\t        this._removeSingleCharAndStyle(start + 1);\n\t        end--;\n\t      }\n\t      this.selectionStart = start;\n\t      this.selectionEnd = start;\n\t    },\n\t\n\t    _removeSingleCharAndStyle: function(index) {\n\t      var isBeginningOfLine = this.text[index - 1] === '\\n',\n\t          indexStyle        = isBeginningOfLine ? index : index - 1;\n\t      this.removeStyleObject(isBeginningOfLine, indexStyle);\n\t      this.text = this.text.slice(0, index - 1) +\n\t        this.text.slice(index);\n\t\n\t      this._textLines = this._splitTextIntoLines();\n\t    },\n\t\n\t    /**\n\t     * Inserts characters where cursor is (replacing selection if one exists)\n\t     * @param {String} _chars Characters to insert\n\t     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n\t     */\n\t    insertChars: function(_chars, useCopiedStyle) {\n\t      var style;\n\t\n\t      if (this.selectionEnd - this.selectionStart > 1) {\n\t        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t      }\n\t      //short circuit for block paste\n\t      if (!useCopiedStyle && this.isEmptyStyles()) {\n\t        this.insertChar(_chars, false);\n\t        return;\n\t      }\n\t      for (var i = 0, len = _chars.length; i < len; i++) {\n\t        if (useCopiedStyle) {\n\t          style = fabric.util.object.clone(fabric.copiedTextStyle[i], true);\n\t        }\n\t        this.insertChar(_chars[i], i < len - 1, style);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts a character where cursor is\n\t     * @param {String} _char Characters to insert\n\t     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n\t     * @param {Object} styleObject Style to be inserted for the new char\n\t     */\n\t    insertChar: function(_char, skipUpdate, styleObject) {\n\t      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n\t      this.text = this.text.slice(0, this.selectionStart) +\n\t        _char + this.text.slice(this.selectionEnd);\n\t      this._textLines = this._splitTextIntoLines();\n\t      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n\t      this.selectionStart += _char.length;\n\t      this.selectionEnd = this.selectionStart;\n\t      if (skipUpdate) {\n\t        return;\n\t      }\n\t      this._updateTextarea();\n\t      this.setCoords();\n\t      this._fireSelectionChanged();\n\t      this.fire('changed');\n\t      this.restartCursorIfNeeded();\n\t      if (this.canvas) {\n\t        this.canvas.fire('text:changed', { target: this });\n\t        this.canvas.renderAll();\n\t      }\n\t    },\n\t\n\t    restartCursorIfNeeded: function() {\n\t      if (!this._currentTickState || this._currentTickState.isAborted\n\t        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n\t      ) {\n\t        this.initDelayedCursor();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t\n\t      this.shiftLineStyles(lineIndex, +1);\n\t\n\t      var currentCharStyle = {},\n\t          newLineStyles    = {};\n\t\n\t      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n\t        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n\t      }\n\t\n\t      // if there's nothing after cursor,\n\t      // we clone current char style onto the next (otherwise empty) line\n\t      if (isEndOfLine && currentCharStyle) {\n\t        newLineStyles[0] = clone(currentCharStyle);\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      // otherwise we clone styles of all chars\n\t      // after cursor onto the next line, from the beginning\n\t      else {\n\t        var somethingAdded = false;\n\t        for (var index in this.styles[lineIndex]) {\n\t          var numIndex = parseInt(index, 10);\n\t          if (numIndex >= charIndex) {\n\t            somethingAdded = true;\n\t            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n\t            // remove lines from the previous line since they're on a new line now\n\t            delete this.styles[lineIndex][index];\n\t          }\n\t        }\n\t        somethingAdded && (this.styles[lineIndex + 1] = newLineStyles);\n\t      }\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t\n\t      var currentLineStyles       = this.styles[lineIndex],\n\t          currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t      if (charIndex === 0 && !style) {\n\t        charIndex = 1;\n\t      }\n\t\n\t      // shift all char styles by 1 forward\n\t      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\t      for (var index in currentLineStylesCloned) {\n\t        var numericIndex = parseInt(index, 10);\n\t\n\t        if (numericIndex >= charIndex) {\n\t          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\t\n\t          // only delete the style if there was nothing moved there\n\t          if (!currentLineStylesCloned[numericIndex - 1]) {\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t      var newStyle = style || clone(currentLineStyles[charIndex - 1]);\n\t      newStyle && (this.styles[lineIndex][charIndex] = newStyle);\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object(s)\n\t     * @param {String} _chars Characters at the location where style is inserted\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     * @param {Object} [styleObject] Style to insert\n\t     */\n\t    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n\t      // removed shortcircuit over isEmptyStyles\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        this._setLineStyle(lineIndex, {});\n\t      }\n\t\n\t      if (_chars === '\\n') {\n\t        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n\t      }\n\t      else {\n\t        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward or downward\n\t      var clonedStyles = clone(this.styles);\n\t      for (var line in clonedStyles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine <= lineIndex) {\n\t          delete clonedStyles[numericLine];\n\t        }\n\t      }\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    },\n\t\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      return this._textLines[lIndex - 1];\n\t    },\n\t\n\t    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\t\n\t      if (isBeginningOfLine) {\n\t        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n\t            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\t\n\t        if (!this.styles[lineIndex - 1]) {\n\t          this.styles[lineIndex - 1] = {};\n\t        }\n\t        for (charIndex in this.styles[lineIndex]) {\n\t          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n\t            = this.styles[lineIndex][charIndex];\n\t        }\n\t        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n\t      }\n\t      else {\n\t        var currentLineStyles = this.styles[lineIndex];\n\t\n\t        if (currentLineStyles) {\n\t          delete currentLineStyles[charIndex];\n\t        }\n\t        var currentLineStylesCloned = clone(currentLineStyles);\n\t        // shift all styles by 1 backwards\n\t        for (var i in currentLineStylesCloned) {\n\t          var numericIndex = parseInt(i, 10);\n\t          if (numericIndex >= charIndex && numericIndex !== 0) {\n\t            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new line\n\t     */\n\t    insertNewline: function() {\n\t      this.insertChars('\\n');\n\t    },\n\t\n\t    /**\n\t     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n\t     * mimic the key - mouse navigation when shift is pressed.\n\t     */\n\t    setSelectionStartEndWithShift: function(start, end, newSelection) {\n\t      if (newSelection <= start) {\n\t        if (end === start) {\n\t          this._selectionDirection = 'left';\n\t        }\n\t        else if (this._selectionDirection === 'right') {\n\t          this._selectionDirection = 'left';\n\t          this.selectionEnd = start;\n\t        }\n\t        this.selectionStart = newSelection;\n\t      }\n\t      else if (newSelection > start && newSelection < end) {\n\t        if (this._selectionDirection === 'right') {\n\t          this.selectionEnd = newSelection;\n\t        }\n\t        else {\n\t          this.selectionStart = newSelection;\n\t        }\n\t      }\n\t      else {\n\t        // newSelection is > selection start and end\n\t        if (end === start) {\n\t          this._selectionDirection = 'right';\n\t        }\n\t        else if (this._selectionDirection === 'left') {\n\t          this._selectionDirection = 'right';\n\t          this.selectionStart = end;\n\t        }\n\t        this.selectionEnd = newSelection;\n\t      }\n\t    },\n\t\n\t    setSelectionInBoundaries: function() {\n\t      var length = this.text.length;\n\t      if (this.selectionStart > length) {\n\t        this.selectionStart = length;\n\t      }\n\t      else if (this.selectionStart < 0) {\n\t        this.selectionStart = 0;\n\t      }\n\t      if (this.selectionEnd > length) {\n\t        this.selectionEnd = length;\n\t      }\n\t      else if (this.selectionEnd < 0) {\n\t        this.selectionEnd = 0;\n\t      }\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t  /**\n\t   * Initializes \"dbclick\" event handler\n\t   */\n\t  initDoubleClickSimulation: function() {\n\t\n\t    // for double click\n\t    this.__lastClickTime = +new Date();\n\t\n\t    // for triple click\n\t    this.__lastLastClickTime = +new Date();\n\t\n\t    this.__lastPointer = { };\n\t\n\t    this.on('mousedown', this.onMouseDown.bind(this));\n\t  },\n\t\n\t  onMouseDown: function(options) {\n\t\n\t    this.__newClickTime = +new Date();\n\t    var newPointer = this.canvas.getPointer(options.e);\n\t\n\t    if (this.isTripleClick(newPointer, options.e)) {\n\t      this.fire('tripleclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t    else if (this.isDoubleClick(newPointer)) {\n\t      this.fire('dblclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t\n\t    this.__lastLastClickTime = this.__lastClickTime;\n\t    this.__lastClickTime = this.__newClickTime;\n\t    this.__lastPointer = newPointer;\n\t    this.__lastIsEditing = this.isEditing;\n\t    this.__lastSelected = this.selected;\n\t  },\n\t\n\t  isDoubleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n\t  },\n\t\n\t  isTripleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _stopEvent: function(e) {\n\t    e.preventDefault && e.preventDefault();\n\t    e.stopPropagation && e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Initializes event handlers related to cursor or selection\n\t   */\n\t  initCursorSelectionHandlers: function() {\n\t    this.initMousedownHandler();\n\t    this.initMouseupHandler();\n\t    this.initClicks();\n\t  },\n\t\n\t  /**\n\t   * Initializes double and triple click event handlers\n\t   */\n\t  initClicks: function() {\n\t    this.on('dblclick', function(options) {\n\t      this.selectWord(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t    this.on('tripleclick', function(options) {\n\t      this.selectLine(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mousedown\" event handler\n\t   */\n\t  initMousedownHandler: function() {\n\t    this.on('mousedown', function(options) {\n\t      if (!this.editable || (options.e.button && options.e.button !== 1)) {\n\t        return;\n\t      }\n\t      var pointer = this.canvas.getPointer(options.e);\n\t      this.__mousedownX = pointer.x;\n\t      this.__mousedownY = pointer.y;\n\t      this.__isMousedown = true;\n\t\n\t      if (this.selected) {\n\t        this.setCursorByClick(options.e);\n\t      }\n\t\n\t      if (this.isEditing) {\n\t        this.__selectionStartOnMouseDown = this.selectionStart;\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.abortCursorAnimation();\n\t        }\n\t        this.renderCursorOrSelection();\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _isObjectMoved: function(e) {\n\t    var pointer = this.canvas.getPointer(e);\n\t\n\t    return this.__mousedownX !== pointer.x ||\n\t           this.__mousedownY !== pointer.y;\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mouseup\" event handler\n\t   */\n\t  initMouseupHandler: function() {\n\t    this.on('mouseup', function(options) {\n\t      this.__isMousedown = false;\n\t      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n\t        return;\n\t      }\n\t\n\t      if (this.__lastSelected && !this.__corner) {\n\t        this.enterEditing(options.e);\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.initDelayedCursor(true);\n\t        }\n\t        else {\n\t          this.renderCursorOrSelection();\n\t        }\n\t      }\n\t      this.selected = true;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Changes cursor location in a text depending on passed pointer (x/y) object\n\t   * @param {Event} e Event object\n\t   */\n\t  setCursorByClick: function(e) {\n\t    var newSelection = this.getSelectionStartFromPointer(e),\n\t        start = this.selectionStart, end = this.selectionEnd;\n\t    if (e.shiftKey) {\n\t      this.setSelectionStartEndWithShift(start, end, newSelection);\n\t    }\n\t    else {\n\t      this.selectionStart = newSelection;\n\t      this.selectionEnd = newSelection;\n\t    }\n\t    if (this.isEditing) {\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns index of a character corresponding to where an object was clicked\n\t   * @param {Event} e Event object\n\t   * @return {Number} Index of a character\n\t   */\n\t  getSelectionStartFromPointer: function(e) {\n\t    var mouseOffset = this.getLocalPointer(e),\n\t        prevWidth = 0,\n\t        width = 0,\n\t        height = 0,\n\t        charIndex = 0,\n\t        newSelectionStart,\n\t        line;\n\t\n\t    for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t      line = this._textLines[i];\n\t      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\t\n\t      var widthOfLine = this._getLineWidth(this.ctx, i),\n\t          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\t\n\t      width = lineLeftOffset * this.scaleX;\n\t\n\t      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t\n\t        prevWidth = width;\n\t\n\t        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n\t                 this.scaleX;\n\t\n\t        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n\t          charIndex++;\n\t          continue;\n\t        }\n\t\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i, jlen);\n\t      }\n\t\n\t      if (mouseOffset.y < height) {\n\t        //this happens just on end of lines.\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n\t      }\n\t    }\n\t\n\t    // clicked somewhere after all chars, so set at the end\n\t    if (typeof newSelectionStart === 'undefined') {\n\t      return this.text.length;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\t\n\t    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n\t        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n\t        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n\t        newSelectionStart = index + offset;\n\t\n\t    // if object is horizontally flipped, mirror cursor location from the end\n\t    if (this.flipX) {\n\t      newSelectionStart = jlen - newSelectionStart;\n\t    }\n\t\n\t    if (newSelectionStart > this.text.length) {\n\t      newSelectionStart = this.text.length;\n\t    }\n\t\n\t    return newSelectionStart;\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t  /**\n\t   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n\t   */\n\t  initHiddenTextarea: function() {\n\t    this.hiddenTextarea = fabric.document.createElement('textarea');\n\t    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n\t    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n\t    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n\t    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n\t    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n\t    this.hiddenTextarea.setAttribute('wrap', 'off');\n\t    var style = this._calcTextareaPosition();\n\t    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n\t    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n\t    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n\t    fabric.document.body.appendChild(this.hiddenTextarea);\n\t\n\t    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\t\n\t    if (!this._clickHandlerInitialized && this.canvas) {\n\t      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n\t      this._clickHandlerInitialized = true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * For functionalities on keyDown\n\t   * Map a special key to a function of the instance/prototype\n\t   * If you need different behaviour for ESC or TAB or arrows, you have to change\n\t   * this map setting the name of a function that you build on the fabric.Itext or\n\t   * your prototype.\n\t   * the map change will affect all Instances unless you need for only some text Instances\n\t   * in that case you have to clone this object and assign your Instance.\n\t   * this.keysMap = fabric.util.object.clone(this.keysMap);\n\t   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n\t   */\n\t  keysMap: {\n\t    8:  'removeChars',\n\t    9:  'exitEditing',\n\t    27: 'exitEditing',\n\t    13: 'insertNewline',\n\t    33: 'moveCursorUp',\n\t    34: 'moveCursorDown',\n\t    35: 'moveCursorRight',\n\t    36: 'moveCursorLeft',\n\t    37: 'moveCursorLeft',\n\t    38: 'moveCursorUp',\n\t    39: 'moveCursorRight',\n\t    40: 'moveCursorDown',\n\t    46: 'forwardDelete'\n\t  },\n\t\n\t  /**\n\t   * For functionalities on keyUp + ctrl || cmd\n\t   */\n\t  ctrlKeysMapUp: {\n\t    67: 'copy',\n\t    88: 'cut'\n\t  },\n\t\n\t  /**\n\t   * For functionalities on keyDown + ctrl || cmd\n\t   */\n\t  ctrlKeysMapDown: {\n\t    65: 'selectAll'\n\t  },\n\t\n\t  onClick: function() {\n\t    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n\t    this.hiddenTextarea && this.hiddenTextarea.focus();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyDown: function(e) {\n\t    if (!this.isEditing) {\n\t      return;\n\t    }\n\t    if (e.keyCode in this.keysMap) {\n\t      this[this.keysMap[e.keyCode]](e);\n\t    }\n\t    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n\t      this[this.ctrlKeysMapDown[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    if (e.keyCode >= 33 && e.keyCode <= 40) {\n\t      // if i press an arrow key just update selection\n\t      this.clearContextTop();\n\t      this.renderCursorOrSelection();\n\t    }\n\t    else {\n\t      this.canvas && this.canvas.renderAll();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n\t   * if a copy/cut event fired, keyup is dismissed\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyUp: function(e) {\n\t    if (!this.isEditing || this._copyDone) {\n\t      this._copyDone = false;\n\t      return;\n\t    }\n\t    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n\t      this[this.ctrlKeysMapUp[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles onInput event\n\t   * @param {Event} e Event object\n\t   */\n\t  onInput: function(e) {\n\t    if (!this.isEditing || this.inCompositionMode) {\n\t      return;\n\t    }\n\t    var offset = this.selectionStart || 0,\n\t        offsetEnd = this.selectionEnd || 0,\n\t        textLength = this.text.length,\n\t        newTextLength = this.hiddenTextarea.value.length,\n\t        diff, charsToInsert, start;\n\t    if (newTextLength > textLength) {\n\t      //we added some character\n\t      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n\t      diff = newTextLength - textLength;\n\t      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n\t    }\n\t    else {\n\t      //we selected a portion of text and then input something else.\n\t      //Internet explorer does not trigger this else\n\t      diff = newTextLength - textLength + offsetEnd - offset;\n\t      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n\t    }\n\t    this.insertChars(charsToInsert);\n\t    e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Composition start\n\t   */\n\t  onCompositionStart: function() {\n\t    this.inCompositionMode = true;\n\t    this.prevCompositionLength = 0;\n\t    this.compositionStart = this.selectionStart;\n\t  },\n\t\n\t  /**\n\t   * Composition end\n\t   */\n\t  onCompositionEnd: function() {\n\t    this.inCompositionMode = false;\n\t  },\n\t\n\t  /**\n\t   * Composition update\n\t   */\n\t  onCompositionUpdate: function(e) {\n\t    var data = e.data;\n\t    this.selectionStart = this.compositionStart;\n\t    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n\t      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n\t    this.insertChars(data, false);\n\t    this.prevCompositionLength = data.length;\n\t  },\n\t\n\t  /**\n\t   * Forward delete\n\t   */\n\t  forwardDelete: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      if (this.selectionStart === this.text.length) {\n\t        return;\n\t      }\n\t      this.moveCursorRight(e);\n\t    }\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * Copies selected text\n\t   * @param {Event} e Event object\n\t   */\n\t  copy: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      //do not cut-copy if no selection\n\t      return;\n\t    }\n\t    var selectedText = this.getSelectedText(),\n\t        clipboardData = this._getClipboardData(e);\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      clipboardData.setData('text', selectedText);\n\t    }\n\t\n\t    fabric.copiedText = selectedText;\n\t    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd);\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this._copyDone = true;\n\t  },\n\t\n\t  /**\n\t   * Pastes text\n\t   * @param {Event} e Event object\n\t   */\n\t  paste: function(e) {\n\t    var copiedText = null,\n\t        clipboardData = this._getClipboardData(e),\n\t        useCopiedStyle = true;\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n\t      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n\t        useCopiedStyle = false;\n\t      }\n\t    }\n\t    else {\n\t      copiedText = fabric.copiedText;\n\t    }\n\t\n\t    if (copiedText) {\n\t      this.insertChars(copiedText, useCopiedStyle);\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t  },\n\t\n\t  /**\n\t   * Cuts text\n\t   * @param {Event} e Event object\n\t   */\n\t  cut: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      return;\n\t    }\n\t\n\t    this.copy(e);\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   * @return {Object} Clipboard data object\n\t   */\n\t  _getClipboardData: function(e) {\n\t    return (e && e.clipboardData) || fabric.window.clipboardData;\n\t  },\n\t\n\t  /**\n\t   * Finds the width in pixels before the cursor on the same line\n\t   * @private\n\t   * @param {Number} lineIndex\n\t   * @param {Number} charIndex\n\t   * @return {Number} widthBeforeCursor width before cursor\n\t   */\n\t  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n\t    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n\t        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\t\n\t    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n\t      _char = textBeforeCursor[i];\n\t      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t    return widthBeforeCursor;\n\t  },\n\t\n\t  /**\n\t   * Gets start offset of a selection\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getDownCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    // if on last line, down cursor goes to end of line\n\t    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\t      // move to the end of a text\n\t      return this.text.length - selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n\t        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\t\n\t    return textAfterCursor.length + indexOnOtherLine + 2;\n\t  },\n\t\n\t  /**\n\t   * private\n\t   * Helps finding if the offset should be counted from Start or End\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  _getSelectionForOffset: function(e, isRight) {\n\t    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n\t      return this.selectionEnd;\n\t    }\n\t    else {\n\t      return this.selectionStart;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getUpCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n\t      // if on first line, up cursor goes to start of line\n\t      return -selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n\t        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n\t    // return a negative offset\n\t    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n\t  },\n\t\n\t  /**\n\t   * find for a given width it founds the matching character.\n\t   * @private\n\t   */\n\t  _getIndexOnLine: function(lineIndex, width) {\n\t\n\t    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        textOnLine = this._textLines[lineIndex],\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n\t        widthOfCharsOnLine = lineLeftOffset,\n\t        indexOnLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnLine > width) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - width),\n\t            offsetFromRightEdge = Math.abs(rightEdge - width);\n\t\n\t        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnLine = textOnLine.length - 1;\n\t    }\n\t\n\t    return indexOnLine;\n\t  },\n\t\n\t\n\t  /**\n\t   * Moves cursor down\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorDown: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Down', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorUp: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Up', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up or down, fires the events\n\t   * @param {String} direction 'Up' or 'Down'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorUpOrDown: function(direction, e) {\n\t    // getUpCursorOffset\n\t    // getDownCursorOffset\n\t    var action = 'get' + direction + 'CursorOffset',\n\t        offset = this[action](e, this._selectionDirection === 'right');\n\t    if (e.shiftKey) {\n\t      this.moveCursorWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorWithoutShift(offset);\n\t    }\n\t    if (offset !== 0) {\n\t      this.setSelectionInBoundaries();\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor with shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithShift: function(offset) {\n\t    var newSelection = this._selectionDirection === 'left'\n\t    ? this.selectionStart + offset\n\t    : this.selectionEnd + offset;\n\t    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up without shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithoutShift: function(offset) {\n\t    if (offset < 0) {\n\t      this.selectionStart += offset;\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionEnd += offset;\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorLeft: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Left', e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @return {Boolean} true if a change happened\n\t   */\n\t  _move: function(e, prop, direction) {\n\t    var newValue;\n\t    if (e.altKey) {\n\t      newValue = this['findWordBoundary' + direction](this[prop]);\n\t    }\n\t    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n\t      newValue = this['findLineBoundary' + direction](this[prop]);\n\t    }\n\t    else {\n\t      this[prop] += direction === 'Left' ? -1 : 1;\n\t      return true;\n\t    }\n\t    if (typeof newValue !== undefined && this[prop] !== newValue) {\n\t      this[prop] = newValue;\n\t      return true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveLeft: function(e, prop) {\n\t    return this._move(e, prop, 'Left');\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveRight: function(e, prop) {\n\t    return this._move(e, prop, 'Right');\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left without keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithoutShift: function(e) {\n\t    var change = true;\n\t    this._selectionDirection = 'left';\n\t\n\t    // only move cursor when there is no selection,\n\t    // otherwise we discard it, and leave cursor on same place\n\t    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n\t      change = this._moveLeft(e, 'selectionStart');\n\t\n\t    }\n\t    this.selectionEnd = this.selectionStart;\n\t    return change;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithShift: function(e) {\n\t    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveLeft(e, 'selectionEnd');\n\t    }\n\t    else if (this.selectionStart !== 0){\n\t      this._selectionDirection = 'left';\n\t      return this._moveLeft(e, 'selectionStart');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRight: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Right', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right or Left, fires event\n\t   * @param {String} direction 'Left', 'Right'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorLeftOrRight: function(direction, e) {\n\t    var actionName = 'moveCursor' + direction + 'With';\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      actionName += 'Shift';\n\t    }\n\t    else {\n\t      actionName += 'outShift';\n\t    }\n\t    if (this[actionName](e)) {\n\t      this.abortCursorAnimation();\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorRightWithShift: function(e) {\n\t    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveRight(e, 'selectionStart');\n\t    }\n\t    else if (this.selectionEnd !== this.text.length) {\n\t      this._selectionDirection = 'right';\n\t      return this._moveRight(e, 'selectionEnd');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right without keeping selection\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRightWithoutShift: function(e) {\n\t    var changed = true;\n\t    this._selectionDirection = 'right';\n\t\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      changed = this._moveRight(e, 'selectionStart');\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return changed;\n\t  },\n\t\n\t  /**\n\t   * Removes characters selected by selection\n\t   * @param {Event} e Event object\n\t   */\n\t  removeChars: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._removeCharsNearCursor(e);\n\t    }\n\t    else {\n\t      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t    }\n\t\n\t    this.set('dirty', true);\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._removeExtraneousStyles();\n\t\n\t    this.canvas && this.canvas.renderAll();\n\t\n\t    this.setCoords();\n\t    this.fire('changed');\n\t    this.canvas && this.canvas.fire('text:changed', { target: this });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   */\n\t  _removeCharsNearCursor: function(e) {\n\t    if (this.selectionStart === 0) {\n\t      return;\n\t    }\n\t    if (e.metaKey) {\n\t      // remove all till the start of current line\n\t      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftLineBoundary);\n\t    }\n\t    else if (e.altKey) {\n\t      // remove all till the start of current word\n\t      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftWordBoundary);\n\t    }\n\t    else {\n\t      this._removeSingleCharAndStyle(this.selectionStart);\n\t      this.setSelectionStart(this.selectionStart - 1);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t  var toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        fabric.Text.prototype._setSVGTextLineText.call(this,\n\t          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n\t      }\n\t      else {\n\t        this._setSVGTextLineChars(\n\t          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\t\n\t      var chars = this._textLines[lineIndex],\n\t          charOffset = 0,\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n\t          lineOffset = this._getSVGLineTopOffset(lineIndex),\n\t          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t      for (var i = 0, len = chars.length; i < len; i++) {\n\t        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\t\n\t        textSpans.push(\n\t          this._createTextCharSpan(\n\t            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\t\n\t        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\t\n\t        if (styleDecl.textBackgroundColor) {\n\t          textBgRects.push(\n\t            this._createTextCharBg(\n\t              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n\t        }\n\t\n\t        charOffset += charWidth;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLineTopOffset: function(lineIndex) {\n\t      var lineTopOffset = 0, lastHeight = 0;\n\t      for (var j = 0; j < lineIndex; j++) {\n\t        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n\t      }\n\t      lastHeight = this._getHeightOfLine(this.ctx, j);\n\t      return {\n\t        lineTop: lineTopOffset,\n\t        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n\t      return [\n\t        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n\t        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n\t        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n\t        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n\t        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n'\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\t\n\t      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n\t        visible: true,\n\t        fill: this.fill,\n\t        stroke: this.stroke,\n\t        type: 'text',\n\t        getSvgFilter: fabric.Object.prototype.getSvgFilter\n\t      }, styleDecl));\n\t\n\t      return [\n\t        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n\t        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n\t          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n\t          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n\t          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n\t          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n\t        'style=\"', fillStyles, '\">',\n\t        fabric.util.string.escapeXml(_char),\n\t        '</tspan>\\n'\n\t      ].join('');\n\t    },\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = {});\n\t\n\t  /**\n\t   * Textbox class, based on IText, allows the user to resize the text rectangle\n\t   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n\t   * user can only change width. Height is adjusted automatically based on the\n\t   * wrapping of lines.\n\t   * @class fabric.Textbox\n\t   * @extends fabric.IText\n\t   * @mixes fabric.Observable\n\t   * @return {fabric.Textbox} thisArg\n\t   * @see {@link fabric.Textbox#initialize} for constructor definition\n\t   */\n\t  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'textbox',\n\t\n\t    /**\n\t     * Minimum width of textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minWidth: 20,\n\t\n\t    /**\n\t     * Minimum calculated width of a textbox, in pixels.\n\t     * fixed to 2 so that an empty textbox cannot go to 0\n\t     * and is still selectable without text.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    dynamicMinWidth: 2,\n\t\n\t    /**\n\t     * Cached array of text wrapping.\n\t     * @type Array\n\t     */\n\t    __cachedLines: null,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingY: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingFlip: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     * Textbox needs this on false\n\t     */\n\t    noScaleCache: false,\n\t\n\t    /**\n\t     * Constructor. Some scaling related property values are forced. Visibility\n\t     * of controls is also fixed; only the rotation and width controls are\n\t     * made available.\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Textbox} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t\n\t      this.callSuper('initialize', text, options);\n\t      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n\t      // add width to this list of props that effect line wrapping.\n\t      this._dimensionAffectingProps.push('width');\n\t    },\n\t\n\t    /**\n\t     * Unlike superclass's version of this function, Textbox does not update\n\t     * its width.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @private\n\t     * @override\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t        this.clearContextTop();\n\t      }\n\t\n\t      // clear dynamicMinWidth as it will be different after we re-wrap line\n\t      this.dynamicMinWidth = 0;\n\t\n\t      // wrap lines\n\t      this._textLines = this._splitTextIntoLines(ctx);\n\t      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\t      if (this.dynamicMinWidth > this.width) {\n\t        this._set('width', this.dynamicMinWidth);\n\t      }\n\t\n\t      // clear cache and re-calculate height\n\t      this._clearCache();\n\t      this.height = this._getTextHeight(ctx);\n\t      this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Generate an object that translates the style object so that it is\n\t     * broken up by visual lines (new lines and automatic wrapping).\n\t     * The original text styles object is broken up by actual lines (new lines only),\n\t     * which is only sufficient for Text / IText\n\t     * @private\n\t     */\n\t    _generateStyleMap: function() {\n\t      var realLineCount     = 0,\n\t          realLineCharCount = 0,\n\t          charCount         = 0,\n\t          map               = {};\n\t\n\t      for (var i = 0; i < this._textLines.length; i++) {\n\t        if (this.text[charCount] === '\\n' && i > 0) {\n\t          realLineCharCount = 0;\n\t          charCount++;\n\t          realLineCount++;\n\t        }\n\t        else if (this.text[charCount] === ' ' && i > 0) {\n\t          // this case deals with space's that are removed from end of lines when wrapping\n\t          realLineCharCount++;\n\t          charCount++;\n\t        }\n\t\n\t        map[i] = { line: realLineCount, offset: realLineCharCount };\n\t\n\t        charCount += this._textLines[i].length;\n\t        realLineCharCount += this._textLines[i].length;\n\t      }\n\t\n\t      return map;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (this._styleMap) {\n\t        var map = this._styleMap[lineIndex];\n\t        if (!map) {\n\t          return returnCloneOrEmpty ? { } : null;\n\t        }\n\t        lineIndex = map.line;\n\t        charIndex = map.offset + charIndex;\n\t      }\n\t      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      return this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      this.styles[map.line] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      delete this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * Wraps text using the 'width' property of Textbox. First this function\n\t     * splits text on newlines, so we preserve newlines entered by the user.\n\t     * Then it wraps each line using the width of the Textbox by calling\n\t     * _wrapLine().\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text that is split into lines\n\t     * @returns {Array} Array of lines\n\t     */\n\t    _wrapText: function(ctx, text) {\n\t      var lines = text.split(this._reNewline), wrapped = [], i;\n\t\n\t      for (i = 0; i < lines.length; i++) {\n\t        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n\t      }\n\t\n\t      return wrapped;\n\t    },\n\t\n\t    /**\n\t     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {String} text\n\t     * @param {number} lineIndex\n\t     * @param {number} charOffset\n\t     * @returns {number}\n\t     * @private\n\t     */\n\t    _measureText: function(ctx, text, lineIndex, charOffset) {\n\t      var width = 0;\n\t      charOffset = charOffset || 0;\n\t      for (var i = 0, len = text.length; i < len; i++) {\n\t        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * Wraps a line of text using the width of the Textbox and a context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text to split into lines\n\t     * @param {Number} lineIndex\n\t     * @returns {Array} Array of line(s) into which the given text is wrapped\n\t     * to.\n\t     */\n\t    _wrapLine: function(ctx, text, lineIndex) {\n\t      var lineWidth        = 0,\n\t          lines            = [],\n\t          line             = '',\n\t          words            = text.split(' '),\n\t          word             = '',\n\t          offset           = 0,\n\t          infix            = ' ',\n\t          wordWidth        = 0,\n\t          infixWidth       = 0,\n\t          largestWordWidth = 0,\n\t          lineJustStarted = true,\n\t          additionalSpace = this._getWidthOfCharSpacing();\n\t\n\t      for (var i = 0; i < words.length; i++) {\n\t        word = words[i];\n\t        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\t\n\t        offset += word.length;\n\t\n\t        lineWidth += infixWidth + wordWidth - additionalSpace;\n\t\n\t        if (lineWidth >= this.width && !lineJustStarted) {\n\t          lines.push(line);\n\t          line = '';\n\t          lineWidth = wordWidth;\n\t          lineJustStarted = true;\n\t        }\n\t        else {\n\t          lineWidth += additionalSpace;\n\t        }\n\t\n\t        if (!lineJustStarted) {\n\t          line += infix;\n\t        }\n\t        line += word;\n\t\n\t        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n\t        offset++;\n\t        lineJustStarted = false;\n\t        // keep track of largest word\n\t        if (wordWidth > largestWordWidth) {\n\t          largestWordWidth = wordWidth;\n\t        }\n\t      }\n\t\n\t      i && lines.push(line);\n\t\n\t      if (largestWordWidth > this.dynamicMinWidth) {\n\t        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n\t      }\n\t\n\t      return lines;\n\t    },\n\t    /**\n\t     * Gets lines of text to render in the Textbox. This function calculates\n\t     * text wrapping on the fly everytime it is called.\n\t     * @returns {Array} Array of lines in the Textbox.\n\t     * @override\n\t     */\n\t    _splitTextIntoLines: function(ctx) {\n\t      ctx = ctx || this.ctx;\n\t      var originalAlign = this.textAlign;\n\t      this._styleMap = null;\n\t      ctx.save();\n\t      this._setTextStyles(ctx);\n\t      this.textAlign = 'left';\n\t      var lines = this._wrapText(ctx, this.text);\n\t      this.textAlign = originalAlign;\n\t      ctx.restore();\n\t      this._textLines = lines;\n\t      this._styleMap = this._generateStyleMap();\n\t      return lines;\n\t    },\n\t\n\t    /**\n\t     * When part of a group, we don't want the Textbox's scale to increase if\n\t     * the group's increases. That's why we reduce the scale of the Textbox by\n\t     * the amount that the group's increases. This is to maintain the effective\n\t     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n\t     * the same font-size value would result in different actual size depending\n\t     * on the value of the scale.\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    setOnGroup: function(key, value) {\n\t      if (key === 'scaleX') {\n\t        this.set('scaleX', Math.abs(1 / value));\n\t        this.set('width', (this.get('width') * value) /\n\t          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n\t        this.__oldScaleX = value;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n\t     * Overrides the superclass function to take into account text wrapping.\n\t     *\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t\n\t      var numLines = this._textLines.length,\n\t          removed  = 0;\n\t\n\t      for (var i = 0; i < numLines; i++) {\n\t        var line    = this._textLines[i],\n\t            lineLen = line.length;\n\t\n\t        if (selectionStart <= removed + lineLen) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart - removed\n\t          };\n\t        }\n\t\n\t        removed += lineLen;\n\t\n\t        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n\t          removed++;\n\t        }\n\t      }\n\t\n\t      return {\n\t        lineIndex: numLines - 1,\n\t        charIndex: this._textLines[numLines - 1].length\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Overrides superclass function and uses text wrapping data to get cursor\n\t     * boundary offsets instead of the array of chars.\n\t     * @param {Array} chars Unused\n\t     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n\t     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      var topOffset      = 0,\n\t          leftOffset     = 0,\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\t\n\t      for (var i = 0; i < cursorLocation.charIndex; i++) {\n\t        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n\t      }\n\t\n\t      for (i = 0; i < cursorLocation.lineIndex; i++) {\n\t        topOffset += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n\t          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n\t          * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    getMinWidth: function() {\n\t      return Math.max(this.minWidth, this.dynamicMinWidth);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.Textbox instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Textbox\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Textbox} instance of fabric.Textbox\n\t   */\n\t  fabric.Textbox.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Textbox', object, callback, forceAsync, 'text');\n\t  };\n\t\n\t  /**\n\t   * Returns the default controls visibility required for Textboxes.\n\t   * @returns {Object}\n\t   */\n\t  fabric.Textbox.getTextboxControlVisibility = function() {\n\t    return {\n\t      tl: false,\n\t      tr: false,\n\t      br: false,\n\t      bl: false,\n\t      ml: true,\n\t      mt: false,\n\t      mr: true,\n\t      mb: false,\n\t      mtr: true\n\t    };\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n\t   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n\t   */\n\t  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\t\n\t  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n\t                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t\n\t    var t = transform.target;\n\t    if (t instanceof fabric.Textbox) {\n\t      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n\t      if (w >= t.getMinWidth()) {\n\t        t.set('width', w);\n\t        return true;\n\t      }\n\t    }\n\t    else {\n\t      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n\t        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets controls of this group to the Textbox's special configuration if\n\t   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n\t   * it gets initialized to default value at runtime.\n\t   */\n\t  fabric.Group.prototype._refreshControlsVisibility = function() {\n\t    if (typeof fabric.Textbox === 'undefined') {\n\t      return;\n\t    }\n\t    for (var i = this._objects.length; i--;) {\n\t      if (this._objects[i] instanceof fabric.Textbox) {\n\t        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t        return;\n\t      }\n\t    }\n\t  };\n\t\n\t  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this._styleMap) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[this._styleMap[prop].line];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down. This function is slightly different than the one in\n\t     * itext_behaviour as it takes into account the styleMap.\n\t     *\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var map = this._styleMap[lineIndex];\n\t      // adjust line index\n\t      lineIndex = map.line;\n\t      fabric.IText.prototype.shiftLineStyles.call(this, lineIndex, offset);\n\t    },\n\t\n\t    /**\n\t     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n\t     *\n\t     * @param {Number} lIndex\n\t     * @returns {String}\n\t     * @private\n\t     */\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      var textOnPreviousLine = this._textLines[lIndex - 1];\n\t\n\t      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n\t        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\t\n\t        lIndex--;\n\t      }\n\t\n\t      return textOnPreviousLine;\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          map            = this._styleMap[cursorLocation.lineIndex],\n\t          lineIndex      = map.line,\n\t          charIndex      = map.offset + cursorLocation.charIndex;\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n\t  /**\n\t   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n\t   *\n\t   * @param {Number} mouseOffset\n\t   * @param {Number} prevWidth\n\t   * @param {Number} width\n\t   * @param {Number} index\n\t   * @param {Number} jlen\n\t   * @returns {Number}\n\t   */\n\t  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n\t    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\t\n\t    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n\t    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n\t    var tmp     = 0,\n\t        removed = 0;\n\t\n\t    // account for removed characters\n\t    for (var i = 0; i < this._textLines.length; i++) {\n\t      tmp += this._textLines[i].length;\n\t\n\t      if (tmp + removed >= index) {\n\t        break;\n\t      }\n\t\n\t      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n\t        removed++;\n\t      }\n\t    }\n\t\n\t    return index - i + removed;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t    return;\n\t  }\n\t\n\t  var DOMParser = __webpack_require__(66).DOMParser,\n\t      URL = __webpack_require__(24),\n\t      HTTP = __webpack_require__(20),\n\t      HTTPS = __webpack_require__(43),\n\t\n\t      Canvas = __webpack_require__(14),\n\t      Image = __webpack_require__(14).Image;\n\t\n\t  /** @private */\n\t  function request(url, encoding, callback) {\n\t    var oURL = URL.parse(url);\n\t\n\t    // detect if http or https is used\n\t    if ( !oURL.port ) {\n\t      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n\t    }\n\t\n\t    // assign request handler based on protocol\n\t    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n\t        req = reqHandler.request({\n\t          hostname: oURL.hostname,\n\t          port: oURL.port,\n\t          path: oURL.path,\n\t          method: 'GET'\n\t        }, function(response) {\n\t          var body = '';\n\t          if (encoding) {\n\t            response.setEncoding(encoding);\n\t          }\n\t          response.on('end', function () {\n\t            callback(body);\n\t          });\n\t          response.on('data', function (chunk) {\n\t            if (response.statusCode === 200) {\n\t              body += chunk;\n\t            }\n\t          });\n\t        });\n\t\n\t    req.on('error', function(err) {\n\t      if (err.errno === process.ECONNREFUSED) {\n\t        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n\t      }\n\t      else {\n\t        fabric.log(err.message);\n\t      }\n\t      callback(null);\n\t    });\n\t\n\t    req.end();\n\t  }\n\t\n\t  /** @private */\n\t  function requestFs(path, callback) {\n\t    var fs = __webpack_require__(64);\n\t    fs.readFile(path, function (err, data) {\n\t      if (err) {\n\t        fabric.log(err);\n\t        throw err;\n\t      }\n\t      else {\n\t        callback(data);\n\t      }\n\t    });\n\t  }\n\t\n\t  fabric.util.loadImage = function(url, callback, context) {\n\t    function createImageAndCallBack(data) {\n\t      if (data) {\n\t        img.src = new Buffer(data, 'binary');\n\t        // preserving original url, which seems to be lost in node-canvas\n\t        img._src = url;\n\t        callback && callback.call(context, img);\n\t      }\n\t      else {\n\t        img = null;\n\t        callback && callback.call(context, null, true);\n\t      }\n\t    }\n\t    var img = new Image();\n\t    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n\t      img.src = img._src = url;\n\t      callback && callback.call(context, img);\n\t    }\n\t    else if (url && url.indexOf('http') !== 0) {\n\t      requestFs(url, createImageAndCallBack);\n\t    }\n\t    else if (url) {\n\t      request(url, 'binary', createImageAndCallBack);\n\t    }\n\t    else {\n\t      callback && callback.call(context, url);\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromURL = function(url, callback, reviver) {\n\t    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n\t    if (url.indexOf('http') !== 0) {\n\t      requestFs(url, function(body) {\n\t        fabric.loadSVGFromString(body.toString(), callback, reviver);\n\t      });\n\t    }\n\t    else {\n\t      request(url, '', function(body) {\n\t        fabric.loadSVGFromString(body, callback, reviver);\n\t      });\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromString = function(string, callback, reviver) {\n\t    var doc = new DOMParser().parseFromString(string);\n\t    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n\t      callback && callback(results, options);\n\t    }, reviver);\n\t  };\n\t\n\t  fabric.util.getScript = function(url, callback) {\n\t    request(url, '', function(body) {\n\t      // eslint-disable-next-line no-eval\n\t      eval(body);\n\t      callback && callback();\n\t    });\n\t  };\n\t\n\t  // fabric.util.createCanvasElement = function(_, width, height) {\n\t  //   return new Canvas(width, height);\n\t  // }\n\t\n\t  /**\n\t   * Only available when running fabric on node.js\n\t   * @param {Number} width Canvas width\n\t   * @param {Number} height Canvas height\n\t   * @param {Object} [options] Options to pass to FabricCanvas.\n\t   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n\t   * @return {Object} wrapped canvas instance\n\t   */\n\t  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n\t    nodeCanvasOptions = nodeCanvasOptions || options;\n\t\n\t    var canvasEl = fabric.document.createElement('canvas'),\n\t        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n\t        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\t\n\t    // jsdom doesn't create style on canvas element, so here be temp. workaround\n\t    canvasEl.style = { };\n\t\n\t    canvasEl.width = nodeCanvas.width;\n\t    canvasEl.height = nodeCanvas.height;\n\t    options = options || { };\n\t    options.nodeCanvas = nodeCanvas;\n\t    options.nodeCacheCanvas = nodeCacheCanvas;\n\t    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n\t        fabricCanvas = new FabricCanvas(canvasEl, options);\n\t    fabricCanvas.nodeCanvas = nodeCanvas;\n\t    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n\t    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n\t    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n\t    fabricCanvas.Font = Canvas.Font;\n\t    return fabricCanvas;\n\t  };\n\t\n\t  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n\t  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n\t    el = el || fabric.document.createElement('canvas');\n\t    this.nodeCanvas = new Canvas(el.width, el.height);\n\t    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n\t    originaInitStatic.call(this, el, options);\n\t    this.contextContainer = this.nodeCanvas.getContext('2d');\n\t    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n\t    this.Font = Canvas.Font;\n\t  };\n\t\n\t  /** @ignore */\n\t  fabric.StaticCanvas.prototype.createPNGStream = function() {\n\t    return this.nodeCanvas.createPNGStream();\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n\t    return this.nodeCanvas.createJPEGStream(opts);\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n\t    if (!this._isRetinaScaling()) {\n\t      return;\n\t    }\n\t\n\t    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n\t    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n\t    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n\t  }\n\t\n\t  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n\t    origSetBackstoreDimension.call(this, prop, value);\n\t    this.nodeCanvas[prop] = value;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  }\n\t\n\t})();\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer, __webpack_require__(7)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(46)();\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(13);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tvar _deepDiff = __webpack_require__(19);\n\t\n\tvar _deepDiff2 = _interopRequireDefault(_deepDiff);\n\t\n\tvar _observable = __webpack_require__(17);\n\t\n\tvar _observable2 = _interopRequireDefault(_observable);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar FabricObject = function (_React$Component) {\n\t\t_inherits(FabricObject, _React$Component);\n\t\n\t\tfunction FabricObject(props, context) {\n\t\t\t_classCallCheck(this, FabricObject);\n\t\n\t\t\t// Observable\n\t\t\tvar _this = _possibleConstructorReturn(this, (FabricObject.__proto__ || Object.getPrototypeOf(FabricObject)).call(this, props, context));\n\t\n\t\t\t(0, _observable2.default)(_this);\n\t\n\t\t\t//Object\n\t\t\t_this.adjustPosition = function (to) {\n\t\t\t\treturn _this.state.object && _this.state.object.adjustPosition(to);\n\t\t\t};\n\t\t\t_this.animate = function (property, value, opts) {\n\t\t\t\treturn _this.state.object && _this.state.object.animate(property, value, opts);\n\t\t\t};\n\t\t\t_this.bringForward = function (intersecting) {\n\t\t\t\treturn _this.state.object && _this.state.object.bringForward(intersecting);\n\t\t\t};\n\t\t\t_this.bringToFront = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.bringToFront();\n\t\t\t};\n\t\t\t_this.center = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.center();\n\t\t\t};\n\t\t\t_this.centerH = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.centerH();\n\t\t\t};\n\t\t\t_this.centerV = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.centerV();\n\t\t\t};\n\t\t\t_this.clone = function (callback, propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.clone(callback, propertiesToInclude);\n\t\t\t};\n\t\t\t_this.cloneAsImage = function (callback) {\n\t\t\t\treturn _this.state.object && _this.state.object.cloneAsImage(callback);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t\t};\n\t\t\t_this.containsPoint = function (point) {\n\t\t\t\treturn _this.state.object && _this.state.object.containsPoint(point);\n\t\t\t};\n\t\t\t_this.drawBorders = function (ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.drawBorders(ctx);\n\t\t\t};\n\t\t\t_this.drawControls = function (ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.drawControls(ctx);\n\t\t\t};\n\t\t\t_this.fxStraighten = function (callbacks) {\n\t\t\t\treturn _this.state.object && _this.state.object.fxStraighten(callbacks);\n\t\t\t};\n\t\t\t_this.get = function (property) {\n\t\t\t\treturn _this.state.object && _this.state.object.get(property);\n\t\t\t};\n\t\t\t_this.getAngle = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getAngle();\n\t\t\t};\n\t\t\t_this.getBoundingRect = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getBoundingRect();\n\t\t\t};\n\t\t\t_this.getBoundingRectHeight = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getBoundingRectHeight();\n\t\t\t};\n\t\t\t_this.getBoundingRectWidth = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getBoundingRectWidth();\n\t\t\t};\n\t\t\t_this.getCenterPoint = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getCenterPoint();\n\t\t\t};\n\t\t\t_this.getClipTo = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getClipTo();\n\t\t\t};\n\t\t\t_this.getFill = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getFill();\n\t\t\t};\n\t\t\t_this.getFlipX = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getFlipX();\n\t\t\t};\n\t\t\t_this.getFlipY = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getFlipY();\n\t\t\t};\n\t\t\t_this.getLeft = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getLeft();\n\t\t\t};\n\t\t\t_this.getLocalPointer = function (e, pointer) {\n\t\t\t\treturn _this.state.object && _this.state.object.getLocalPointer(e, pointer);\n\t\t\t};\n\t\t\t_this.getOpacity = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getOpacity();\n\t\t\t};\n\t\t\t_this.getOriginX = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getOriginX();\n\t\t\t};\n\t\t\t_this.getOriginY = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getOriginY();\n\t\t\t};\n\t\t\t_this.getPointByOrigin = function (originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.getPointByOrigin(originX, originY);\n\t\t\t};\n\t\n\t\t\t_this.getScaleX = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getScaleX();\n\t\t\t};\n\t\t\t_this.getScaleY = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getScaleY();\n\t\t\t};\n\t\t\t_this.getShadow = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getShadow();\n\t\t\t};\n\t\t\t_this.getStrokeWidth = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getStrokeWidth();\n\t\t\t};\n\t\t\t_this.getSvgStyles = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSvgStyles();\n\t\t\t};\n\t\t\t_this.getSvgTransform = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSvgTransform();\n\t\t\t};\n\t\t\t_this.getSvgTransformMatrix = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSvgTransformMatrix();\n\t\t\t};\n\t\t\t_this.getTop = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getTop();\n\t\t\t};\n\t\t\t_this.getTransformMatrix = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getTransformMatrix();\n\t\t\t};\n\t\t\t_this.getViewportTransform = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getViewportTransform();\n\t\t\t};\n\t\t\t_this.getVisible = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getVisible();\n\t\t\t};\n\t\t\t_this.getWidth = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getWidth();\n\t\t\t};\n\t\t\t_this.hasStateChanged = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.hasStateChanged();\n\t\t\t};\n\t\t\t_this.intersectsWithObject = function (other) {\n\t\t\t\treturn _this.state.object && _this.state.object.intersectsWithObject(other);\n\t\t\t};\n\t\t\t_this.intersectsWithRect = function (pointTL, pointBR) {\n\t\t\t\treturn _this.state.object && _this.state.object.intersectsWithRect(pointTL, pointBR);\n\t\t\t};\n\t\t\t_this.isContainedWithinObject = function (other) {\n\t\t\t\treturn _this.state.object && _this.state.object.isContainedWithinObject(other);\n\t\t\t};\n\t\t\t_this.isContainedWithinRect = function (pointTL, pointBR) {\n\t\t\t\treturn _this.state.object && _this.state.object.isContainedWithinRect(pointTL, pointBR);\n\t\t\t};\n\t\t\t_this.isControlVisible = function (controlName) {\n\t\t\t\treturn _this.state.object && _this.state.object.isControlVisible(controlName);\n\t\t\t};\n\t\t\t_this.isType = function (type) {\n\t\t\t\treturn _this.state.object && _this.state.object.isType(type);\n\t\t\t};\n\t\t\t_this.moveTo = function (index) {\n\t\t\t\treturn _this.state.object && _this.state.object.moveTo(index);\n\t\t\t};\n\t\t\t_this.remove = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.remove();\n\t\t\t};\n\t\t\t_this.renderf = function (ctx, noTransform) {\n\t\t\t\treturn _this.state.object && _this.state.object.render(ctx, noTransform);\n\t\t\t};\n\t\t\t_this.saveState = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.saveState(options);\n\t\t\t};\n\t\t\t_this.scale = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.scale(value);\n\t\t\t};\n\t\t\t_this.scaleToHeight = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.scaleToHeight(value);\n\t\t\t};\n\t\t\t_this.scaleToWidth = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.scaleToWidth(value);\n\t\t\t};\n\t\t\t_this.sendBackwards = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.sendBackwards();\n\t\t\t};\n\t\t\t_this.sendToBack = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.sendToBack();\n\t\t\t};\n\t\t\t_this.set = function (key, value) {\n\t\t\t\treturn _this.state.object && _this.state.object.set(key, value);\n\t\t\t};\n\t\t\t_this.setAngle = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setAngle(value);\n\t\t\t};\n\t\t\t_this.setClipTo = function (clipTo) {\n\t\t\t\treturn _this.state.object && _this.state.object.setClipTo(clipTo);\n\t\t\t};\n\t\t\t_this.setColor = function (color) {\n\t\t\t\treturn _this.state.object && _this.state.object.setColor(color);\n\t\t\t};\n\t\t\t_this.setControlsVisibility = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setControlsVisibility(options);\n\t\t\t};\n\t\t\t_this.setControlVisible = function (controlName, visible) {\n\t\t\t\treturn _this.state.object && _this.state.object.setControlVisible(controlName, visible);\n\t\t\t};\n\t\t\t_this.setCoords = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setCoords(value);\n\t\t\t};\n\t\t\t_this.setFill = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setFill(value);\n\t\t\t};\n\t\t\t_this.setFlipX = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setFlipX(value);\n\t\t\t};\n\t\t\t_this.setFlipY = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setFlipY(value);\n\t\t\t};\n\t\t\t_this.setGradient = function (property, options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setGradient(property, options);\n\t\t\t};\n\t\t\t_this.setLeft = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setLeft(value);\n\t\t\t};\n\t\t\t_this.setOpacity = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setOpacity(value);\n\t\t\t};\n\t\t\t_this.setOptions = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setOptions(options);\n\t\t\t};\n\t\t\t_this.setOriginX = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setOriginX(value);\n\t\t\t};\n\t\t\t_this.setOriginY = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setOriginY(value);\n\t\t\t};\n\t\t\t_this.setPatternFill = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setPatternFill(options);\n\t\t\t};\n\t\t\t_this.setPositionByOrigin = function (pos, originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.setPositionByOrigin(pos, originX, originY);\n\t\t\t};\n\t\t\t_this.setScaleX = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setScaleX(value);\n\t\t\t};\n\t\t\t_this.setScaleY = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setScaleY(value);\n\t\t\t};\n\t\t\t_this.setShadow = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setShadow(options);\n\t\t\t};\n\t\t\t_this.setSourcePath = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSourcePath(value);\n\t\t\t};\n\t\t\t_this.setStroke = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setStroke(value);\n\t\t\t};\n\t\t\t_this.setStrokeWidth = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setStrokeWidth(value);\n\t\t\t};\n\t\t\t_this.setTop = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setTop(value);\n\t\t\t};\n\t\t\t_this.setTransformMatrix = function (transformMatrix) {\n\t\t\t\treturn _this.state.object && _this.state.object.setTransformMatrix(transformMatrix);\n\t\t\t};\n\t\t\t_this.setupState = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.setupState(value);\n\t\t\t};\n\t\t\t_this.setVisible = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setVisible(value);\n\t\t\t};\n\t\t\t_this.straighten = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.straighten();\n\t\t\t};\n\t\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toDatalessObject();\n\t\t\t};\n\t\t\t_this.toDataURL = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toDataURL(options);\n\t\t\t};\n\t\t\t_this.toggle = function (property) {\n\t\t\t\treturn _this.state.object && _this.state.object.toggle(property);\n\t\t\t};\n\t\t\t_this.toJSON = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toJSON(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toLocalPoint = function (point, originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.toLocalPoint(point, originX, originY);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t\t};\n\t\t\t_this.transform = function (ctx, fromLeft) {\n\t\t\t\treturn _this.state.object && _this.state.object.transform(ctx, fromLeft);\n\t\t\t};\n\t\t\t_this.translateToCenterPoint = function (point, originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.translateToCenterPoint(point, originX, originY);\n\t\t\t};\n\t\t\t_this.translateToOriginPoint = function (point, originX, originY) {\n\t\t\t\treturn _this.state.object && _this.state.object.translateToOriginPoint(point, originX, originY);\n\t\t\t};\n\t\n\t\t\t// React\n\t\t\t_this.getObject = function () {\n\t\t\t\treturn _this.state.object;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(FabricObject, [{\n\t\t\tkey: 'componentWillReceiveProps',\n\t\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tvar difference = (0, _deepDiff2.default)(this.props, nextProps);\n\t\t\t\tif (difference) {\n\t\t\t\t\tdifference.forEach(function (comparsion) {\n\t\t\t\t\t\t_this2.set(comparsion.path[0], comparsion.rhs);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tthis.eventChanged(nextProps);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(object, cb) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tthis.setState({ object: object }, function () {\n\t\t\t\t\tcb && cb(object);\n\t\t\t\t\t// canvas.add(object);\n\t\t\t\t\t_this3.initEvent();\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'initEvent',\n\t\t\tvalue: function initEvent() {\n\t\t\t\tvar object = this.state.object;\n\t\n\t\t\t\tif (!(object instanceof _fabric.fabric.Object)) return;\n\t\n\t\t\t\tif (this.props.onAdded instanceof Function) {\n\t\t\t\t\tobject.on('added', this.props.onAdded);\n\t\t\t\t}\n\t\t\t\tif (this.props.onRemoved instanceof Function) {\n\t\t\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t\t\t}\n\t\t\t\tif (this.props.onSelected instanceof Function) {\n\t\t\t\t\tobject.on('selected', this.props.onSelected);\n\t\t\t\t}\n\t\t\t\tif (this.props.onModified instanceof Function) {\n\t\t\t\t\tobject.on('modified', this.props.onModified);\n\t\t\t\t}\n\t\t\t\tif (this.props.onRotating instanceof Function) {\n\t\t\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t\t\t}\n\t\t\t\tif (this.props.onScaling instanceof Function) {\n\t\t\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t\t\t}\n\t\t\t\tif (this.props.onMoving instanceof Function) {\n\t\t\t\t\tobject.on('moving', this.props.onMoving);\n\t\t\t\t}\n\t\t\t\tif (this.props.onMousedown instanceof Function) {\n\t\t\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t\t\t}\n\t\t\t\tif (this.props.onMouseup instanceof Function) {\n\t\t\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'eventChanged',\n\t\t\tvalue: function eventChanged(nextProps) {\n\t\t\t\tvar object = this.state.object;\n\t\n\t\t\t\tif (!(object instanceof _fabric.fabric.Object)) return;\n\t\n\t\t\t\tif (this.props.onAdded && !nextProps.onAdded) {\n\t\t\t\t\tobject.off('added');\n\t\t\t\t} else if (nextProps.onAdded instanceof Function) {\n\t\t\t\t\tobject.on('added', this.props.onAdded);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onRemoved && !nextProps.onRemoved) {\n\t\t\t\t\tobject.off('removed');\n\t\t\t\t} else if (nextProps.onRemoved instanceof Function) {\n\t\t\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onSelected && !nextProps.onSelected) {\n\t\t\t\t\tobject.off('selected');\n\t\t\t\t} else if (nextProps.onSelected instanceof Function) {\n\t\t\t\t\tobject.on('selected', this.props.onSelected);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onModified && !nextProps.onModified) {\n\t\t\t\t\tobject.off('modified');\n\t\t\t\t} else if (nextProps.onModified instanceof Function) {\n\t\t\t\t\tobject.on('modified', this.props.onModified);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onRotating && !nextProps.onRotating) {\n\t\t\t\t\tobject.off('rotating');\n\t\t\t\t} else if (nextProps.onRotating instanceof Function) {\n\t\t\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onScaling && !nextProps.onScaling) {\n\t\t\t\t\tobject.off('scaling');\n\t\t\t\t} else if (nextProps.onScaling instanceof Function) {\n\t\t\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onMoving && !nextProps.onMoving) {\n\t\t\t\t\tobject.off('moving');\n\t\t\t\t} else if (nextProps.onMoving instanceof Function) {\n\t\t\t\t\tobject.on('moving', this.props.onMoving);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onMousedown && !nextProps.onMousedown) {\n\t\t\t\t\tobject.off('mousedown');\n\t\t\t\t} else if (nextProps.onMousedown instanceof Function) {\n\t\t\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onMouseup && !nextProps.onMouseup) {\n\t\t\t\t\tobject.off('mouseup');\n\t\t\t\t} else if (nextProps.onMouseup instanceof Function) {\n\t\t\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'render',\n\t\t\tvalue: function render() {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn FabricObject;\n\t}(_react2.default.Component);\n\t\n\texports.default = FabricObject;\n\t\n\t\n\tFabricObject.__uid = _fabric.fabric.Object.__uid;\n\tFabricObject.NUM_FRACTION_DIGITS = _fabric.fabric.Object.NUM_FRACTION_DIGITS;\n\tFabricObject.rotate = _fabric.fabric.Object.rotate;\n\t\n\tFabricObject.propTypes = {\n\t\tangle: _propTypes2.default.number,\n\t\tbackgroundColor: _propTypes2.default.string,\n\t\tborderColor: _propTypes2.default.string,\n\t\tborderOpacityWhenMoving: _propTypes2.default.number,\n\t\tborderScaleFactor: _propTypes2.default.number,\n\t\tcenteredRotation: _propTypes2.default.bool,\n\t\tcenteredScaling: _propTypes2.default.bool,\n\t\tclipTo: _propTypes2.default.func,\n\t\tcornerColor: _propTypes2.default.string,\n\t\tcornerSize: _propTypes2.default.number,\n\t\tevented: _propTypes2.default.bool,\n\t\tfill: _propTypes2.default.string,\n\t\tfillRule: _propTypes2.default.string,\n\t\tflipX: _propTypes2.default.bool,\n\t\tflipY: _propTypes2.default.bool,\n\t\tglobalCompositeOperation: _propTypes2.default.string,\n\t\thasBorders: _propTypes2.default.bool,\n\t\thasControls: _propTypes2.default.bool,\n\t\thasRotatingPoint: _propTypes2.default.bool,\n\t\theight: _propTypes2.default.number,\n\t\thoverCursor: _propTypes2.default.string,\n\t\tincludeDefaultValues: _propTypes2.default.bool,\n\t\tleft: _propTypes2.default.number,\n\t\tlockMovementX: _propTypes2.default.bool,\n\t\tlockMovementY: _propTypes2.default.bool,\n\t\tlockRotation: _propTypes2.default.bool,\n\t\tlockScalingFlip: _propTypes2.default.bool,\n\t\tlockScalingX: _propTypes2.default.bool,\n\t\tlockScalingY: _propTypes2.default.bool,\n\t\tlockUniScaling: _propTypes2.default.bool,\n\t\tminScaleLimit: _propTypes2.default.number,\n\t\toCoords: _propTypes2.default.object,\n\t\topacity: _propTypes2.default.number,\n\t\toriginX: _propTypes2.default.oneOf(['left', 'right', 'center']),\n\t\toriginY: _propTypes2.default.oneOf(['top', 'bottom', 'center']),\n\t\tpadding: _propTypes2.default.number,\n\t\tperPixelTargetFind: _propTypes2.default.bool,\n\t\trotatingPointOffset: _propTypes2.default.number,\n\t\tscaleX: _propTypes2.default.number,\n\t\tscaleY: _propTypes2.default.number,\n\t\tselectable: _propTypes2.default.bool,\n\t\tshadow: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_fabric.fabric.Shadow), _propTypes2.default.string]),\n\t\tstateProperties: _propTypes2.default.array,\n\t\tstroke: _propTypes2.default.string,\n\t\tstrokeDashArray: _propTypes2.default.array,\n\t\tstrokeLineCap: _propTypes2.default.oneOf(['butt', 'round', 'square']),\n\t\tstrokeLineJoin: _propTypes2.default.oneOf(['bevil', 'round', 'miter']),\n\t\tstrokeMiterLimit: _propTypes2.default.number,\n\t\tstrokeWidth: _propTypes2.default.number,\n\t\ttop: _propTypes2.default.number,\n\t\ttransformMatrix: _propTypes2.default.array,\n\t\ttransparentCorners: _propTypes2.default.bool,\n\t\ttype: _propTypes2.default.string,\n\t\tvisible: _propTypes2.default.bool,\n\t\twidth: _propTypes2.default.number\n\t};\n\t\n\tFabricObject.defaultProps = {\n\t\ttype: 'object',\n\t\toriginX: 'left',\n\t\toriginY: 'top',\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t\tscaleX: 1,\n\t\tscaleY: 1,\n\t\tflipX: false,\n\t\tflipY: false,\n\t\topacity: 1,\n\t\tangle: 0,\n\t\tskewX: 0,\n\t\tskewY: 0,\n\t\tcornerSize: 12,\n\t\ttransparentCorners: true,\n\t\thoverCursor: null,\n\t\tpadding: 0,\n\t\tborderColor: 'rgba(102,153,255,0.75)',\n\t\tcornerColor: 'rgba(102,153,255,0.5)',\n\t\tcenteredScaling: false,\n\t\tcenteredRotation: true,\n\t\tfill: 'rgb(0,0,0)',\n\t\tfillRule: 'nonzero',\n\t\tglobalCompositeOperation: 'source-over',\n\t\tbackgroundColor: '',\n\t\tstroke: null,\n\t\tstrokeWidth: 1,\n\t\tstrokeDashArray: null,\n\t\tstrokeLineCap: 'butt',\n\t\tstrokeLineJoin: 'miter',\n\t\tstrokeMiterLimit: 10,\n\t\tshadow: null,\n\t\tborderOpacityWhenMoving: 0.4,\n\t\tborderScaleFactor: 1,\n\t\ttransformMatrix: null,\n\t\tminScaleLimit: 0.01,\n\t\tselectable: true,\n\t\tevented: true,\n\t\tvisible: true,\n\t\thasControls: true,\n\t\thasBorders: true,\n\t\thasRotatingPoint: true,\n\t\trotatingPointOffset: 40,\n\t\tperPixelTargetFind: false,\n\t\tincludeDefaultValues: true,\n\t\n\t\tclipTo: null,\n\t\n\t\tlockMovementX: false,\n\t\tlockMovementY: false,\n\t\tlockRotation: false,\n\t\tlockScalingX: false,\n\t\tlockScalingY: false,\n\t\tlockUniScaling: false,\n\t\tlockSkewingX: false,\n\t\tlockSkewingY: false,\n\t\tlockScalingFlip: false,\n\t\n\t\t// oCoords: null,\n\t\n\t\tstateProperties: ('top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' + 'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' + 'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' + 'alignX alignY meetOrSlice skewX skewY').split(' ')\n\t\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\t\n\tmodule.exports = Duplex;\n\t\n\t/*<replacement>*/\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) keys.push(key);\n\t  return keys;\n\t}\n\t/*</replacement>*/\n\t\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tvar Readable = __webpack_require__(22);\n\tvar Writable = __webpack_require__(12);\n\t\n\tutil.inherits(Duplex, Readable);\n\t\n\tforEach(objectKeys(Writable.prototype), function(method) {\n\t  if (!Duplex.prototype[method])\n\t    Duplex.prototype[method] = Writable.prototype[method];\n\t});\n\t\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex))\n\t    return new Duplex(options);\n\t\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t\n\t  if (options && options.readable === false)\n\t    this.readable = false;\n\t\n\t  if (options && options.writable === false)\n\t    this.writable = false;\n\t\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false)\n\t    this.allowHalfOpen = false;\n\t\n\t  this.once('end', onend);\n\t}\n\t\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended)\n\t    return;\n\t\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  process.nextTick(this.end.bind(this));\n\t}\n\t\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(40)\n\tvar ieee754 = __webpack_require__(44)\n\tvar isArray = __webpack_require__(45)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer, (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Stream;\n\t\n\tvar EE = __webpack_require__(10).EventEmitter;\n\tvar inherits = __webpack_require__(4);\n\t\n\tinherits(Stream, EE);\n\tStream.Readable = __webpack_require__(56);\n\tStream.Writable = __webpack_require__(58);\n\tStream.Duplex = __webpack_require__(54);\n\tStream.Transform = __webpack_require__(57);\n\tStream.PassThrough = __webpack_require__(55);\n\t\n\t// Backwards-compat with node 0.4.x\n\tStream.Stream = Stream;\n\t\n\t\n\t\n\t// old-style streams.  Note that the pipe method (the only relevant\n\t// part of this class) is overridden in the Readable class.\n\t\n\tfunction Stream() {\n\t  EE.call(this);\n\t}\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var source = this;\n\t\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\t\n\t  source.on('data', ondata);\n\t\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\t\n\t  dest.on('drain', ondrain);\n\t\n\t  // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\t\n\t  var didOnEnd = false;\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    dest.end();\n\t  }\n\t\n\t\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  }\n\t\n\t  // don't leave dangling pipes when there are errors.\n\t  function onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\t\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror);\n\t\n\t  // remove all the event listeners that were added.\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\t\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\t\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\t\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\t\n\t    dest.removeListener('close', cleanup);\n\t  }\n\t\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\t\n\t  dest.on('close', cleanup);\n\t\n\t  dest.emit('pipe', source);\n\t\n\t  // Allow for unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\t\n\tfunction isArray(arg) {\n\t  if (Array.isArray) {\n\t    return Array.isArray(arg);\n\t  }\n\t  return objectToString(arg) === '[object Array]';\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = Buffer.isBuffer;\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\t\n\tmodule.exports = Transform;\n\t\n\tvar Duplex = __webpack_require__(5);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Transform, Duplex);\n\t\n\t\n\tfunction TransformState(options, stream) {\n\t  this.afterTransform = function(er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\t\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t}\n\t\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\t\n\t  var cb = ts.writecb;\n\t\n\t  if (!cb)\n\t    return stream.emit('error', new Error('no writecb in Transform class'));\n\t\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t\n\t  if (!util.isNullOrUndefined(data))\n\t    stream.push(data);\n\t\n\t  if (cb)\n\t    cb(er);\n\t\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\t\n\t\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform))\n\t    return new Transform(options);\n\t\n\t  Duplex.call(this, options);\n\t\n\t  this._transformState = new TransformState(options, this);\n\t\n\t  // when the writable side finishes, then flush out anything remaining.\n\t  var stream = this;\n\t\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\t\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\t\n\t  this.once('prefinish', function() {\n\t    if (util.isFunction(this._flush))\n\t      this._flush(function(er) {\n\t        done(stream, er);\n\t      });\n\t    else\n\t      done(stream);\n\t  });\n\t}\n\t\n\tTransform.prototype.push = function(chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\t\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function(chunk, encoding, cb) {\n\t  throw new Error('not implemented');\n\t};\n\t\n\tTransform.prototype._write = function(chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform ||\n\t        rs.needReadable ||\n\t        rs.length < rs.highWaterMark)\n\t      this._read(rs.highWaterMark);\n\t  }\n\t};\n\t\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function(n) {\n\t  var ts = this._transformState;\n\t\n\t  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\t\n\t\n\tfunction done(stream, er) {\n\t  if (er)\n\t    return stream.emit('error', er);\n\t\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\t\n\t  if (ws.length)\n\t    throw new Error('calling transform done when ws.length != 0');\n\t\n\t  if (ts.transforming)\n\t    throw new Error('calling transform done when still transforming');\n\t\n\t  return stream.push(null);\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\t\n\tmodule.exports = Writable;\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(6).Buffer;\n\t/*</replacement>*/\n\t\n\tWritable.WritableState = WritableState;\n\t\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tvar Stream = __webpack_require__(8);\n\t\n\tutil.inherits(Writable, Stream);\n\t\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t}\n\t\n\tfunction WritableState(options, stream) {\n\t  var Duplex = __webpack_require__(5);\n\t\n\t  options = options || {};\n\t\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\t\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\t\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\t\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\t\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\t\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function(er) {\n\t    onwrite(stream, er);\n\t  };\n\t\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\t\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\t\n\t  this.buffer = [];\n\t\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\t\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\t\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t}\n\t\n\tfunction Writable(options) {\n\t  var Duplex = __webpack_require__(5);\n\t\n\t  // Writable ctor is applied to Duplexes, though they're not\n\t  // instanceof Writable, they're instanceof Readable.\n\t  if (!(this instanceof Writable) && !(this instanceof Duplex))\n\t    return new Writable(options);\n\t\n\t  this._writableState = new WritableState(options, this);\n\t\n\t  // legacy.\n\t  this.writable = true;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function() {\n\t  this.emit('error', new Error('Cannot pipe. Not readable.'));\n\t};\n\t\n\t\n\tfunction writeAfterEnd(stream, state, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  process.nextTick(function() {\n\t    cb(er);\n\t  });\n\t}\n\t\n\t// If we get something that is not a buffer, string, null, or undefined,\n\t// and we're not in objectMode, then that's an error.\n\t// Otherwise stream chunks are all considered to be of length=1, and the\n\t// watermarks determine how many objects to keep in the buffer, rather than\n\t// how many bytes or characters.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    var er = new TypeError('Invalid non-string/buffer chunk');\n\t    stream.emit('error', er);\n\t    process.nextTick(function() {\n\t      cb(er);\n\t    });\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\t\n\tWritable.prototype.write = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\t\n\t  if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  else if (!encoding)\n\t    encoding = state.defaultEncoding;\n\t\n\t  if (!util.isFunction(cb))\n\t    cb = function() {};\n\t\n\t  if (state.ended)\n\t    writeAfterEnd(this, state, cb);\n\t  else if (validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t};\n\t\n\tWritable.prototype.cork = function() {\n\t  var state = this._writableState;\n\t\n\t  state.corked++;\n\t};\n\t\n\tWritable.prototype.uncork = function() {\n\t  var state = this._writableState;\n\t\n\t  if (state.corked) {\n\t    state.corked--;\n\t\n\t    if (!state.writing &&\n\t        !state.corked &&\n\t        !state.finished &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length)\n\t      clearBuffer(this, state);\n\t  }\n\t};\n\t\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode &&\n\t      state.decodeStrings !== false &&\n\t      util.isString(chunk)) {\n\t    chunk = new Buffer(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\t\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n\t  chunk = decodeChunk(state, chunk, encoding);\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t\n\t  state.length += len;\n\t\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret)\n\t    state.needDrain = true;\n\t\n\t  if (state.writing || state.corked)\n\t    state.buffer.push(new WriteReq(chunk, encoding, cb));\n\t  else\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t\n\t  return ret;\n\t}\n\t\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev)\n\t    stream._writev(chunk, state.onwrite);\n\t  else\n\t    stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\t\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  if (sync)\n\t    process.nextTick(function() {\n\t      state.pendingcb--;\n\t      cb(er);\n\t    });\n\t  else {\n\t    state.pendingcb--;\n\t    cb(er);\n\t  }\n\t\n\t  stream._writableState.errorEmitted = true;\n\t  stream.emit('error', er);\n\t}\n\t\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\t\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t\n\t  onwriteStateUpdate(state);\n\t\n\t  if (er)\n\t    onwriteError(stream, state, sync, er, cb);\n\t  else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(stream, state);\n\t\n\t    if (!finished &&\n\t        !state.corked &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length) {\n\t      clearBuffer(stream, state);\n\t    }\n\t\n\t    if (sync) {\n\t      process.nextTick(function() {\n\t        afterWrite(stream, state, finished, cb);\n\t      });\n\t    } else {\n\t      afterWrite(stream, state, finished, cb);\n\t    }\n\t  }\n\t}\n\t\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished)\n\t    onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\t\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\t\n\t\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t\n\t  if (stream._writev && state.buffer.length > 1) {\n\t    // Fast case, write everything using _writev()\n\t    var cbs = [];\n\t    for (var c = 0; c < state.buffer.length; c++)\n\t      cbs.push(state.buffer[c].callback);\n\t\n\t    // count the one we are adding, as well.\n\t    // TODO(isaacs) clean this up\n\t    state.pendingcb++;\n\t    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n\t      for (var i = 0; i < cbs.length; i++) {\n\t        state.pendingcb--;\n\t        cbs[i](err);\n\t      }\n\t    });\n\t\n\t    // Clear buffer\n\t    state.buffer = [];\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    for (var c = 0; c < state.buffer.length; c++) {\n\t      var entry = state.buffer[c];\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        c++;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (c < state.buffer.length)\n\t      state.buffer = state.buffer.slice(c);\n\t    else\n\t      state.buffer.length = 0;\n\t  }\n\t\n\t  state.bufferProcessing = false;\n\t}\n\t\n\tWritable.prototype._write = function(chunk, encoding, cb) {\n\t  cb(new Error('not implemented'));\n\t\n\t};\n\t\n\tWritable.prototype._writev = null;\n\t\n\tWritable.prototype.end = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t\n\t  if (util.isFunction(chunk)) {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (!util.isNullOrUndefined(chunk))\n\t    this.write(chunk, encoding);\n\t\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\t\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished)\n\t    endWritable(this, state, cb);\n\t};\n\t\n\t\n\tfunction needFinish(stream, state) {\n\t  return (state.ending &&\n\t          state.length === 0 &&\n\t          !state.finished &&\n\t          !state.writing);\n\t}\n\t\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished) {\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t  }\n\t}\n\t\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(stream, state);\n\t  if (need) {\n\t    if (state.pendingcb === 0) {\n\t      prefinish(stream, state);\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    } else\n\t      prefinish(stream, state);\n\t  }\n\t  return need;\n\t}\n\t\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished)\n\t      process.nextTick(cb);\n\t    else\n\t      stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(13);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tvar _deepDiff = __webpack_require__(19);\n\t\n\tvar _deepDiff2 = _interopRequireDefault(_deepDiff);\n\t\n\tvar _collection = __webpack_require__(31);\n\t\n\tvar _collection2 = _interopRequireDefault(_collection);\n\t\n\tvar _observable = __webpack_require__(17);\n\t\n\tvar _observable2 = _interopRequireDefault(_observable);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar StaticCanvas = function (_React$Component) {\n\t\t_inherits(StaticCanvas, _React$Component);\n\t\n\t\tfunction StaticCanvas(props, context) {\n\t\t\t_classCallCheck(this, StaticCanvas);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (StaticCanvas.__proto__ || Object.getPrototypeOf(StaticCanvas)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tcanvas: null\n\t\t\t};\n\t\n\t\t\t(0, _collection2.default)(_this);\n\t\t\t(0, _observable2.default)(_this);\n\t\n\t\t\t//Static Canvas\n\t\t\t_this.absolutePan = function (point) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.absolutePan(point);\n\t\t\t};\n\t\t\t_this.bringForward = function (object, intersecting) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.bringForward(object, intersecting);\n\t\t\t};\n\t\t\t_this.bringToFront = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.bringToFront(object);\n\t\t\t};\n\t\t\t_this.centerObject = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.centerObject(object);\n\t\t\t};\n\t\t\t_this.centerObjectH = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.centerObjectH(object);\n\t\t\t};\n\t\t\t_this.centerObjectV = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.centerObjectV(object);\n\t\t\t};\n\t\t\t_this.clear = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.clear();\n\t\t\t};\n\t\t\t_this.clearContext = function (ctx) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.clearContext(ctx);\n\t\t\t};\n\t\t\t_this.clone = function (callback, properties) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.clone(callback, properties);\n\t\t\t};\n\t\t\t_this.cloneWithoutData = function (callback) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.cloneWithoutData(callback);\n\t\t\t};\n\t\t\t_this.dispose = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.dispose();\n\t\t\t};\n\t\t\t_this.fxCenterObjectH = function (object, callbacks) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.fxCenterObjectH(object, callbacks);\n\t\t\t};\n\t\t\t_this.fxCenterObjectV = function (object, callbacks) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.fxCenterObjectV(object, callbacks);\n\t\t\t};\n\t\t\t_this.fxRemove = function (object, callbacks) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.fxRemove(object, callbacks);\n\t\t\t};\n\t\t\t_this.fxStraightenObject = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.fxStraightenObject(object);\n\t\t\t};\n\t\t\t_this.getActiveGroup = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveGroup();\n\t\t\t};\n\t\t\t_this.getActiveObject = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveObject();\n\t\t\t};\n\t\t\t_this.getCenter = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getCenter();\n\t\t\t};\n\t\t\t_this.getContext = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getContext();\n\t\t\t};\n\t\t\t_this.getElement = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getElement();\n\t\t\t};\n\t\t\t_this.getHeight = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getHeight();\n\t\t\t};\n\t\t\t_this.getWidth = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getWidth();\n\t\t\t};\n\t\t\t_this.getZoom = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getZoom();\n\t\t\t};\n\t\t\t_this.loadFromDatalessJSON = function (json, callback, reviver) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.loadFromDatalessJSON(json, callback, reviver);\n\t\t\t};\n\t\t\t_this.loadFromJSON = function (json, callback, reviver) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.loadFromJSON(json, callback, reviver);\n\t\t\t};\n\t\t\t_this.moveTo = function (object, index) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.moveTo(object, index);\n\t\t\t};\n\t\t\t_this.onBeforeScaleRotate = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.onBeforeScaleRotate();\n\t\t\t};\n\t\t\t_this.relativePan = function (point) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.relativePan(point);\n\t\t\t};\n\t\t\t_this.renderAll = function (allOnTop) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.renderAll(allOnTop);\n\t\t\t};\n\t\t\t_this.renderTop = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.renderTop();\n\t\t\t};\n\t\t\t_this.sendBackwards = function (object, intersecting) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.sendBackwards(object, intersecting);\n\t\t\t};\n\t\t\t_this.sendToBack = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.sendToBack(object);\n\t\t\t};\n\t\t\t_this.setBackgroundColor = function (backgroundColor, callback) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setBackgroundColor(backgroundColor, callback);\n\t\t\t};\n\t\t\t_this.setBackgroundImage = function (image, callback, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setBackgroundImage(image, callback, options);\n\t\t\t};\n\t\t\t_this.setDimensions = function (dimensions, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setDimensions(dimensions, options);\n\t\t\t};\n\t\t\t_this.setHeight = function (value, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setHeight(value, options);\n\t\t\t};\n\t\t\t_this.setOverlayColor = function (overlayColor, callback) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setOverlayColor(overlayColor, callback);\n\t\t\t};\n\t\t\t_this.setOverlayImage = function (image, callback, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setOverlayImage(image, callback, options);\n\t\t\t};\n\t\t\t_this.setViewportTransform = function (vpt) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setViewportTransform(vpt);\n\t\t\t};\n\t\t\t_this.setWidth = function (value, options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setWidth(value, options);\n\t\t\t};\n\t\t\t_this.setZoom = function (value) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setZoom(value);\n\t\t\t};\n\t\t\t_this.straightenObject = function (object) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.straightenObject(object);\n\t\t\t};\n\t\t\t_this.toDatalessJSON = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toDatalessJSON(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toDatalessObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toDataURL = function (options) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toDataURL(options);\n\t\t\t};\n\t\t\t_this.toDataURLWithMultiplier = function (format, multiplier, quality) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toDataURLWithMultiplier(format, multiplier, quality);\n\t\t\t};\n\t\t\t_this.toJSON = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toJSON(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toString();\n\t\t\t};\n\t\t\t_this.toSVG = function (options, reviver) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.toSVG(options, reviver);\n\t\t\t};\n\t\t\t_this.zoomToPoint = function (point, value) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.zoomToPoint(point, value);\n\t\t\t};\n\t\n\t\t\t// React\n\t\t\t_this.getChild = _this.getChild.bind(_this);\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(StaticCanvas, [{\n\t\t\tkey: 'componentDidMount',\n\t\t\tvalue: function componentDidMount() {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tvar canvas = new _fabric.fabric.Canvas(this.props.id);\n\t\n\t\t\t\tthis.setState({ canvas: canvas }, function () {\n\t\t\t\t\t_this2.initEvent.call(_this2);\n\t\t\t\t\tObject.keys(_this2.ref).forEach(function (key) {\n\t\t\t\t\t\tvar ref = _this2.ref[key];\n\t\t\t\t\t\tref.draw(function (obj) {\n\t\t\t\t\t\t\treturn _this2.add(obj);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'componentWillReceiveProps',\n\t\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tthis.prevRef = {};\n\t\t\t\tObject.keys(this.ref).forEach(function (key) {\n\t\t\t\t\t_this3.prevRef[key] = _this3.ref[key];\n\t\t\t\t});\n\t\t\t\tthis.ref = {};\n\t\n\t\t\t\t/* Options Changed */\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.backgroundColor, nextProps.backgroundColor)) {\n\t\t\t\t\tthis.setBackgroundColor(nextProps.backgroundColor);\n\t\t\t\t}\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.backgroundImage, nextProps.backgroundImage)) {\n\t\t\t\t\tthis.setBackgroundImage(nextProps.backgroundImage);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.height !== nextProps.height) {\n\t\t\t\t\tthis.state.canvas.setHeight(nextProps.height);\n\t\t\t\t}\n\t\t\t\tif (this.props.width !== nextProps.width) {\n\t\t\t\t\tthis.state.canvas.setWidth(nextProps.width);\n\t\t\t\t}\n\t\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.overlayColor, nextProps.overlayColor)) {\n\t\t\t\t\tthis.setOverlayColor(nextProps.overlayColor);\n\t\t\t\t}\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.overlayImage, nextProps.overlayImage)) {\n\t\t\t\t\tthis.setOverlayImage(nextProps.overlayImage);\n\t\t\t\t}\n\t\n\t\t\t\tif ((0, _deepDiff2.default)(this.props.viewportTransform, nextProps.viewportTransform)) {\n\t\t\t\t\tthis.setViewportTransform(nextProps.viewportTransform);\n\t\t\t\t}\n\t\n\t\t\t\t/* TODO: Event Changed */\n\t\t\t\tthis.eventChanged(nextProps);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'componentDidUpdate',\n\t\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\t\tvar _this4 = this;\n\t\n\t\t\t\t/* TODO: Children Changed */\n\t\n\t\t\t\tif (prevState.canvas) {\n\t\t\t\t\t_react2.default.Children.map(this.props.children, function (child, i) {\n\t\t\t\t\t\tif (!child) return;\n\t\n\t\t\t\t\t\tvar key = child.ref ? child.ref : 'layer' + i;\n\t\t\t\t\t\tvar ref = _this4.ref[key];\n\t\t\t\t\t\tref.draw(function (obj) {\n\t\t\t\t\t\t\t// because this callback is called asynchronously, if multiple updates occur in quick\n\t\t\t\t\t\t\t// succession then it's possible we'll attempt to remove an object (below) before it has been\n\t\t\t\t\t\t\t// added (here) - the result of which is duplicate objects on the canvas\n\t\t\t\t\t\t\tif (!obj.doNotAdd) {\n\t\t\t\t\t\t\t\t_this4.add(obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\n\t\t\t\t\tObject.keys(this.prevRef).forEach(function (key) {\n\t\t\t\t\t\tvar object = _this4.prevRef[key].getObject();\n\t\t\t\t\t\t// in case this object hasn't actually been added yet, set a flag so that we don't add it later\n\t\t\t\t\t\tobject.doNotAdd = true;\n\t\t\t\t\t\t_this4.remove(object);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\tthis.state.canvas && this.state.canvas.renderAll();\n\t\t\t}\n\t\n\t\t\t// childAddedrRemove(oldChild, child, index) {\n\t\t\t// \tconst ref = child.ref ? this.ref[child.ref] : this.ref[`layer${index}`];\n\t\t\t// \tref.draw(obj => this.insertAt(obj, index));\n\t\t\t// } else if (oldChild && !child) {\n\t\t\t// \tconst key = oldChild.ref;\n\t\t\t// \tconst ref = key ? this.ref[key] : this.ref[`layer${index}`];\n\t\t\t// \tconst obj = ref.getObject();\n\t\t\t//\n\t\t\t// \tthis.remove(obj);\n\t\t\t// \tthis.ref[ref] = null;\n\t\t\t// }\n\t\t\t// }\n\t\n\t\t}, {\n\t\t\tkey: 'initEvent',\n\t\t\tvalue: function initEvent() {\n\t\t\t\tvar canvas = this.state.canvas;\n\t\n\t\t\t\tif (!canvas) return;\n\t\n\t\t\t\tif (this.props.beforeRender instanceof Function) {\n\t\t\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t\t\t}\n\t\t\t\tif (this.props.afterRender instanceof Function) {\n\t\t\t\t\tcanvas.on('after:render', this.props.afterRender);\n\t\t\t\t}\n\t\t\t\tif (this.props.onCanvasCleared instanceof Function) {\n\t\t\t\t\tcanvas.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t\t\t}\n\t\t\t\tif (this.props.onObjectAdded instanceof Function) {\n\t\t\t\t\tcanvas.on('object:added', this.props.onObjectAdded);\n\t\t\t\t}\n\t\t\t\tif (this.props.onObjectRemoved instanceof Function) {\n\t\t\t\t\tcanvas.on('object:removed', this.props.onObjectRemoved);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'eventChanged',\n\t\t\tvalue: function eventChanged(nextProps) {\n\t\t\t\tvar canvas = this.state.canvas;\n\t\n\t\t\t\tif (!canvas) return;\n\t\n\t\t\t\tif (this.props.beforeRender && !nextProps.beforeRender) {\n\t\t\t\t\tcanvas.off('before:render');\n\t\t\t\t} else if (nextProps.beforeRender instanceof Function) {\n\t\t\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.afterRender && !nextProps.afterRender) {\n\t\t\t\t\tobject.off('after:render');\n\t\t\t\t} else if (nextProps.afterRender instanceof Function) {\n\t\t\t\t\tobject.on('after:render', this.props.afterRender);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onCanvasCleared && !nextProps.onCanvasCleared) {\n\t\t\t\t\tobject.off('canvas:cleared');\n\t\t\t\t} else if (nextProps.onCanvasCleared instanceof Function) {\n\t\t\t\t\tobject.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onObjectAdded && !nextProps.onObjectAdded) {\n\t\t\t\t\tobject.off('object:added');\n\t\t\t\t} else if (nextProps.onObjectAdded instanceof Function) {\n\t\t\t\t\tobject.on('object:added', this.props.onObjectAdded);\n\t\t\t\t}\n\t\n\t\t\t\tif (this.props.onObjectRemoved && !nextProps.onObjectRemoved) {\n\t\t\t\t\tobject.off('object:removed');\n\t\t\t\t} else if (nextProps.onObjectRemoved instanceof Function) {\n\t\t\t\t\tobject.on('object:removed', this.props.onObjectRemoved);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getChild',\n\t\t\tvalue: function getChild(ref) {\n\t\t\t\treturn this.ref[ref];\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'render',\n\t\t\tvalue: function render() {\n\t\t\t\tvar _this5 = this;\n\t\n\t\t\t\tvar _props = this.props,\n\t\t\t\t    id = _props.id,\n\t\t\t\t    children = _props.children;\n\t\n\t\t\t\treturn _react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\tnull,\n\t\t\t\t\t_react2.default.createElement('canvas', { id: id, width: this.props.width, height: this.props.height }),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t'div',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.state.canvas && _react2.default.Children.map(children, function (child, i) {\n\t\t\t\t\t\t\treturn child && _react2.default.cloneElement(child, {\n\t\t\t\t\t\t\t\tref: function ref(c) {\n\t\t\t\t\t\t\t\t\tif (c) {\n\t\t\t\t\t\t\t\t\t\t_this5.ref[child.ref || 'layer' + i] = c;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn StaticCanvas;\n\t}(_react2.default.Component);\n\t\n\texports.default = StaticCanvas;\n\t\n\t\n\tStaticCanvas.emptyJSON = _fabric.fabric.StaticCanvas.EMPTY_JSON;\n\tStaticCanvas.supports = function (methodName) {\n\t\treturn _fabric.fabric.StaticCanvas.supports(methodName);\n\t};\n\t\n\tStaticCanvas.propTypes = {\n\t\tallowTouchScrolling: _propTypes2.default.bool,\n\t\tbackgroundColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(_fabric.fabric.Pattern)]),\n\t\tbackgroundImage: _propTypes2.default.instanceOf(_fabric.fabric.Image),\n\t\tclipTo: _propTypes2.default.func,\n\t\tcontrolsAboveOverlay: _propTypes2.default.bool,\n\t\tFX_DURATION: _propTypes2.default.number,\n\t\timageSmoothingEnabled: _propTypes2.default.bool,\n\t\tincludeDefaultValues: _propTypes2.default.bool,\n\t\toverlayColor: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(_fabric.fabric.Pattern)]),\n\t\toverlayImage: _propTypes2.default.instanceOf(_fabric.fabric.Image),\n\t\tpreserveObjectStacking: _propTypes2.default.bool,\n\t\trenderOnAddRemove: _propTypes2.default.bool,\n\t\tstateful: _propTypes2.default.bool,\n\t\tsvgViewportTransformation: _propTypes2.default.bool,\n\t\tviewportTransform: _propTypes2.default.array,\n\t\n\t\twidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t\n\t\theight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t\n\t\tid: _propTypes2.default.string,\n\t\tbeforeRender: _propTypes2.default.func,\n\t\tafterRender: _propTypes2.default.func,\n\t\tonCanvasCleared: _propTypes2.default.func,\n\t\tonObjectAdded: _propTypes2.default.func,\n\t\tonObjectRemoved: _propTypes2.default.func\n\t};\n\t\n\tStaticCanvas.defaultProps = {\n\t\tallowTouchScrolling: false,\n\t\tbackgroundColor: '',\n\t\tbackgroundImage: null,\n\t\tclipTo: null,\n\t\tcontrolsAboveOverlay: false,\n\t\tFX_DURATION: 500,\n\t\timageSmoothingEnabled: true,\n\t\tincludeDefaultValues: true,\n\t\toverlayColor: '',\n\t\toverlayImage: null,\n\t\tpreserveObjectStacking: false,\n\t\trenderOnAddRemove: true,\n\t\tstateful: true,\n\t\tsvgViewportTransformation: true,\n\t\tviewportTransform: null,\n\t\n\t\twidth: 100,\n\t\theight: 100,\n\t\n\t\tid: 'c'\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Text = function (_FabricObject) {\n\t\t_inherits(Text, _FabricObject);\n\t\n\t\tfunction Text(props, context) {\n\t\t\t_classCallCheck(this, Text);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, props, context));\n\t\n\t\t\t_this.state = { object: null };\n\t\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t\t};\n\t\t\t_this.isEmptyStyles = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.isEmptyStyles();\n\t\t\t};\n\t\t\t_this.renderf = function (ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.render(ctx);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Text, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Text.fromObject(this.props.object);\n\t\t\t\t} else if (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Text.fromElement(this.props.element, this.props);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.Text(this.props.text, this.props);\n\t\t\t\t}\n\t\n\t\t\t\t_get(Text.prototype.__proto__ || Object.getPrototypeOf(Text.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Text;\n\t}(_Object2.default);\n\t\n\texports.default = Text;\n\t\n\t\n\tText.attribute = _fabric.fabric.Text.ATTRIBUTE_NAMES;\n\tText.defaultSvgFontSize = _fabric.fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\tText.fromElement = function (element, options) {\n\t\treturn _fabric.fabric.Text.fromElement(element, options);\n\t};\n\tText.fromObject = function (object) {\n\t\treturn _fabric.fabric.Text.fromObject(object);\n\t};\n\t\n\tText.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\tfontSize: _propTypes2.default.number,\n\t\tfontWeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t\tfontFamily: _propTypes2.default.string,\n\t\ttextDecoration: _propTypes2.default.oneOf(['', 'underline', 'overline', 'line-through']),\n\t\ttextAlign: _propTypes2.default.oneOf(['left', 'center', 'right', 'justify']),\n\t\tfontStyle: _propTypes2.default.oneOf(['', 'normal', 'italic', 'oblique']),\n\t\tlineHeight: _propTypes2.default.number,\n\t\ttextBackgroundColor: _propTypes2.default.string\n\t});\n\t\n\tText.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\ttype: 'text',\n\t\tstateProperties: _Object2.default.defaultProps.stateProperties.concat(['fontFamily', 'fontWeight', 'fontSize', 'text', 'textDecoration', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor']),\n\t\tfontSize: 40,\n\t\tfontWeight: 'normal',\n\t\tfontFamily: 'Times New Roman',\n\t\ttextDecoration: '',\n\t\ttextAlign: 'left',\n\t\tfontStyle: '',\n\t\tlineHeight: 1.16,\n\t\ttextBackgroundColor: '',\n\t\tstroke: null,\n\t\tshadow: null\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tfunction observableMixin(delgete) {\n\t\tdelgete.observe = function (eventName, handler) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.observe(eventName, handler);\n\t\t};\n\t\tdelgete.stopObserving = function (eventName, handler) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.stopObserving(eventName, handler);\n\t\t};\n\t\tdelgete.fire = function (eventName, options) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.fire(eventName, options);\n\t\t};\n\t\tdelgete.on = delgete.observe;\n\t\tdelgete.off = delgete.stopObserving;\n\t\tdelgete.trigger = delgete.fire;\n\t}\n\t\n\texports.default = observableMixin;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Path = function (_FabricObject) {\n\t\t_inherits(Path, _FabricObject);\n\t\n\t\tfunction Path(props, context) {\n\t\t\t_classCallCheck(this, Path);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Path.__proto__ || Object.getPrototypeOf(Path)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object.toDatalessObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Path, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\t_fabric.fabric.Path.fromElement(this.props.element, function (instance) {\n\t\t\t\t\t\treturn _get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t}, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\t_fabric.fabric.Path.fromObject(this.props.object, function (instance) {\n\t\t\t\t\t\treturn _get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar object = new _fabric.fabric.Path(this.props.path, this.props);\n\t\t\t\t\t_get(Path.prototype.__proto__ || Object.getPrototypeOf(Path.prototype), 'draw', this).call(this, object, cb);\n\t\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Path;\n\t}(_Object2.default);\n\t\n\texports.default = Path;\n\t\n\t\n\tPath.fromElement = function (element, callback, options) {\n\t\treturn _fabric.fabric.Path.fromElement(element, callback, options);\n\t};\n\tPath.fromObject = function (object, callback) {\n\t\treturn _fabric.fabric.Path.fromObject(object, callback);\n\t};\n\tPath.attribute = _fabric.fabric.Path.ATTRIBUTE_NAMES;\n\t\n\tPath.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\tpath: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.string]),\n\t\tminX: _propTypes2.default.number,\n\t\tminY: _propTypes2.default.number\n\t});\n\t\n\tPath.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\ttype: 'path',\n\t\tpath: null,\n\t\tminX: 0,\n\t\tminY: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {\n\t\t true ? module.exports = factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t(global.DeepDiff = factory());\n\t}(this, (function () { 'use strict';\n\t\n\tvar $scope;\n\tvar conflict;\n\tvar conflictResolution = [];\n\tif (typeof global === 'object' && global) {\n\t  $scope = global;\n\t} else if (typeof window !== 'undefined') {\n\t  $scope = window;\n\t} else {\n\t  $scope = {};\n\t}\n\tconflict = $scope.DeepDiff;\n\tif (conflict) {\n\t  conflictResolution.push(\n\t    function() {\n\t      if ('undefined' !== typeof conflict && $scope.DeepDiff === accumulateDiff) {\n\t        $scope.DeepDiff = conflict;\n\t        conflict = undefined;\n\t      }\n\t    });\n\t}\n\t\n\t// nodejs compatible on server side and in the browser.\n\tfunction inherits(ctor, superCtor) {\n\t  ctor.super_ = superCtor;\n\t  ctor.prototype = Object.create(superCtor.prototype, {\n\t    constructor: {\n\t      value: ctor,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t}\n\t\n\tfunction Diff(kind, path) {\n\t  Object.defineProperty(this, 'kind', {\n\t    value: kind,\n\t    enumerable: true\n\t  });\n\t  if (path && path.length) {\n\t    Object.defineProperty(this, 'path', {\n\t      value: path,\n\t      enumerable: true\n\t    });\n\t  }\n\t}\n\t\n\tfunction DiffEdit(path, origin, value) {\n\t  DiffEdit.super_.call(this, 'E', path);\n\t  Object.defineProperty(this, 'lhs', {\n\t    value: origin,\n\t    enumerable: true\n\t  });\n\t  Object.defineProperty(this, 'rhs', {\n\t    value: value,\n\t    enumerable: true\n\t  });\n\t}\n\tinherits(DiffEdit, Diff);\n\t\n\tfunction DiffNew(path, value) {\n\t  DiffNew.super_.call(this, 'N', path);\n\t  Object.defineProperty(this, 'rhs', {\n\t    value: value,\n\t    enumerable: true\n\t  });\n\t}\n\tinherits(DiffNew, Diff);\n\t\n\tfunction DiffDeleted(path, value) {\n\t  DiffDeleted.super_.call(this, 'D', path);\n\t  Object.defineProperty(this, 'lhs', {\n\t    value: value,\n\t    enumerable: true\n\t  });\n\t}\n\tinherits(DiffDeleted, Diff);\n\t\n\tfunction DiffArray(path, index, item) {\n\t  DiffArray.super_.call(this, 'A', path);\n\t  Object.defineProperty(this, 'index', {\n\t    value: index,\n\t    enumerable: true\n\t  });\n\t  Object.defineProperty(this, 'item', {\n\t    value: item,\n\t    enumerable: true\n\t  });\n\t}\n\tinherits(DiffArray, Diff);\n\t\n\tfunction arrayRemove(arr, from, to) {\n\t  var rest = arr.slice((to || from) + 1 || arr.length);\n\t  arr.length = from < 0 ? arr.length + from : from;\n\t  arr.push.apply(arr, rest);\n\t  return arr;\n\t}\n\t\n\tfunction realTypeOf(subject) {\n\t  var type = typeof subject;\n\t  if (type !== 'object') {\n\t    return type;\n\t  }\n\t\n\t  if (subject === Math) {\n\t    return 'math';\n\t  } else if (subject === null) {\n\t    return 'null';\n\t  } else if (Array.isArray(subject)) {\n\t    return 'array';\n\t  } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n\t    return 'date';\n\t  } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n\t    return 'regexp';\n\t  }\n\t  return 'object';\n\t}\n\t\n\tfunction deepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n\t  path = path || [];\n\t  stack = stack || [];\n\t  var currentPath = path.slice(0);\n\t  if (typeof key !== 'undefined') {\n\t    if (prefilter) {\n\t      if (typeof(prefilter) === 'function' && prefilter(currentPath, key)) {\n\t        return; } else if (typeof(prefilter) === 'object') {\n\t        if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n\t          return; }\n\t        if (prefilter.normalize) {\n\t          var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n\t          if (alt) {\n\t            lhs = alt[0];\n\t            rhs = alt[1];\n\t          }\n\t        }\n\t      }\n\t    }\n\t    currentPath.push(key);\n\t  }\n\t\n\t  // Use string comparison for regexes\n\t  if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n\t    lhs = lhs.toString();\n\t    rhs = rhs.toString();\n\t  }\n\t\n\t  var ltype = typeof lhs;\n\t  var rtype = typeof rhs;\n\t\n\t  var ldefined = ltype !== 'undefined' || (stack && stack[stack.length - 1].lhs && stack[stack.length - 1].lhs.hasOwnProperty(key));\n\t  var rdefined = rtype !== 'undefined' || (stack && stack[stack.length - 1].rhs && stack[stack.length - 1].rhs.hasOwnProperty(key));\n\t\n\t  if (!ldefined && rdefined) {\n\t    changes(new DiffNew(currentPath, rhs));\n\t  } else if (!rdefined && ldefined) {\n\t    changes(new DiffDeleted(currentPath, lhs));\n\t  } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n\t    changes(new DiffEdit(currentPath, lhs, rhs));\n\t  } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n\t    changes(new DiffEdit(currentPath, lhs, rhs));\n\t  } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n\t    if (!stack.filter(function(x) {\n\t        return x.lhs === lhs; }).length) {\n\t      stack.push({ lhs: lhs, rhs: rhs });\n\t      if (Array.isArray(lhs)) {\n\t        var i, len = lhs.length;\n\t        for (i = 0; i < lhs.length; i++) {\n\t          if (i >= rhs.length) {\n\t            changes(new DiffArray(currentPath, i, new DiffDeleted(undefined, lhs[i])));\n\t          } else {\n\t            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack);\n\t          }\n\t        }\n\t        while (i < rhs.length) {\n\t          changes(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i++])));\n\t        }\n\t      } else {\n\t        var akeys = Object.keys(lhs);\n\t        var pkeys = Object.keys(rhs);\n\t        akeys.forEach(function(k, i) {\n\t          var other = pkeys.indexOf(k);\n\t          if (other >= 0) {\n\t            deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack);\n\t            pkeys = arrayRemove(pkeys, other);\n\t          } else {\n\t            deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack);\n\t          }\n\t        });\n\t        pkeys.forEach(function(k) {\n\t          deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack);\n\t        });\n\t      }\n\t      stack.length = stack.length - 1;\n\t    } else if (lhs !== rhs) {\n\t      // lhs is contains a cycle at this element and it differs from rhs\n\t      changes(new DiffEdit(currentPath, lhs, rhs));\n\t    }\n\t  } else if (lhs !== rhs) {\n\t    if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n\t      changes(new DiffEdit(currentPath, lhs, rhs));\n\t    }\n\t  }\n\t}\n\t\n\tfunction accumulateDiff(lhs, rhs, prefilter, accum) {\n\t  accum = accum || [];\n\t  deepDiff(lhs, rhs,\n\t    function(diff) {\n\t      if (diff) {\n\t        accum.push(diff);\n\t      }\n\t    },\n\t    prefilter);\n\t  return (accum.length) ? accum : undefined;\n\t}\n\t\n\tfunction applyArrayChange(arr, index, change) {\n\t  if (change.path && change.path.length) {\n\t    var it = arr[index],\n\t      i, u = change.path.length - 1;\n\t    for (i = 0; i < u; i++) {\n\t      it = it[change.path[i]];\n\t    }\n\t    switch (change.kind) {\n\t      case 'A':\n\t        applyArrayChange(it[change.path[i]], change.index, change.item);\n\t        break;\n\t      case 'D':\n\t        delete it[change.path[i]];\n\t        break;\n\t      case 'E':\n\t      case 'N':\n\t        it[change.path[i]] = change.rhs;\n\t        break;\n\t    }\n\t  } else {\n\t    switch (change.kind) {\n\t      case 'A':\n\t        applyArrayChange(arr[index], change.index, change.item);\n\t        break;\n\t      case 'D':\n\t        arr = arrayRemove(arr, index);\n\t        break;\n\t      case 'E':\n\t      case 'N':\n\t        arr[index] = change.rhs;\n\t        break;\n\t    }\n\t  }\n\t  return arr;\n\t}\n\t\n\tfunction applyChange(target, source, change) {\n\t  if (target && source && change && change.kind) {\n\t    var it = target,\n\t      i = -1,\n\t      last = change.path ? change.path.length - 1 : 0;\n\t    while (++i < last) {\n\t      if (typeof it[change.path[i]] === 'undefined') {\n\t        it[change.path[i]] = (typeof change.path[i] === 'number') ? [] : {};\n\t      }\n\t      it = it[change.path[i]];\n\t    }\n\t    switch (change.kind) {\n\t      case 'A':\n\t        applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n\t        break;\n\t      case 'D':\n\t        delete it[change.path[i]];\n\t        break;\n\t      case 'E':\n\t      case 'N':\n\t        it[change.path[i]] = change.rhs;\n\t        break;\n\t    }\n\t  }\n\t}\n\t\n\tfunction revertArrayChange(arr, index, change) {\n\t  if (change.path && change.path.length) {\n\t    // the structure of the object at the index has changed...\n\t    var it = arr[index],\n\t      i, u = change.path.length - 1;\n\t    for (i = 0; i < u; i++) {\n\t      it = it[change.path[i]];\n\t    }\n\t    switch (change.kind) {\n\t      case 'A':\n\t        revertArrayChange(it[change.path[i]], change.index, change.item);\n\t        break;\n\t      case 'D':\n\t        it[change.path[i]] = change.lhs;\n\t        break;\n\t      case 'E':\n\t        it[change.path[i]] = change.lhs;\n\t        break;\n\t      case 'N':\n\t        delete it[change.path[i]];\n\t        break;\n\t    }\n\t  } else {\n\t    // the array item is different...\n\t    switch (change.kind) {\n\t      case 'A':\n\t        revertArrayChange(arr[index], change.index, change.item);\n\t        break;\n\t      case 'D':\n\t        arr[index] = change.lhs;\n\t        break;\n\t      case 'E':\n\t        arr[index] = change.lhs;\n\t        break;\n\t      case 'N':\n\t        arr = arrayRemove(arr, index);\n\t        break;\n\t    }\n\t  }\n\t  return arr;\n\t}\n\t\n\tfunction revertChange(target, source, change) {\n\t  if (target && source && change && change.kind) {\n\t    var it = target,\n\t      i, u;\n\t    u = change.path.length - 1;\n\t    for (i = 0; i < u; i++) {\n\t      if (typeof it[change.path[i]] === 'undefined') {\n\t        it[change.path[i]] = {};\n\t      }\n\t      it = it[change.path[i]];\n\t    }\n\t    switch (change.kind) {\n\t      case 'A':\n\t        // Array was modified...\n\t        // it will be an array...\n\t        revertArrayChange(it[change.path[i]], change.index, change.item);\n\t        break;\n\t      case 'D':\n\t        // Item was deleted...\n\t        it[change.path[i]] = change.lhs;\n\t        break;\n\t      case 'E':\n\t        // Item was edited...\n\t        it[change.path[i]] = change.lhs;\n\t        break;\n\t      case 'N':\n\t        // Item is new...\n\t        delete it[change.path[i]];\n\t        break;\n\t    }\n\t  }\n\t}\n\t\n\tfunction applyDiff(target, source, filter) {\n\t  if (target && source) {\n\t    var onChange = function(change) {\n\t      if (!filter || filter(target, source, change)) {\n\t        applyChange(target, source, change);\n\t      }\n\t    };\n\t    deepDiff(target, source, onChange);\n\t  }\n\t}\n\t\n\tObject.defineProperties(accumulateDiff, {\n\t\n\t  diff: {\n\t    value: accumulateDiff,\n\t    enumerable: true\n\t  },\n\t  observableDiff: {\n\t    value: deepDiff,\n\t    enumerable: true\n\t  },\n\t  applyDiff: {\n\t    value: applyDiff,\n\t    enumerable: true\n\t  },\n\t  applyChange: {\n\t    value: applyChange,\n\t    enumerable: true\n\t  },\n\t  revertChange: {\n\t    value: revertChange,\n\t    enumerable: true\n\t  },\n\t  isConflict: {\n\t    value: function() {\n\t      return 'undefined' !== typeof conflict;\n\t    },\n\t    enumerable: true\n\t  },\n\t  noConflict: {\n\t    value: function() {\n\t      if (conflictResolution) {\n\t        conflictResolution.forEach(function(it) {\n\t          it();\n\t        });\n\t        conflictResolution = null;\n\t      }\n\t      return accumulateDiff;\n\t    },\n\t    enumerable: true\n\t  }\n\t});\n\t\n\treturn accumulateDiff;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = module.exports;\n\tvar EventEmitter = __webpack_require__(10).EventEmitter;\n\tvar Request = __webpack_require__(41);\n\tvar url = __webpack_require__(24)\n\t\n\thttp.request = function (params, cb) {\n\t    if (typeof params === 'string') {\n\t        params = url.parse(params)\n\t    }\n\t    if (!params) params = {};\n\t    if (!params.host && !params.port) {\n\t        params.port = parseInt(window.location.port, 10);\n\t    }\n\t    if (!params.host && params.hostname) {\n\t        params.host = params.hostname;\n\t    }\n\t\n\t    if (!params.protocol) {\n\t        if (params.scheme) {\n\t            params.protocol = params.scheme + ':';\n\t        } else {\n\t            params.protocol = window.location.protocol;\n\t        }\n\t    }\n\t\n\t    if (!params.host) {\n\t        params.host = window.location.hostname || window.location.host;\n\t    }\n\t    if (/:/.test(params.host)) {\n\t        if (!params.port) {\n\t            params.port = params.host.split(':')[1];\n\t        }\n\t        params.host = params.host.split(':')[0];\n\t    }\n\t    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n\t    \n\t    var req = new Request(new xhrHttp, params);\n\t    if (cb) req.on('response', cb);\n\t    return req;\n\t};\n\t\n\thttp.get = function (params, cb) {\n\t    params.method = 'GET';\n\t    var req = http.request(params, cb);\n\t    req.end();\n\t    return req;\n\t};\n\t\n\thttp.Agent = function () {};\n\thttp.Agent.defaultMaxSockets = 4;\n\t\n\tvar xhrHttp = (function () {\n\t    if (typeof window === 'undefined') {\n\t        throw new Error('no window object present');\n\t    }\n\t    else if (window.XMLHttpRequest) {\n\t        return window.XMLHttpRequest;\n\t    }\n\t    else if (window.ActiveXObject) {\n\t        var axs = [\n\t            'Msxml2.XMLHTTP.6.0',\n\t            'Msxml2.XMLHTTP.3.0',\n\t            'Microsoft.XMLHTTP'\n\t        ];\n\t        for (var i = 0; i < axs.length; i++) {\n\t            try {\n\t                var ax = new(window.ActiveXObject)(axs[i]);\n\t                return function () {\n\t                    if (ax) {\n\t                        var ax_ = ax;\n\t                        ax = null;\n\t                        return ax_;\n\t                    }\n\t                    else {\n\t                        return new(window.ActiveXObject)(axs[i]);\n\t                    }\n\t                };\n\t            }\n\t            catch (e) {}\n\t        }\n\t        throw new Error('ajax not supported in this browser')\n\t    }\n\t    else {\n\t        throw new Error('ajax not supported in this browser');\n\t    }\n\t})();\n\t\n\thttp.STATUS_CODES = {\n\t    100 : 'Continue',\n\t    101 : 'Switching Protocols',\n\t    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n\t    200 : 'OK',\n\t    201 : 'Created',\n\t    202 : 'Accepted',\n\t    203 : 'Non-Authoritative Information',\n\t    204 : 'No Content',\n\t    205 : 'Reset Content',\n\t    206 : 'Partial Content',\n\t    207 : 'Multi-Status',               // RFC 4918\n\t    300 : 'Multiple Choices',\n\t    301 : 'Moved Permanently',\n\t    302 : 'Moved Temporarily',\n\t    303 : 'See Other',\n\t    304 : 'Not Modified',\n\t    305 : 'Use Proxy',\n\t    307 : 'Temporary Redirect',\n\t    400 : 'Bad Request',\n\t    401 : 'Unauthorized',\n\t    402 : 'Payment Required',\n\t    403 : 'Forbidden',\n\t    404 : 'Not Found',\n\t    405 : 'Method Not Allowed',\n\t    406 : 'Not Acceptable',\n\t    407 : 'Proxy Authentication Required',\n\t    408 : 'Request Time-out',\n\t    409 : 'Conflict',\n\t    410 : 'Gone',\n\t    411 : 'Length Required',\n\t    412 : 'Precondition Failed',\n\t    413 : 'Request Entity Too Large',\n\t    414 : 'Request-URI Too Large',\n\t    415 : 'Unsupported Media Type',\n\t    416 : 'Requested Range Not Satisfiable',\n\t    417 : 'Expectation Failed',\n\t    418 : 'I\\'m a teapot',              // RFC 2324\n\t    422 : 'Unprocessable Entity',       // RFC 4918\n\t    423 : 'Locked',                     // RFC 4918\n\t    424 : 'Failed Dependency',          // RFC 4918\n\t    425 : 'Unordered Collection',       // RFC 4918\n\t    426 : 'Upgrade Required',           // RFC 2817\n\t    428 : 'Precondition Required',      // RFC 6585\n\t    429 : 'Too Many Requests',          // RFC 6585\n\t    431 : 'Request Header Fields Too Large',// RFC 6585\n\t    500 : 'Internal Server Error',\n\t    501 : 'Not Implemented',\n\t    502 : 'Bad Gateway',\n\t    503 : 'Service Unavailable',\n\t    504 : 'Gateway Time-out',\n\t    505 : 'HTTP Version Not Supported',\n\t    506 : 'Variant Also Negotiates',    // RFC 2295\n\t    507 : 'Insufficient Storage',       // RFC 4918\n\t    509 : 'Bandwidth Limit Exceeded',\n\t    510 : 'Not Extended',               // RFC 2774\n\t    511 : 'Network Authentication Required' // RFC 6585\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\t\n\tmodule.exports = PassThrough;\n\t\n\tvar Transform = __webpack_require__(11);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tutil.inherits(PassThrough, Transform);\n\t\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough))\n\t    return new PassThrough(options);\n\t\n\t  Transform.call(this, options);\n\t}\n\t\n\tPassThrough.prototype._transform = function(chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Readable;\n\t\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(53);\n\t/*</replacement>*/\n\t\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(6).Buffer;\n\t/*</replacement>*/\n\t\n\tReadable.ReadableState = ReadableState;\n\t\n\tvar EE = __webpack_require__(10).EventEmitter;\n\t\n\t/*<replacement>*/\n\tif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\t\n\tvar Stream = __webpack_require__(8);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(9);\n\tutil.inherits = __webpack_require__(4);\n\t/*</replacement>*/\n\t\n\tvar StringDecoder;\n\t\n\t\n\t/*<replacement>*/\n\tvar debug = __webpack_require__(67);\n\tif (debug && debug.debuglog) {\n\t  debug = debug.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\t\n\t\n\tutil.inherits(Readable, Stream);\n\t\n\tfunction ReadableState(options, stream) {\n\t  var Duplex = __webpack_require__(5);\n\t\n\t  options = options || {};\n\t\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t\n\t  this.buffer = [];\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t\n\t\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // when piping, we only care about 'readable' events that happen\n\t  // after read()ing all the bytes and not getting any pushback.\n\t  this.ranOut = false;\n\t\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\t\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\t\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder)\n\t      StringDecoder = __webpack_require__(23).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\t\n\tfunction Readable(options) {\n\t  var Duplex = __webpack_require__(5);\n\t\n\t  if (!(this instanceof Readable))\n\t    return new Readable(options);\n\t\n\t  this._readableState = new ReadableState(options, this);\n\t\n\t  // legacy\n\t  this.readable = true;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function(chunk, encoding) {\n\t  var state = this._readableState;\n\t\n\t  if (util.isString(chunk) && !state.objectMode) {\n\t    encoding = encoding || state.defaultEncoding;\n\t    if (encoding !== state.encoding) {\n\t      chunk = new Buffer(chunk, encoding);\n\t      encoding = '';\n\t    }\n\t  }\n\t\n\t  return readableAddChunk(this, state, chunk, encoding, false);\n\t};\n\t\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function(chunk) {\n\t  var state = this._readableState;\n\t  return readableAddChunk(this, state, chunk, '', true);\n\t};\n\t\n\tfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var er = chunkInvalid(state, chunk);\n\t  if (er) {\n\t    stream.emit('error', er);\n\t  } else if (util.isNullOrUndefined(chunk)) {\n\t    state.reading = false;\n\t    if (!state.ended)\n\t      onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk && chunk.length > 0) {\n\t    if (state.ended && !addToFront) {\n\t      var e = new Error('stream.push() after EOF');\n\t      stream.emit('error', e);\n\t    } else if (state.endEmitted && addToFront) {\n\t      var e = new Error('stream.unshift() after end event');\n\t      stream.emit('error', e);\n\t    } else {\n\t      if (state.decoder && !addToFront && !encoding)\n\t        chunk = state.decoder.write(chunk);\n\t\n\t      if (!addToFront)\n\t        state.reading = false;\n\t\n\t      // if we want the data now, just emit it.\n\t      if (state.flowing && state.length === 0 && !state.sync) {\n\t        stream.emit('data', chunk);\n\t        stream.read(0);\n\t      } else {\n\t        // update the buffer info.\n\t        state.length += state.objectMode ? 1 : chunk.length;\n\t        if (addToFront)\n\t          state.buffer.unshift(chunk);\n\t        else\n\t          state.buffer.push(chunk);\n\t\n\t        if (state.needReadable)\n\t          emitReadable(stream);\n\t      }\n\t\n\t      maybeReadMore(stream, state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading = false;\n\t  }\n\t\n\t  return needMoreData(state);\n\t}\n\t\n\t\n\t\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended &&\n\t         (state.needReadable ||\n\t          state.length < state.highWaterMark ||\n\t          state.length === 0);\n\t}\n\t\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function(enc) {\n\t  if (!StringDecoder)\n\t    StringDecoder = __webpack_require__(23).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\t\n\t// Don't raise the hwm > 128MB\n\tvar MAX_HWM = 0x800000;\n\tfunction roundUpToNextPowerOf2(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2\n\t    n--;\n\t    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\t\n\tfunction howMuchToRead(n, state) {\n\t  if (state.length === 0 && state.ended)\n\t    return 0;\n\t\n\t  if (state.objectMode)\n\t    return n === 0 ? 0 : 1;\n\t\n\t  if (isNaN(n) || util.isNull(n)) {\n\t    // only flow one buffer at a time\n\t    if (state.flowing && state.buffer.length)\n\t      return state.buffer[0].length;\n\t    else\n\t      return state.length;\n\t  }\n\t\n\t  if (n <= 0)\n\t    return 0;\n\t\n\t  // If we're asking for more than the target buffer level,\n\t  // then raise the water mark.  Bump up to the next highest\n\t  // power of 2, to prevent increasing it excessively in tiny\n\t  // amounts.\n\t  if (n > state.highWaterMark)\n\t    state.highWaterMark = roundUpToNextPowerOf2(n);\n\t\n\t  // don't have that much.  return null, unless we've ended.\n\t  if (n > state.length) {\n\t    if (!state.ended) {\n\t      state.needReadable = true;\n\t      return 0;\n\t    } else\n\t      return state.length;\n\t  }\n\t\n\t  return n;\n\t}\n\t\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function(n) {\n\t  debug('read', n);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t\n\t  if (!util.isNumber(n) || n > 0)\n\t    state.emittedReadable = false;\n\t\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 &&\n\t      state.needReadable &&\n\t      (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended)\n\t      endReadable(this);\n\t    else\n\t      emitReadable(this);\n\t    return null;\n\t  }\n\t\n\t  n = howMuchToRead(n, state);\n\t\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0)\n\t      endReadable(this);\n\t    return null;\n\t  }\n\t\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\t\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\t\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  }\n\t\n\t  if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0)\n\t      state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t  }\n\t\n\t  // If _read pushed data synchronously, then `reading` will be false,\n\t  // and we need to re-evaluate how much data we can return to the user.\n\t  if (doRead && !state.reading)\n\t    n = howMuchToRead(nOrig, state);\n\t\n\t  var ret;\n\t  if (n > 0)\n\t    ret = fromList(n, state);\n\t  else\n\t    ret = null;\n\t\n\t  if (util.isNull(ret)) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  }\n\t\n\t  state.length -= n;\n\t\n\t  // If we have nothing in the buffer, then we want to know\n\t  // as soon as we *do* get something into the buffer.\n\t  if (state.length === 0 && !state.ended)\n\t    state.needReadable = true;\n\t\n\t  // If we tried to read() past the EOF, then emit end on the next tick.\n\t  if (nOrig !== n && state.ended && state.length === 0)\n\t    endReadable(this);\n\t\n\t  if (!util.isNull(ret))\n\t    this.emit('data', ret);\n\t\n\t  return ret;\n\t};\n\t\n\tfunction chunkInvalid(state, chunk) {\n\t  var er = null;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\t\n\t\n\tfunction onEofChunk(stream, state) {\n\t  if (state.decoder && !state.ended) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\t\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\t\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync)\n\t      process.nextTick(function() {\n\t        emitReadable_(stream);\n\t      });\n\t    else\n\t      emitReadable_(stream);\n\t  }\n\t}\n\t\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\t\n\t\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    process.nextTick(function() {\n\t      maybeReadMore_(stream, state);\n\t    });\n\t  }\n\t}\n\t\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended &&\n\t         state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;\n\t    else\n\t      len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\t\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function(n) {\n\t  this.emit('error', new Error('not implemented'));\n\t};\n\t\n\tReadable.prototype.pipe = function(dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\t\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n\t              dest !== process.stdout &&\n\t              dest !== process.stderr;\n\t\n\t  var endFn = doEnd ? onend : cleanup;\n\t  if (state.endEmitted)\n\t    process.nextTick(endFn);\n\t  else\n\t    src.once('end', endFn);\n\t\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      cleanup();\n\t    }\n\t  }\n\t\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\t\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', cleanup);\n\t    src.removeListener('data', ondata);\n\t\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain &&\n\t        (!dest._writableState || dest._writableState.needDrain))\n\t      ondrain();\n\t  }\n\t\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    var ret = dest.write(chunk);\n\t    if (false === ret) {\n\t      debug('false write response, pause',\n\t            src._readableState.awaitDrain);\n\t      src._readableState.awaitDrain++;\n\t      src.pause();\n\t    }\n\t  }\n\t\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EE.listenerCount(dest, 'error') === 0)\n\t      dest.emit('error', er);\n\t  }\n\t  // This is a brutally ugly hack to make sure that our error handler\n\t  // is attached before any userland ones.  NEVER DO THIS.\n\t  if (!dest._events || !dest._events.error)\n\t    dest.on('error', onerror);\n\t  else if (isArray(dest._events.error))\n\t    dest._events.error.unshift(onerror);\n\t  else\n\t    dest._events.error = [onerror, dest._events.error];\n\t\n\t\n\t\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\t\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\t\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\t\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\t\n\t  return dest;\n\t};\n\t\n\tfunction pipeOnDrain(src) {\n\t  return function() {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain)\n\t      state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\t\n\t\n\tReadable.prototype.unpipe = function(dest) {\n\t  var state = this._readableState;\n\t\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0)\n\t    return this;\n\t\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes)\n\t      return this;\n\t\n\t    if (!dest)\n\t      dest = state.pipes;\n\t\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest)\n\t      dest.emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // slow case. multiple pipe destinations.\n\t\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t\n\t    for (var i = 0; i < len; i++)\n\t      dests[i].emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // try to find the right one.\n\t  var i = indexOf(state.pipes, dest);\n\t  if (i === -1)\n\t    return this;\n\t\n\t  state.pipes.splice(i, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1)\n\t    state.pipes = state.pipes[0];\n\t\n\t  dest.emit('unpipe', this);\n\t\n\t  return this;\n\t};\n\t\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function(ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\t\n\t  // If listening to data, and it has not explicitly been paused,\n\t  // then call resume to start the flow of data on the next tick.\n\t  if (ev === 'data' && false !== this._readableState.flowing) {\n\t    this.resume();\n\t  }\n\t\n\t  if (ev === 'readable' && this.readable) {\n\t    var state = this._readableState;\n\t    if (!state.readableListening) {\n\t      state.readableListening = true;\n\t      state.emittedReadable = false;\n\t      state.needReadable = true;\n\t      if (!state.reading) {\n\t        var self = this;\n\t        process.nextTick(function() {\n\t          debug('readable nexttick read 0');\n\t          self.read(0);\n\t        });\n\t      } else if (state.length) {\n\t        emitReadable(this, state);\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\t\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function() {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    if (!state.reading) {\n\t      debug('resume read 0');\n\t      this.read(0);\n\t    }\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    process.nextTick(function() {\n\t      resume_(stream, state);\n\t    });\n\t  }\n\t}\n\t\n\tfunction resume_(stream, state) {\n\t  state.resumeScheduled = false;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading)\n\t    stream.read(0);\n\t}\n\t\n\tReadable.prototype.pause = function() {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  if (state.flowing) {\n\t    do {\n\t      var chunk = stream.read();\n\t    } while (null !== chunk && state.flowing);\n\t  }\n\t}\n\t\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function(stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\t\n\t  var self = this;\n\t  stream.on('end', function() {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length)\n\t        self.push(chunk);\n\t    }\n\t\n\t    self.push(null);\n\t  });\n\t\n\t  stream.on('data', function(chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder)\n\t      chunk = state.decoder.write(chunk);\n\t    if (!chunk || !state.objectMode && !chunk.length)\n\t      return;\n\t\n\t    var ret = self.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\t\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n\t      this[i] = function(method) { return function() {\n\t        return stream[method].apply(stream, arguments);\n\t      }}(i);\n\t    }\n\t  }\n\t\n\t  // proxy certain important events.\n\t  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, function(ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  });\n\t\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  self._read = function(n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\t\n\t  return self;\n\t};\n\t\n\t\n\t\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\t\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\tfunction fromList(n, state) {\n\t  var list = state.buffer;\n\t  var length = state.length;\n\t  var stringMode = !!state.decoder;\n\t  var objectMode = !!state.objectMode;\n\t  var ret;\n\t\n\t  // nothing in the list, definitely empty.\n\t  if (list.length === 0)\n\t    return null;\n\t\n\t  if (length === 0)\n\t    ret = null;\n\t  else if (objectMode)\n\t    ret = list.shift();\n\t  else if (!n || n >= length) {\n\t    // read it all, truncate the array.\n\t    if (stringMode)\n\t      ret = list.join('');\n\t    else\n\t      ret = Buffer.concat(list, length);\n\t    list.length = 0;\n\t  } else {\n\t    // read just some of it.\n\t    if (n < list[0].length) {\n\t      // just take a part of the first list item.\n\t      // slice is the same for buffers and strings.\n\t      var buf = list[0];\n\t      ret = buf.slice(0, n);\n\t      list[0] = buf.slice(n);\n\t    } else if (n === list[0].length) {\n\t      // first list is a perfect match\n\t      ret = list.shift();\n\t    } else {\n\t      // complex case.\n\t      // we have enough to cover it, but it spans past the first buffer.\n\t      if (stringMode)\n\t        ret = '';\n\t      else\n\t        ret = new Buffer(n);\n\t\n\t      var c = 0;\n\t      for (var i = 0, l = list.length; i < l && c < n; i++) {\n\t        var buf = list[0];\n\t        var cpy = Math.min(n - c, buf.length);\n\t\n\t        if (stringMode)\n\t          ret += buf.slice(0, cpy);\n\t        else\n\t          buf.copy(ret, c, 0, cpy);\n\t\n\t        if (cpy < buf.length)\n\t          list[0] = buf.slice(cpy);\n\t        else\n\t          list.shift();\n\t\n\t        c += cpy;\n\t      }\n\t    }\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\t\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0)\n\t    throw new Error('endReadable called on non-empty stream');\n\t\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    process.nextTick(function() {\n\t      // Check that we didn't get one last unshift.\n\t      if (!state.endEmitted && state.length === 0) {\n\t        state.endEmitted = true;\n\t        stream.readable = false;\n\t        stream.emit('end');\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\tfunction indexOf (xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar Buffer = __webpack_require__(6).Buffer;\n\t\n\tvar isBufferEncoding = Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch (encoding && encoding.toLowerCase()) {\n\t         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n\t         default: return false;\n\t       }\n\t     }\n\t\n\t\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\t\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\tvar StringDecoder = exports.StringDecoder = function(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  }\n\t\n\t  // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\t  this.charBuffer = new Buffer(6);\n\t  // Number of bytes received for the current incomplete multi-byte character.\n\t  this.charReceived = 0;\n\t  // Number of bytes expected for the current incomplete multi-byte character.\n\t  this.charLength = 0;\n\t};\n\t\n\t\n\t// write decodes the given buffer and returns it as JS string that is\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\tStringDecoder.prototype.write = function(buffer) {\n\t  var charStr = '';\n\t  // if our last write ended with an incomplete multibyte character\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = (buffer.length >= this.charLength - this.charReceived) ?\n\t        this.charLength - this.charReceived :\n\t        buffer.length;\n\t\n\t    // add the new bytes to the char buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\t\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    }\n\t\n\t    // remove bytes belonging to the current character from the buffer\n\t    buffer = buffer.slice(available, buffer.length);\n\t\n\t    // get the character that was split\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\t\n\t    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\t    this.charReceived = this.charLength = 0;\n\t\n\t    // if there are no more bytes in this buffer, just emit our char\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\t    break;\n\t  }\n\t\n\t  // determine and set charLength / charReceived\n\t  this.detectIncompleteChar(buffer);\n\t\n\t  var end = buffer.length;\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\t\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\t\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end);\n\t  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  }\n\t\n\t  // or just emit the charStr\n\t  return charStr;\n\t};\n\t\n\t// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\tStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\t\n\t  // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i];\n\t\n\t    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\t\n\t    // 110XXXXX\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    }\n\t\n\t    // 1110XXXX\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    }\n\t\n\t    // 11110XXX\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\t  this.charReceived = i;\n\t};\n\t\n\tStringDecoder.prototype.end = function(buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length)\n\t    res = this.write(buffer);\n\t\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\t\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\t\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar punycode = __webpack_require__(59);\n\t\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\t\n\texports.Url = Url;\n\t\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\t\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\t\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\t\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\t\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\t\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(52);\n\t\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && isObject(url) && url instanceof Url) return url;\n\t\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\t\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\t\n\t  var rest = url;\n\t\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\t\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\t\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\t\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\t\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\t\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\t\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\t\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\t\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\t\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\t\n\t    // pull out port.\n\t    this.parseHost();\n\t\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\t\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\t\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\t\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a puny coded representation of \"domain\".\n\t      // It only converts the part of the domain name that\n\t      // has non ASCII characters. I.e. it dosent matter if\n\t      // you call it with a domain that already is in ASCII.\n\t      var domainArray = this.hostname.split('.');\n\t      var newOut = [];\n\t      for (var i = 0; i < domainArray.length; ++i) {\n\t        var s = domainArray[i];\n\t        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n\t            'xn--' + punycode.encode(s) : s);\n\t      }\n\t      this.hostname = newOut.join('.');\n\t    }\n\t\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\t\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\t\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\t\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\t\n\t\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\t\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\t\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\t\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\t\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\t\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\t\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\t\n\t  if (this.query &&\n\t      isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\t\n\t  var search = this.search || (query && ('?' + query)) || '';\n\t\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\t\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\t\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\t\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\t\n\t  return protocol + host + pathname + search + hash;\n\t};\n\t\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\t\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\t\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\t\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\t\n\t  var result = new Url();\n\t  Object.keys(this).forEach(function(k) {\n\t    result[k] = this[k];\n\t  }, this);\n\t\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\t\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    Object.keys(relative).forEach(function(k) {\n\t      if (k !== 'protocol')\n\t        result[k] = relative[k];\n\t    });\n\t\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\t\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      Object.keys(relative).forEach(function(k) {\n\t        result[k] = relative[k];\n\t      });\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\t\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\t\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\t\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especialy happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!isNull(result.pathname) || !isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host) && (last === '.' || last === '..') ||\n\t      last === '');\n\t\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last == '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\t\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\t\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\t\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especialy happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\t\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\t\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\t\n\t  //to support request.http\n\t  if (!isNull(result.pathname) || !isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\t\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === \"string\";\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\tfunction isNullOrUndefined(arg) {\n\t  return  arg == null;\n\t}\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var object =  true ? exports : this; // #8: web workers\n\t  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\t  function InvalidCharacterError(message) {\n\t    this.message = message;\n\t  }\n\t  InvalidCharacterError.prototype = new Error;\n\t  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t  // encoder\n\t  // [https://gist.github.com/999166] by [https://github.com/nignag]\n\t  object.btoa || (\n\t  object.btoa = function (input) {\n\t    for (\n\t      // initialize result and counter\n\t      var block, charCode, idx = 0, map = chars, output = '';\n\t      // if the next input index does not exist:\n\t      //   change the mapping table to \"=\"\n\t      //   check if d has no fractional digits\n\t      input.charAt(idx | 0) || (map = '=', idx % 1);\n\t      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n\t    ) {\n\t      charCode = input.charCodeAt(idx += 3/4);\n\t      if (charCode > 0xFF) {\n\t        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n\t      }\n\t      block = block << 8 | charCode;\n\t    }\n\t    return output;\n\t  });\n\t\n\t  // decoder\n\t  // [https://gist.github.com/1020396] by [https://github.com/atk]\n\t  object.atob || (\n\t  object.atob = function (input) {\n\t    input = input.replace(/=+$/, '');\n\t    if (input.length % 4 == 1) {\n\t      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\t    }\n\t    for (\n\t      // initialize result and counters\n\t      var bc = 0, bs, buffer, idx = 0, output = '';\n\t      // get next character\n\t      buffer = input.charAt(idx++);\n\t      // character found in table? initialize bit storage and add its ascii value;\n\t      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t        // and if not first of each 4 characters,\n\t        // convert the first 8 bits to one ascii character\n\t        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n\t    ) {\n\t      // try to find character in table (0-63, not found => -1)\n\t      buffer = chars.indexOf(buffer);\n\t    }\n\t    return output;\n\t  });\n\t\n\t}());\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _StaticCanvas2 = __webpack_require__(15);\n\t\n\tvar _StaticCanvas3 = _interopRequireDefault(_StaticCanvas2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Canvas = function (_StaticCanvas) {\n\t\t_inherits(Canvas, _StaticCanvas);\n\t\n\t\tfunction Canvas(props, context) {\n\t\t\t_classCallCheck(this, Canvas);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Canvas.__proto__ || Object.getPrototypeOf(Canvas)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tcanvas: null\n\t\t\t};\n\t\n\t\t\t_this.ref = {};\n\t\t\t_this.containsPoint = function (e, target) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.containsPoint(e, target);\n\t\t\t};\n\t\t\t_this.isTargetTransparent = function (target, x, y) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.isTargetTransparent(target, x, y);\n\t\t\t};\n\t\t\t_this.setCursor = function (value) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setCursor(value);\n\t\t\t};\n\t\t\t_this.findTarget = function (e, skipGroup) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.findTarget(e, skipGroup);\n\t\t\t};\n\t\t\t_this.getPointer = function (e, ignoreZoom, upperCanvasEl) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getPointer(e, ignoreZoom, upperCanvasEl);\n\t\t\t};\n\t\t\t_this.getSelectionContext = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getSelectionContext();\n\t\t\t};\n\t\t\t_this.getSelectionElement = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getSelectionElement();\n\t\t\t};\n\t\t\t_this.setActiveObject = function (object, e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setActiveObject(object, e);\n\t\t\t};\n\t\t\t_this.getActiveObject = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.getActiveObject();\n\t\t\t};\n\t\t\t_this.discardActiveObject = function (e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.discardActiveObject(e);\n\t\t\t};\n\t\t\t_this.setActiveGroup = function (group, e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.setActiveGroup(group, e);\n\t\t\t};\n\t\t\t_this.discardActiveGroup = function (e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.discardActiveGroup(e);\n\t\t\t};\n\t\t\t_this.deactivateAll = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.deactivateAll();\n\t\t\t};\n\t\t\t_this.deactivateAllWithDispatch = function (e) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.deactivateAllWithDispatch(e);\n\t\t\t};\n\t\t\t_this.dispose = function () {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.dispose();\n\t\t\t};\n\t\t\t_this.drawControls = function (ctx) {\n\t\t\t\treturn _this.state.canvas && _this.state.canvas.drawControls(ctx);\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\treturn Canvas;\n\t}(_StaticCanvas3.default);\n\t\n\texports.default = Canvas;\n\t\n\t\n\tCanvas.propTypes = Object.assign({}, _StaticCanvas3.default.propTypes, {\n\t\tuniScaleTransform: _propTypes2.default.bool,\n\t\tcenteredScaling: _propTypes2.default.bool,\n\t\tcenteredRotation: _propTypes2.default.bool,\n\t\tinteractive: _propTypes2.default.bool,\n\t\tselection: _propTypes2.default.bool,\n\t\tselectionColor: _propTypes2.default.string,\n\t\tselectionDashArray: _propTypes2.default.array,\n\t\tselectionBorderColor: _propTypes2.default.string,\n\t\tselectionLineWidth: _propTypes2.default.number,\n\t\thoverCursor: _propTypes2.default.string,\n\t\tmoveCursor: _propTypes2.default.string,\n\t\tdefaultCursor: _propTypes2.default.string,\n\t\tfreeDrawingCursor: _propTypes2.default.string,\n\t\trotationCursor: _propTypes2.default.string,\n\t\tcontainerClass: _propTypes2.default.string,\n\t\tperPixelTargetFind: _propTypes2.default.bool,\n\t\ttargetFindTolerance: _propTypes2.default.number,\n\t\tskipTargetFind: _propTypes2.default.bool,\n\t\tisDrawingMode: _propTypes2.default.bool\n\t});\n\t\n\tCanvas.defaultProps = Object.assign({}, _StaticCanvas3.default.defaultProps, {\n\t\tuniScaleTransform: false,\n\t\tcenteredScaling: false,\n\t\tcenteredRotation: false,\n\t\tinteractive: true,\n\t\tselection: true,\n\t\tselectionColor: 'rgba(100, 100, 255, 0.3)',\n\t\tselectionDashArray: [],\n\t\tselectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\t\tselectionLineWidth: 1,\n\t\thoverCursor: 'move',\n\t\tmoveCursor: 'move',\n\t\tdefaultCursor: 'default',\n\t\tfreeDrawingCursor: 'crosshair',\n\t\trotationCursor: 'crosshair',\n\t\tcontainerClass: 'canvas-container',\n\t\tperPixelTargetFind: false,\n\t\ttargetFindTolerance: 0,\n\t\tskipTargetFind: false,\n\t\tisDrawingMode: false\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\texports.default = _fabric.fabric.Color;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Text2 = __webpack_require__(16);\n\t\n\tvar _Text3 = _interopRequireDefault(_Text2);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar IText = function (_Text) {\n\t\t_inherits(IText, _Text);\n\t\n\t\tfunction IText(props, context) {\n\t\t\t_classCallCheck(this, IText);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (IText.__proto__ || Object.getPrototypeOf(IText)).call(this, props, context));\n\t\n\t\t\t_this.state = { object: null };\n\t\n\t\t\t_this.isEmptyStyles = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.isEmptyStyles();\n\t\t\t};\n\t\t\t_this.setSelectionStart = function (index) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSelectionStart(index);\n\t\t\t};\n\t\t\t_this.setSelectionEnd = function (index) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSelectionEnd(index);\n\t\t\t};\n\t\t\t_this.getSelectionStyles = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSelectionStyles();\n\t\t\t};\n\t\t\t_this.setSelectionStyles = function (styles) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSelectionStyles(styles);\n\t\t\t};\n\t\t\t_this.renderCursorOrSelection = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.renderCursorOrSelection();\n\t\t\t};\n\t\t\t_this.get2DCursorLocation = function (selectionStart) {\n\t\t\t\treturn _this.state.object && _this.state.object.get2DCursorLocation(selectionStart);\n\t\t\t};\n\t\t\t_this.getCurrentCharStyle = function (lineIndex, charIndex) {\n\t\t\t\treturn _this.state.object && _this.state.object.getCurrentCharStyle(lineIndex, charIndex);\n\t\t\t};\n\t\t\t_this.getCurrentCharFontSize = function (lineIndex, charIndex) {\n\t\t\t\treturn _this.state.object && _this.state.object.getCurrentCharFontSize(lineIndex, charIndex);\n\t\t\t};\n\t\t\t_this.getCurrentCharColor = function (lineIndex, charIndex) {\n\t\t\t\treturn _this.state.object && _this.state.object.getCurrentCharColor(lineIndex, charIndex);\n\t\t\t};\n\t\t\t_this.renderCursor = function (boundaries, ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.renderCursor(boundaries, ctx);\n\t\t\t};\n\t\t\t_this.renderSelection = function (chars, boundaries, ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.renderSelection(chars, boundaries, ctx);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(IText, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(canvas) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.IText.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.IText(this.props.text, this.props);\n\t\t\t\t}\n\t\n\t\t\t\t_get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'draw', this).call(this, canvas, object);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'initEvent',\n\t\t\tvalue: function initEvent() {\n\t\t\t\tvar object = this.state.object;\n\t\n\t\t\t\tif (!(object instanceof _fabric.fabric.Object)) return;\n\t\n\t\t\t\t_get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'initEvent', this).call(this);\n\t\t\t\tif (this.props.onChanged instanceof Function) {\n\t\t\t\t\tobject.on('changed', this.props.onChanged);\n\t\t\t\t}\n\t\t\t\tif (this.props.onSelectionChanged instanceof Function) {\n\t\t\t\t\tobject.on('selection:changed', this.props.onSelectionChanged);\n\t\t\t\t}\n\t\t\t\tif (this.props.onEditingEntered instanceof Function) {\n\t\t\t\t\tobject.on('editing:entered', this.props.onEditingEntered);\n\t\t\t\t}\n\t\t\t\tif (this.props.onEditingExited instanceof Function) {\n\t\t\t\t\tobject.on('editing:exited', this.props.onEditingExited);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'eventChanged',\n\t\t\tvalue: function eventChanged(nextProps) {\n\t\t\t\tvar object = this.state.object;\n\t\n\t\t\t\tif (!(object instanceof _fabric.fabric.Object)) return;\n\t\n\t\t\t\t_get(IText.prototype.__proto__ || Object.getPrototypeOf(IText.prototype), 'eventChanged', this).call(this, nextProps);\n\t\t\t\tif (this.props.onChanged && !nextProps.onChanged) {\n\t\t\t\t\tobject.off('changed');\n\t\t\t\t} else if (nextProps.onChanged instanceof Function) {\n\t\t\t\t\tobject.on('changed', this.props.onChanged);\n\t\t\t\t}\n\t\t\t\tif (this.props.onSelectionChanged && !nextProps.onSelectionChanged) {\n\t\t\t\t\tobject.off('selection:changed');\n\t\t\t\t} else if (nextProps.onSelectionChanged instanceof Function) {\n\t\t\t\t\tobject.on('selection:changed', this.props.onSelectionChanged);\n\t\t\t\t}\n\t\t\t\tif (this.props.onEditingEntered && !nextProps.onEditingEntered) {\n\t\t\t\t\tobject.off('editing:entered');\n\t\t\t\t} else if (nextProps.onEditingEntered instanceof Function) {\n\t\t\t\t\tobject.on('editing:entered', this.props.onEditingEntered);\n\t\t\t\t}\n\t\t\t\tif (this.props.onEditingExited && !nextProps.onEditingExited) {\n\t\t\t\t\tobject.off('editing:exited');\n\t\t\t\t} else if (nextProps.onEditingExited instanceof Function) {\n\t\t\t\t\tobject.on('editing:exited', this.props.onEditingExited);\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn IText;\n\t}(_Text3.default);\n\t\n\texports.default = IText;\n\t\n\tIText.fromObject = function (object) {\n\t\treturn _fabric.fabric.IText.fromObject(object);\n\t};\n\t\n\tIText.propTypes = Object.assign({}, _Text3.default.propTypes, {\n\t\tselectionStart: _propTypes2.default.number,\n\t\tselectionEnd: _propTypes2.default.number,\n\t\tselectionColor: _propTypes2.default.string,\n\t\tisEditing: _propTypes2.default.bool,\n\t\teditable: _propTypes2.default.bool,\n\t\teditingBorderColor: _propTypes2.default.string,\n\t\tcursorWidth: _propTypes2.default.number,\n\t\tcursorColor: _propTypes2.default.string,\n\t\tcursorDelay: _propTypes2.default.number,\n\t\tcursorDuration: _propTypes2.default.number,\n\t\tstyles: _propTypes2.default.object,\n\t\tcaching: _propTypes2.default.bool\n\t});\n\t\n\tIText.defaultProps = Object.assign({}, _Text3.default.defaultProps, {\n\t\ttype: 'i-text',\n\t\tselectionStart: 0,\n\t\tselectionEnd: 0,\n\t\tselectionColor: 'rgba(17,119,255,0.3)',\n\t\tisEditing: false,\n\t\teditable: true,\n\t\teditingBorderColor: 'rgba(102,153,255,0.25)',\n\t\tcursorWidth: 2,\n\t\tcursorColor: '#333',\n\t\tcursorDelay: 1000,\n\t\tcursorDuration: 600\n\t\t// styles: [],\n\t\t// caching: true,\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Image = function (_FabricObject) {\n\t\t_inherits(Image, _FabricObject);\n\t\n\t\tfunction Image(props, context) {\n\t\t\t_classCallCheck(this, Image);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, props, context));\n\t\n\t\t\t_this.state = { object: null };\n\t\n\t\t\t_this.getElement = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getElement();\n\t\t\t};\n\t\t\t_this.setElement = function (element, callback, options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setElement(element, callback, options);\n\t\t\t};\n\t\t\t_this.setCrossOrigin = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setCrossOrigin(value);\n\t\t\t};\n\t\t\t_this.getOriginalSize = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getOriginalSize();\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.getSrc = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getSrc();\n\t\t\t};\n\t\t\t_this.setSrc = function (src, callback, options) {\n\t\t\t\treturn _this.state.object && _this.state.object.setSrc(src, callback, options);\n\t\t\t};\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toString();\n\t\t\t};\n\t\t\t_this.clone = function (callback, propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.clone(callback, propertiesToInclude);\n\t\t\t};\n\t\t\t_this.applyFilters = function (callback, filters, imgElement, forResizing) {\n\t\t\t\treturn _this.state.object && _this.state.object.applyFilters(callback, filters, imgElement, forResizing);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Image, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (typeof this.props.src === 'string') {\n\t\t\t\t\t_fabric.fabric.Image.fromURL(this.props.src, function (instance) {\n\t\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t}, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\t_fabric.fabric.Image.fromObject(this.props.object, function (instance) {\n\t\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t});\n\t\t\t\t} else if (this.props.element instanceof Object) {\n\t\t\t\t\t_fabric.fabric.Image.fromElement(this.props.element, function (instance) {\n\t\t\t\t\t\treturn _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t}, this.props);\n\t\t\t\t} else {\n\t\t\t\t\tvar instance = new _fabric.fabric.Image(this.props.imgElement, this.props);\n\t\t\t\t\t_get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'draw', this).call(this, instance, cb);\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Image;\n\t}(_Object2.default);\n\t\n\texports.default = Image;\n\t\n\t\n\tImage.getSvgSrc = _fabric.fabric.Image.prototype.getSrc;\n\tImage.css = _fabric.fabric.Image.CSS_CANVAS;\n\tImage.fromObject = function (object, callback) {\n\t\treturn _fabric.fabric.Image.fromObject(object, callback);\n\t};\n\tImage.fromURL = function (url, callback, imgOptions) {\n\t\treturn _fabric.fabric.Image.fromURL(url, callback, imgOptions);\n\t};\n\tImage.fromElement = function (element, callback, options) {\n\t\treturn _fabric.fabric.Image.fromElement(element, callback, options);\n\t};\n\tImage.attribute = _fabric.fabric.Image.ATTRIBUTE_NAMES;\n\tImage.async = true;\n\tImage.pngCompression = 1;\n\t\n\tImage.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\tcrossOrigin: _propTypes2.default.oneOf(['', 'anonymous', 'use-credentials']),\n\t\talignX: _propTypes2.default.oneOf(['none', 'mid', 'min', 'max']),\n\t\talignY: _propTypes2.default.oneOf(['none', 'mid', 'min', 'max']),\n\t\tmeetOrSlice: _propTypes2.default.oneOf(['meet', 'slice'])\n\t});\n\t\n\tImage.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\ttype: 'image',\n\t\tcrossOrigin: '',\n\t\talignX: 'none',\n\t\talignY: 'none',\n\t\tmeetOrSlice: 'meet',\n\t\tstrokeWidth: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Tint = exports.Sepia2 = exports.Sepia = exports.Resize = exports.RemoveWhite = exports.Pixelate = exports.Noise = exports.Multiply = exports.Mask = exports.Invert = exports.Grayscale = exports.GradientTransparency = exports.Convolute = exports.Brightness = exports.BaseFilter = undefined;\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tvar BaseFilter = exports.BaseFilter = _fabric.fabric.Image.filters.BaseFilter;\n\tvar Brightness = exports.Brightness = _fabric.fabric.Image.filters.Brightness;\n\tvar Convolute = exports.Convolute = _fabric.fabric.Image.filters.Convolute;\n\tvar GradientTransparency = exports.GradientTransparency = _fabric.fabric.Image.filters.GradientTransparency;\n\tvar Grayscale = exports.Grayscale = _fabric.fabric.Image.filters.Grayscale;\n\tvar Invert = exports.Invert = _fabric.fabric.Image.filters.Invert;\n\tvar Mask = exports.Mask = _fabric.fabric.Image.filters.Mask;\n\tvar Multiply = exports.Multiply = _fabric.fabric.Image.filters.Multiply;\n\t\n\tvar Noise = exports.Noise = _fabric.fabric.Image.filters.Noise;\n\tvar Pixelate = exports.Pixelate = _fabric.fabric.Image.filters.Pixelate;\n\tvar RemoveWhite = exports.RemoveWhite = _fabric.fabric.Image.filters.RemoveWhite;\n\tvar Resize = exports.Resize = _fabric.fabric.Image.filters.Resize;\n\tvar Sepia = exports.Sepia = _fabric.fabric.Image.filters.Sepia;\n\tvar Sepia2 = exports.Sepia2 = _fabric.fabric.Image.filters.Sepia2;\n\tvar Tint = exports.Tint = _fabric.fabric.Image.filters.Tint;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tfunction collectionMixin(delgete) {\n\t\tdelgete.add = function () {\n\t\t\tvar _delgete$state$canvas;\n\t\n\t\t\treturn delgete.state.canvas && (_delgete$state$canvas = delgete.state.canvas).add.apply(_delgete$state$canvas, arguments);\n\t\t};\n\t\tdelgete.insertAt = function (object, index, nonSplicing) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.insertAt(object, index, nonSplicing);\n\t\t};\n\t\tdelgete.remove = function () {\n\t\t\tvar _delgete$state$canvas2;\n\t\n\t\t\treturn delgete.state.canvas && (_delgete$state$canvas2 = delgete.state.canvas).remove.apply(_delgete$state$canvas2, arguments);\n\t\t}; // arguments\n\t\tdelgete.forEachObject = function (callback, context) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.forEachObject(callback, context);\n\t\t};\n\t\tdelgete.getObjects = function (type) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.getObjects(type);\n\t\t};\n\t\tdelgete.item = function (index) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.item(index);\n\t\t};\n\t\tdelgete.isEmpty = function () {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.isEmpty();\n\t\t};\n\t\tdelgete.size = function () {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.size();\n\t\t};\n\t\tdelgete.contains = function (object) {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.contains(object);\n\t\t};\n\t\tdelgete.complexity = function () {\n\t\t\treturn delgete.state.canvas && delgete.state.canvas.complexity(object);\n\t\t};\n\t};\n\t\n\texports.default = collectionMixin;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _react = __webpack_require__(13);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PI = Math.PI;\n\t\n\tvar Circle = function (_FabricObject) {\n\t\t_inherits(Circle, _FabricObject);\n\t\n\t\tfunction Circle(props, context) {\n\t\t\t_classCallCheck(this, Circle);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.getRadiusX = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getRadiusX();\n\t\t\t};\n\t\t\t_this.getRadiusY = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getRadiusY();\n\t\t\t};\n\t\t\t_this.setRadius = function (value) {\n\t\t\t\treturn _this.state.object && _this.state.object.setRadius(value);\n\t\t\t};\n\t\t\t_this.renderf = function (ctx, noTransform) {\n\t\t\t\treturn _this.state.object && _this.state.object.render(ctx, noTransform);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Circle, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Circle.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Circle.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.Circle(this.props);\n\t\t\t\t}\n\t\n\t\t\t\t_get(Circle.prototype.__proto__ || Object.getPrototypeOf(Circle.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Circle;\n\t}(_Object2.default);\n\t\n\texports.default = Circle;\n\t\n\t\n\tCircle.fromElement = function (element, options) {\n\t\treturn _fabric.fabric.Circle.fromElement(element, options);\n\t};\n\tCircle.fromObject = function (object) {\n\t\treturn _fabric.fabric.Circle.fromObject(object);\n\t};\n\tCircle.attribute = _fabric.fabric.Circle.ATTRIBUTE_NAMES;\n\t\n\tCircle.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\tendAngle: _propTypes2.default.number,\n\t\tradius: _propTypes2.default.number,\n\t\tstartAngle: _propTypes2.default.number\n\t});\n\t\n\tCircle.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\tendAngle: 2 * PI,\n\t\tradius: 0,\n\t\tstartAngle: 0,\n\t\ttype: 'circle'\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Ellipse = function (_FabricObject) {\n\t\t_inherits(Ellipse, _FabricObject);\n\t\n\t\tfunction Ellipse(props, context) {\n\t\t\t_classCallCheck(this, Ellipse);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Ellipse.__proto__ || Object.getPrototypeOf(Ellipse)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.getRx = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getRx();\n\t\t\t};\n\t\t\t_this.getRy = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getRy();\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(reviver);\n\t\t\t};\n\t\t\t_this.renderf = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.render();\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Ellipse, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Ellipse.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Ellipse.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.Ellipse(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Ellipse.prototype.__proto__ || Object.getPrototypeOf(Ellipse.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Ellipse;\n\t}(_Object2.default);\n\t\n\texports.default = Ellipse;\n\t\n\t\n\tEllipse.fromElement = function (element, options) {\n\t\treturn _fabric.fabric.Ellipse.fromElement(element, options);\n\t};\n\tEllipse.fromObject = function (object) {\n\t\treturn _fabric.fabric.Ellipse.fromObject(object);\n\t};\n\tEllipse.attribute = _fabric.fabric.Ellipse.ATTRIBUTE_NAMES;\n\t\n\tEllipse.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\trx: _propTypes2.default.number,\n\t\try: _propTypes2.default.number\n\t});\n\t\n\tEllipse.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\trx: 0,\n\t\try: 0,\n\t\ttype: 'ellipse'\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Line = function (_FabricObject) {\n\t\t_inherits(Line, _FabricObject);\n\t\n\t\tfunction Line(props, context) {\n\t\t\t_classCallCheck(this, Line);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.calcLinePoints = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.calcLinePoints();\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Line, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Line.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Line.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.Line(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Line.prototype.__proto__ || Object.getPrototypeOf(Line.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Line;\n\t}(_Object2.default);\n\t\n\texports.default = Line;\n\t\n\t\n\tLine.fromElement = function (element, options) {\n\t\treturn _fabric.fabric.Line.fromElement(element, options);\n\t};\n\tLine.fromObject = function (object) {\n\t\treturn _fabric.fabric.Line.fromObject(object);\n\t};\n\tLine.attribute = _fabric.fabric.Line.ATTRIBUTE_NAMES;\n\t\n\tLine.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\tx1: _propTypes2.default.number,\n\t\ty1: _propTypes2.default.number,\n\t\tx2: _propTypes2.default.number,\n\t\ty2: _propTypes2.default.number\n\t});\n\t\n\tLine.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\ttype: 'line',\n\t\tx1: 0,\n\t\ty1: 0,\n\t\tx2: 0,\n\t\ty2: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Path2 = __webpack_require__(18);\n\t\n\tvar _Path3 = _interopRequireDefault(_Path2);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PathGroup = function (_Path) {\n\t\t_inherits(PathGroup, _Path);\n\t\n\t\tfunction PathGroup(props, context) {\n\t\t\t_classCallCheck(this, PathGroup);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (PathGroup.__proto__ || Object.getPrototypeOf(PathGroup)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.parseDimensionsFromPaths = function (options) {\n\t\t\t\treturn _this.state.object && _this.state.object.parseDimensionsFromPaths(options);\n\t\t\t};\n\t\t\t_this.renderf = function (ctx) {\n\t\t\t\treturn _this.state.object && _this.state.object.renderf(ctx);\n\t\t\t};\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toDatalessObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toDatalessObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.toString = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG();\n\t\t\t};\n\t\t\t_this.isSameColor = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.isSameColor();\n\t\t\t};\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.complexity();\n\t\t\t};\n\t\t\t_this.getObjects = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.getObjects();\n\t\t\t};\n\t\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(PathGroup, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\t_fabric.fabric.PathGroup.fromElement(this.props.element, function (instance) {\n\t\t\t\t\t\treturn _get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t}, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\t_fabric.fabric.PathGroup.fromObject(this.props.object, function (instance) {\n\t\t\t\t\t\treturn _get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', _this2).call(_this2, instance, cb);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar paths = [];\n\t\t\t\t\tif (this.props.children instanceof Array) {\n\t\t\t\t\t\tthis.props.children.forEach(function (child) {\n\t\t\t\t\t\t\treturn paths.push(new _fabric.fabric.Path(child.props.path, child.props));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpaths.push(new _fabric.fabric.Path(this.props.children.props.path, this.props.children.props));\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar object = new _fabric.fabric.PathGroup(paths, this.props);\n\t\t\t\t\t_get(PathGroup.prototype.__proto__ || Object.getPrototypeOf(PathGroup.prototype), 'draw', this).call(this, object, cb);\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn PathGroup;\n\t}(_Path3.default);\n\t\n\texports.default = PathGroup;\n\t\n\t\n\tPathGroup.fromElement = function (element, callback, options) {\n\t\treturn _fabric.fabric.PathGroup.fromElement(element, callback, options);\n\t};\n\tPathGroup.fromObject = function (object, callback) {\n\t\treturn _fabric.fabric.PathGroup.fromObject(object, callback);\n\t};\n\tPathGroup.attribute = _fabric.fabric.PathGroup.ATTRIBUTE_NAMES;\n\t\n\tPathGroup.defaultProps = Object.assign({}, _Path3.default.defaultProps, {\n\t\ttype: 'path-group',\n\t\tfill: ''\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Polygon = function (_FabricObject) {\n\t\t_inherits(Polygon, _FabricObject);\n\t\n\t\tfunction Polygon(props, context) {\n\t\t\t_classCallCheck(this, Polygon);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Polygon.__proto__ || Object.getPrototypeOf(Polygon)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\t\t_this.commonRender = function () {\n\t\t\t\treturn _this.state.object && _this.state.object.commonRender();\n\t\t\t};\n\t\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.props.points ? _this.props.points.length : 0;\n\t\t\t};\n\t\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Polygon, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Polygon.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Polygon.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.Polygon(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Polygon.prototype.__proto__ || Object.getPrototypeOf(Polygon.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Polygon;\n\t}(_Object2.default);\n\t\n\texports.default = Polygon;\n\t\n\t\n\tPolygon.fromElement = function (element, options) {\n\t\treturn _fabric.fabric.Polygon.fromElement(element, options);\n\t};\n\tPolygon.fromObject = function (object) {\n\t\treturn _fabric.fabric.Polygon.fromObject(object);\n\t};\n\tPolygon.attribute = _fabric.fabric.Polygon.ATTRIBUTE_NAMES;\n\t\n\tPolygon.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\tpoints: _propTypes2.default.array,\n\t\tminX: _propTypes2.default.number,\n\t\tminY: _propTypes2.default.number\n\t});\n\t\n\tPolygon.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\ttype: 'polygon',\n\t\tpoints: null,\n\t\tminX: 0,\n\t\tminY: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Polyline = function (_FabricObject) {\n\t\t_inherits(Polyline, _FabricObject);\n\t\n\t\tfunction Polyline(props, context) {\n\t\t\t_classCallCheck(this, Polyline);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Polyline.__proto__ || Object.getPrototypeOf(Polyline)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn _this.props.points ? _this.props.points.length : 0;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Polyline, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Polyline.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Polyline.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.Polyline(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Polyline.prototype.__proto__ || Object.getPrototypeOf(Polyline.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Polyline;\n\t}(_Object2.default);\n\t\n\texports.default = Polyline;\n\t\n\t\n\tPolyline.fromElement = function (element, options) {\n\t\treturn _fabric.fabric.Polyline.fromElement(element, options);\n\t};\n\tPolyline.fromObject = function (object) {\n\t\treturn _fabric.fabric.Polyline.fromObject(object);\n\t};\n\tPolyline.attribute = _fabric.fabric.Polyline.ATTRIBUTE_NAMES;\n\t\n\tPolyline.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\tpoints: _propTypes2.default.array,\n\t\tminX: _propTypes2.default.number,\n\t\tminY: _propTypes2.default.number\n\t});\n\t\n\tPolyline.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\ttype: 'polyline',\n\t\tpoints: null,\n\t\tminX: 0,\n\t\tminY: 0\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Rect = function (_FabricObject) {\n\t\t_inherits(Rect, _FabricObject);\n\t\n\t\tfunction Rect(props, context) {\n\t\t\t_classCallCheck(this, Rect);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Rect.__proto__ || Object.getPrototypeOf(Rect)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toObject = function (propertiesToInclude) {\n\t\t\t\treturn _this.state.object && _this.state.object.toObject(propertiesToInclude);\n\t\t\t};\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Rect, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Rect.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Rect.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.Rect(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Rect.prototype.__proto__ || Object.getPrototypeOf(Rect.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Rect;\n\t}(_Object2.default);\n\t\n\texports.default = Rect;\n\t\n\t\n\tRect.fromElement = function (element, options) {\n\t\treturn _fabric.fabric.Rect.fromElement(element, options);\n\t};\n\tRect.fromObject = function (object) {\n\t\treturn _fabric.fabric.Rect.fromObject(object);\n\t};\n\tRect.attribute = _fabric.fabric.Rect.ATTRIBUTE_NAMES;\n\t\n\tRect.propTypes = Object.assign({}, _Object2.default.propTypes, {\n\t\trx: _propTypes2.default.number,\n\t\try: _propTypes2.default.number\n\t});\n\t\n\tRect.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\ttype: 'rect',\n\t\trx: 0,\n\t\try: 0,\n\t\tstrokeDashArray: null\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _Object = __webpack_require__(3);\n\t\n\tvar _Object2 = _interopRequireDefault(_Object);\n\t\n\tvar _fabric = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Triangle = function (_FabricObject) {\n\t\t_inherits(Triangle, _FabricObject);\n\t\n\t\tfunction Triangle(props, context) {\n\t\t\t_classCallCheck(this, Triangle);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Triangle.__proto__ || Object.getPrototypeOf(Triangle)).call(this, props, context));\n\t\n\t\t\t_this.state = {\n\t\t\t\tobject: null\n\t\t\t};\n\t\n\t\t\t_this.draw = _this.draw.bind(_this);\n\t\n\t\t\t_this.toSVG = function (reviver) {\n\t\t\t\treturn _this.state.object && _this.state.object.toSVG(reviver);\n\t\t\t};\n\t\n\t\t\t_this.complexity = function () {\n\t\t\t\treturn 1;\n\t\t\t};\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Triangle, [{\n\t\t\tkey: 'draw',\n\t\t\tvalue: function draw(cb) {\n\t\t\t\tvar object = void 0;\n\t\t\t\tif (this.props.element instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Triangle.fromElement(this.props.element, this.props);\n\t\t\t\t} else if (this.props.object instanceof Object) {\n\t\t\t\t\tobject = _fabric.fabric.Triangle.fromObject(this.props.object);\n\t\t\t\t} else {\n\t\t\t\t\tobject = new _fabric.fabric.Triangle(this.props);\n\t\t\t\t}\n\t\t\t\t_get(Triangle.prototype.__proto__ || Object.getPrototypeOf(Triangle.prototype), 'draw', this).call(this, object, cb);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Triangle;\n\t}(_Object2.default);\n\t\n\texports.default = Triangle;\n\t\n\t\n\tTriangle.fromObject = function (object) {\n\t\treturn _fabric.fabric.Triangle.fromObject(object);\n\t};\n\t\n\tTriangle.propTypes = Object.assign({}, _Object2.default.propTypes);\n\tTriangle.defaultProps = Object.assign({}, _Object2.default.defaultProps, {\n\t\ttype: 'triangle'\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr((len * 3 / 4) - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0; i < l; i += 4) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(8);\n\tvar Response = __webpack_require__(42);\n\tvar Base64 = __webpack_require__(25);\n\tvar inherits = __webpack_require__(4);\n\t\n\tvar Request = module.exports = function (xhr, params) {\n\t    var self = this;\n\t    self.writable = true;\n\t    self.xhr = xhr;\n\t    self.body = [];\n\t    \n\t    self.uri = (params.protocol || 'http:') + '//'\n\t        + params.host\n\t        + (params.port ? ':' + params.port : '')\n\t        + (params.path || '/')\n\t    ;\n\t    \n\t    if (typeof params.withCredentials === 'undefined') {\n\t        params.withCredentials = true;\n\t    }\n\t\n\t    try { xhr.withCredentials = params.withCredentials }\n\t    catch (e) {}\n\t    \n\t    if (params.responseType) try { xhr.responseType = params.responseType }\n\t    catch (e) {}\n\t    \n\t    xhr.open(\n\t        params.method || 'GET',\n\t        self.uri,\n\t        true\n\t    );\n\t\n\t    xhr.onerror = function(event) {\n\t        self.emit('error', new Error('Network error'));\n\t    };\n\t\n\t    self._headers = {};\n\t    \n\t    if (params.headers) {\n\t        var keys = objectKeys(params.headers);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i];\n\t            if (!self.isSafeRequestHeader(key)) continue;\n\t            var value = params.headers[key];\n\t            self.setHeader(key, value);\n\t        }\n\t    }\n\t    \n\t    if (params.auth) {\n\t        //basic auth\n\t        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n\t    }\n\t\n\t    var res = new Response;\n\t    res.on('close', function () {\n\t        self.emit('close');\n\t    });\n\t    \n\t    res.on('ready', function () {\n\t        self.emit('response', res);\n\t    });\n\t\n\t    res.on('error', function (err) {\n\t        self.emit('error', err);\n\t    });\n\t    \n\t    xhr.onreadystatechange = function () {\n\t        // Fix for IE9 bug\n\t        // SCRIPT575: Could not complete the operation due to error c00c023f\n\t        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n\t        if (xhr.__aborted) return;\n\t        res.handle(xhr);\n\t    };\n\t};\n\t\n\tinherits(Request, Stream);\n\t\n\tRequest.prototype.setHeader = function (key, value) {\n\t    this._headers[key.toLowerCase()] = value\n\t};\n\t\n\tRequest.prototype.getHeader = function (key) {\n\t    return this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.removeHeader = function (key) {\n\t    delete this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.write = function (s) {\n\t    this.body.push(s);\n\t};\n\t\n\tRequest.prototype.destroy = function (s) {\n\t    this.xhr.__aborted = true;\n\t    this.xhr.abort();\n\t    this.emit('close');\n\t};\n\t\n\tRequest.prototype.end = function (s) {\n\t    if (s !== undefined) this.body.push(s);\n\t\n\t    var keys = objectKeys(this._headers);\n\t    for (var i = 0; i < keys.length; i++) {\n\t        var key = keys[i];\n\t        var value = this._headers[key];\n\t        if (isArray(value)) {\n\t            for (var j = 0; j < value.length; j++) {\n\t                this.xhr.setRequestHeader(key, value[j]);\n\t            }\n\t        }\n\t        else this.xhr.setRequestHeader(key, value)\n\t    }\n\t\n\t    if (this.body.length === 0) {\n\t        this.xhr.send('');\n\t    }\n\t    else if (typeof this.body[0] === 'string') {\n\t        this.xhr.send(this.body.join(''));\n\t    }\n\t    else if (isArray(this.body[0])) {\n\t        var body = [];\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body.push.apply(body, this.body[i]);\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n\t        var len = 0;\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            len += this.body[i].length;\n\t        }\n\t        var body = new(this.body[0].constructor)(len);\n\t        var k = 0;\n\t        \n\t        for (var i = 0; i < this.body.length; i++) {\n\t            var b = this.body[i];\n\t            for (var j = 0; j < b.length; j++) {\n\t                body[k++] = b[j];\n\t            }\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (isXHR2Compatible(this.body[0])) {\n\t        this.xhr.send(this.body[0]);\n\t    }\n\t    else {\n\t        var body = '';\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body += this.body[i].toString();\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t};\n\t\n\t// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\n\tRequest.unsafeHeaders = [\n\t    \"accept-charset\",\n\t    \"accept-encoding\",\n\t    \"access-control-request-headers\",\n\t    \"access-control-request-method\",\n\t    \"connection\",\n\t    \"content-length\",\n\t    \"cookie\",\n\t    \"cookie2\",\n\t    \"content-transfer-encoding\",\n\t    \"date\",\n\t    \"expect\",\n\t    \"host\",\n\t    \"keep-alive\",\n\t    \"origin\",\n\t    \"referer\",\n\t    \"te\",\n\t    \"trailer\",\n\t    \"transfer-encoding\",\n\t    \"upgrade\",\n\t    \"user-agent\",\n\t    \"via\"\n\t];\n\t\n\tRequest.prototype.isSafeRequestHeader = function (headerName) {\n\t    if (!headerName) return false;\n\t    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n\t};\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    return keys;\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\t\n\tvar indexOf = function (xs, x) {\n\t    if (xs.indexOf) return xs.indexOf(x);\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (xs[i] === x) return i;\n\t    }\n\t    return -1;\n\t};\n\t\n\tvar isXHR2Compatible = function (obj) {\n\t    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n\t    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n\t    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n\t};\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(8);\n\tvar util = __webpack_require__(62);\n\t\n\tvar Response = module.exports = function (res) {\n\t    this.offset = 0;\n\t    this.readable = true;\n\t};\n\t\n\tutil.inherits(Response, Stream);\n\t\n\tvar capable = {\n\t    streaming : true,\n\t    status2 : true\n\t};\n\t\n\tfunction parseHeaders (res) {\n\t    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n\t    var headers = {};\n\t    for (var i = 0; i < lines.length; i++) {\n\t        var line = lines[i];\n\t        if (line === '') continue;\n\t        \n\t        var m = line.match(/^([^:]+):\\s*(.*)/);\n\t        if (m) {\n\t            var key = m[1].toLowerCase(), value = m[2];\n\t            \n\t            if (headers[key] !== undefined) {\n\t            \n\t                if (isArray(headers[key])) {\n\t                    headers[key].push(value);\n\t                }\n\t                else {\n\t                    headers[key] = [ headers[key], value ];\n\t                }\n\t            }\n\t            else {\n\t                headers[key] = value;\n\t            }\n\t        }\n\t        else {\n\t            headers[line] = true;\n\t        }\n\t    }\n\t    return headers;\n\t}\n\t\n\tResponse.prototype.getResponse = function (xhr) {\n\t    var respType = String(xhr.responseType).toLowerCase();\n\t    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n\t    if (respType === 'arraybuffer') return xhr.response;\n\t    return xhr.responseText;\n\t}\n\t\n\tResponse.prototype.getHeader = function (key) {\n\t    return this.headers[key.toLowerCase()];\n\t};\n\t\n\tResponse.prototype.handle = function (res) {\n\t    if (res.readyState === 2 && capable.status2) {\n\t        try {\n\t            this.statusCode = res.status;\n\t            this.headers = parseHeaders(res);\n\t        }\n\t        catch (err) {\n\t            capable.status2 = false;\n\t        }\n\t        \n\t        if (capable.status2) {\n\t            this.emit('ready');\n\t        }\n\t    }\n\t    else if (capable.streaming && res.readyState === 3) {\n\t        try {\n\t            if (!this.statusCode) {\n\t                this.statusCode = res.status;\n\t                this.headers = parseHeaders(res);\n\t                this.emit('ready');\n\t            }\n\t        }\n\t        catch (err) {}\n\t        \n\t        try {\n\t            this._emitData(res);\n\t        }\n\t        catch (err) {\n\t            capable.streaming = false;\n\t        }\n\t    }\n\t    else if (res.readyState === 4) {\n\t        if (!this.statusCode) {\n\t            this.statusCode = res.status;\n\t            this.emit('ready');\n\t        }\n\t        this._emitData(res);\n\t        \n\t        if (res.error) {\n\t            this.emit('error', this.getResponse(res));\n\t        }\n\t        else this.emit('end');\n\t        \n\t        this.emit('close');\n\t    }\n\t};\n\t\n\tResponse.prototype._emitData = function (res) {\n\t    var respBody = this.getResponse(res);\n\t    if (respBody.toString().match(/ArrayBuffer/)) {\n\t        this.emit('data', new Uint8Array(respBody, this.offset));\n\t        this.offset = respBody.byteLength;\n\t        return;\n\t    }\n\t    if (respBody.length > this.offset) {\n\t        this.emit('data', respBody.slice(this.offset));\n\t        this.offset = respBody.length;\n\t    }\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = __webpack_require__(20);\n\t\n\tvar https = module.exports;\n\t\n\tfor (var key in http) {\n\t    if (http.hasOwnProperty(key)) https[key] = http[key];\n\t};\n\t\n\thttps.request = function (params, cb) {\n\t    if (!params) params = {};\n\t    params.scheme = 'https';\n\t    return http.request.call(this, params, cb);\n\t}\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(48);\n\tvar invariant = __webpack_require__(49);\n\tvar ReactPropTypesSecret = __webpack_require__(47);\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    invariant(\n\t      false,\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (false) {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(50);\n\texports.encode = exports.stringify = __webpack_require__(51);\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(5)\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(21)\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = __webpack_require__(22);\n\texports.Stream = __webpack_require__(8);\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(12);\n\texports.Duplex = __webpack_require__(5);\n\texports.Transform = __webpack_require__(11);\n\texports.PassThrough = __webpack_require__(21);\n\tif (!process.browser && ({\"NODE_ENV\":\"production\"}).READABLE_STREAM === 'disable') {\n\t  module.exports = __webpack_require__(8);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(11)\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(12)\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\t\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\t\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\t\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\t\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\t\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\t\n\t\t/** Temporary variable */\n\t\tkey;\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\t\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\t\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\t\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\t\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\t\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\t\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\t\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\t\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\t\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\t\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tw *= baseMinusT;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\t\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\t\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\t\n\t\t\t}\n\t\n\t\t\treturn ucs2encode(output);\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\t\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\t\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\t\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\t\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\thandledCPCount = basicLength = output.length;\n\t\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\t\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\t\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\t\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\t\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\t\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\t\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(63)(module), (function() { return this; }())))\n\n/***/ },\n/* 60 */\n4,\n/* 61 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = ({\"NODE_ENV\":\"production\"}).NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(61);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(60);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(7)))\n\n/***/ },\n/* 63 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 64 */\n14,\n/* 65 */\n14,\n/* 66 */\n14,\n/* 67 */\n14\n/******/ ])))\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** main.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 881e179fb8fc5ab4faf2\n **/","'use strict';\n\nimport _StaticCanvas from './StaticCanvas.jsx';\nimport _Canvas from './Canvas.jsx';\n\nimport _Circle from './shape/Circle.jsx';\nimport _Ellipse from './shape/Ellipse.jsx';\nimport _Line from './shape/Line.jsx';\nimport _Path from './shape/Path.jsx';\nimport _PathGroup from './shape/PathGroup.jsx';\nimport _Polygon from './shape/Polygon.jsx';\nimport _Polyline from './shape/Polyline.jsx';\nimport _Rect from './shape/Rect.jsx';\nimport _Triangle from './shape/Triangle.jsx';\n\nimport _Image from './Image.jsx';\nimport _Text from './Text.jsx';\nimport _Itext from './IText.jsx';\n\nimport _imageFilter from './ImageFilters.js';\nimport _color from './Color.js';\n\n// Main Bundle\nexport default {\n\tStaticCanvas: _StaticCanvas,\n\tCanvas: _Canvas,\n\n\tCircle: _Circle,\n\tEllipse: _Ellipse,\n\tLine: _Line,\n\tPath: _Path,\n\tPathGroup: _PathGroup,\n\tPolygon: _Polygon,\n\tPolyline: _Polyline,\n\tRect: _Rect,\n\tTriangle: _Triangle,\n\n\tImage: _Image,\n\tText: _Text,\n\tItext: _Itext,\n\n\timageFilter: _imageFilter,\n\tcolor: _color,\n};\n\n// Canvas\nexport let StaticCanvas = _StaticCanvas;\nexport let Canvas = _Canvas;\n\n// Shape\nexport let Circle = _Circle;\nexport let Ellipse = _Ellipse;\nexport let Line = _Line;\nexport let Path = _Path;\nexport let PathGroup = _PathGroup;\nexport let Polygon = _Polygon;\nexport let Polyline = _Polyline;\nexport let Rect = _Rect;\nexport let Triangle = _Triangle;\n\nexport let Image = _Image;\nexport let Text = _Text;\nexport let Itext = _Itext;\n\n// utils\nexport let imageFilter = _imageFilter;\nexport let color = _color; \n\n\n\n/** WEBPACK FOOTER **\n ** ./src/react-fabric.js\n **/","/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.7.20\" };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require(\"jsdom\")\n    .jsdom(\n      decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\")\n    );\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\n\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = Math.abs(minX - maxX),\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length,\n          forceAsync = true;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        }, forceAsync);\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      /* eslint-disable camelcase */\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      /* eslint-enable camelcase */\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (require('canvas').Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype, i, propName,\n          capitalizedPropName, setterName, getterName;\n\n      for (i = proto.stateProperties.length; i--; ) {\n\n        propName = proto.stateProperties[i];\n        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n        setterName = 'set' + capitalizedPropName;\n        getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.setAngle(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @param {Number} maximumSide biggest side allowed\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {*} searchElement\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @return {*}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n})();\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n        return (typeof event.clientX !== unknown ? event.clientX : 0);\n      },\n\n      pointerY = function(event) {\n        return (typeof event.clientY !== unknown ? event.clientY : 0);\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n              ? options.colorEasing(currentTime, duration)\n              : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata|clipPath|mask)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList;\n    for (var i = 0; i < nodeNames.length; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (var i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances) {\n      if (callback) {\n        callback(instances, options);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return reAllowedParents.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options) {\n          callback && callback(results, _options);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options) {\n        callback(results, _options);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter;\n\n    for (var i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = source[3] * 255;\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n   // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    grey:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true),\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (var i = 0; i < colorStops.length; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (var i = 0; i < colorStops.length; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (var i = 0; i < colorStops.length; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n            'offset=\"', (colorStop.offset * 100) + '%',\n            '\" style=\"stop-color:', colorStop.color,\n            (colorStop.opacity !== null ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} object\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        });\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    skipOffscreen: false,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function(canvasEl) {\n      var element = fabric.util.createCanvasElement(canvasEl);\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this._activeGroup, object, ignoreVpt = false, skipAbsolute = true;\n      this.viewportTransform = vpt;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeGroup) {\n        activeGroup.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.getWidth(), height = this.getHeight(),\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform.apply(ctx, this.viewportTransform);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      for (var i = 0, length = objects.length; i < length; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'];\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          ctx.save();\n          ctx.transform.apply(ctx, this.viewportTransform);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          viewBox,\n          'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n          this.createSVGFontFacesMarkup(),\n          this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance;\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * push single object svg representation in the markup\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n            ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n            'width=\"',\n              (repeat === 'repeat-y' || repeat === 'no-repeat'\n                ? filler.source.width\n                : this.width),\n            '\" height=\"',\n              (repeat === 'repeat-x' || repeat === 'no-repeat'\n                ? filler.source.height\n                : this.height),\n            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return;\n      }\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX, multSignY, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transfrom\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key enable multiple click selection\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          object, objsToRender = [], activeGroupObjects = [];\n\n      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeGroup) {\n          activeGroup._set('_objects', activeGroupObjects);\n          objsToRender.push(activeGroup);\n        }\n        activeObject && objsToRender.push(activeObject);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this.getActiveGroup()) {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners,\n          ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor;\n\n      target.hasBorders = target.transparentCorners = false;\n      target.selectionBackgroundColor = '';\n\n      ctx.save();\n      ctx.transform.apply(ctx, this.viewportTransform);\n      target.render(ctx);\n      ctx.restore();\n\n      target.active && target._renderControls(ctx);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      this.clearContext(ctx);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e[this.selectionKey])\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x / Math.abs(localMouse.x),\n          signY = localMouse.y / Math.abs(localMouse.y);\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRoated = true;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (t.target.angle === angle) {\n        hasRoated = false;\n      }\n      else {\n        t.target.angle = angle;\n      }\n\n      return hasRoated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          activeTarget, activeTargetSubs;\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n      if (activeGroup && !skipGroup && activeGroup === this._searchPossibleTargets([activeGroup], pointer)) {\n        this._fireOverOutEvents(activeGroup, e);\n        return activeGroup;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (activeObject && activeObject._findTargetCorner(pointer)) {\n        this._fireOverOutEvents(activeObject, e);\n        return activeObject;\n      }\n      if (activeObject && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          this._fireOverOutEvents(activeObject, e);\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      this._fireOverOutEvents(target, e);\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var overOpt, outOpt, hoveredTarget = this._hoveredTarget;\n      if (hoveredTarget !== target) {\n        overOpt = { e: e, target: target, previousTarget: this._hoveredTarget };\n        outOpt = { e: e, target: this._hoveredTarget, nextTarget: target };\n        this._hoveredTarget = target;\n      }\n      if (target) {\n        if (hoveredTarget !== target) {\n          if (hoveredTarget) {\n            this.fire('mouse:out', outOpt);\n            hoveredTarget.fire('mouseout', outOpt);\n          }\n          this.fire('mouse:over', overOpt);\n          target.fire('mouseover', overOpt);\n        }\n      }\n      else if (hoveredTarget) {\n        this.fire('mouse:out', outOpt);\n        hoveredTarget.fire('mouseout', outOpt);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      var obj = this._activeObject;\n      if (obj) {\n        obj.set('active', false);\n        if (object !== obj && obj.onDeselect && typeof obj.onDeselect === 'function') {\n          obj.onDeselect();\n        }\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActiveObject = this.getActiveObject();\n      if (currentActiveObject && currentActiveObject !== object) {\n        currentActiveObject.fire('deselected', { e: e });\n      }\n      this._setActiveObject(object);\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      var obj = this._activeObject;\n      if (obj) {\n        obj.set('active', false);\n        if (obj.onDeselect && typeof obj.onDeselect === 'function') {\n          obj.onDeselect();\n        }\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var activeObject = this._activeObject;\n      if (activeObject) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { e: e });\n        activeObject.fire('deselected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a specified one. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {fabric.Group} group Group to set as a current one\n     * @param {Event} e Event object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group and fire events If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveGroup: function (e) {\n      var g = this.getActiveGroup();\n      if (g) {\n        this.fire('before:selection:cleared', { e: e, target: g });\n        this._discardActiveGroup();\n        this.fire('selection:cleared', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parmater and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAllWithDispatch: function (e) {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this.discardActiveGroup(e);\n      this.discardActiveObject(e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup) {\n        activeGroup._renderControls(ctx);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {},\n            layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      var originalProperties;\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @ignore\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown, { passive: false });\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBinded) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this.eventsBinded = true;\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp, { passive: false });\n      addListener(fabric.document, 'touchmove', this._onMouseMove, { passive: false });\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, { passive: false });\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n\n      var target;\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', target, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', target, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      var searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', target ? target : null, LEFT_CLICK, isClick);\n      target && (target.__corner = 0);\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, targetObj, button, isClick) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target, e: e });\n        target.fire('modified', { e: e });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e);\n\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null, RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', target ? target : null, MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this.deactivateAllWithDispatch(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (this.selection && (!target || (!target.selectable && !target.isEditing))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n        var activeObject = this.getActiveObject();\n        if (target !== this.getActiveGroup() && target !== activeObject) {\n          this.deactivateAll();\n          if (target.selectable) {\n            activeObject && activeObject.fire('deselected', { e: e });\n            this.setActiveObject(target, e);\n          }\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', target ? target : null);\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeGroup = this.getActiveGroup(),\n          // only show proper corner when group selection is not active\n          corner = target._findTargetCorner\n                    && (!activeGroup || !activeGroup.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this._setCornerCursor(corner, target, e);\n      }\n      //actually unclear why it should return something\n      //is never evaluated\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target, e) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e[this.selectionKey] && target && target.selectable &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeGroup = this.getActiveGroup();\n\n      if (target === activeGroup) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeGroup) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0), e);\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group, e);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group, e: e });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.getWidth(),\n          origHeight = this.getHeight(),\n          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive;\n\n      this.viewportTransform = newVp;\n      // setting interactive to false avoid exporting controls\n      this.interactive && (this.interactive = false);\n      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n        // this.setDimensions is going to renderAll also;\n        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n      }\n      else {\n        this.renderAll();\n      }\n      var data = this.__toDataURL(format, quality, cropping);\n      originalInteractive && (this.interactive = originalInteractive);\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.renderAll()\n      this.setDimensions({ width: origWidth, height: origHeight });\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n                ? canvasEl.toDataURL('image/' + format, quality)\n                : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n\n    /**\n     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n     * @deprecated since 1.0.13\n     * @param {String} format (png|jpeg)\n     * @param {Number} multiplier\n     * @param {Number} quality (0..1)\n     * @return {String}\n     */\n    toDataURLWithMultiplier: function (format, multiplier, quality) {\n      return this.toDataURL({\n        format: format,\n        multiplier: multiplier,\n        quality: quality\n      });\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      options = options || { };\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          maximumSide = fabric.cacheSideLimit,\n          width = dims.width, height = dims.height,\n          ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal, maximumSide),\n          capValue = fabric.util.capValue, max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n      }\n      else if (width < min) {\n        dims.width = min;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n      }\n      else if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var target = this.canvas._currentTransform.target,\n            action = this.canvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.max(Math.ceil(width + additionalWidth), minCacheSize);\n          canvas.height = Math.max(Math.ceil(height + additionalHeight), minCacheSize);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      this.angle && ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n      this.skewX && ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n      this.skewY && ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged && this.cacheProperties.indexOf(key) > -1) {\n        if (this.group) {\n          this.group.set('dirty', true);\n        }\n        this.dirty = true;\n      }\n\n      if (isChanged && this.group && this.stateProperties.indexOf(key) > -1) {\n        this.group.set('dirty', true);\n      }\n\n      if (key === 'width' || key === 'height') {\n        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache(noTransform)) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n        }\n        if (this.isCacheDirty(noTransform)) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext, noTransform);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx, noTransform);\n        if (noTransform && this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * This function is created to be subclassed by custom classes.\n     * since 1.7.12\n     * @type function\n     * @return false\n     */\n    needsItsOwnCache: function() {\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @param {Boolean} noTransform if rendereing in pathGroup, caching is not supported at object level\n     * @return {Boolean}\n     */\n    shouldCache: function(noTransform) {\n      return !noTransform && this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx, noTransform) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._render(ctx, noTransform);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderControls: function(ctx) {\n      if (!this.active || (this.group && this.group !== this.canvas.getActiveGroup())) {\n        return;\n      }\n\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (this.group && this.group === this.canvas.getActiveGroup()) {\n        ctx.rotate(degreesToRadians(options.angle));\n        this.drawBordersInGroup(ctx, options);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        this.drawBorders(ctx);\n      }\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler.toLive) {\n        return;\n      }\n      var transform = filler.gradientTransform || filler.patternTransform;\n      if (transform) {\n        ctx.transform.apply(ctx, transform);\n      }\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance, some objects are async, so using callback method will work for every object.\n     * Using the direct return does not work for images and groups.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      if (this.canvas) {\n        if (this.group && this.group === this.canvas._activeGroup) {\n          this.group.remove(this);\n        }\n        this.canvas.remove(this);\n      }\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, forceAsync, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    if (forceAsync) {\n      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n        if (typeof patterns[0] !== 'undefined') {\n          object.fill = patterns[0];\n        }\n        if (typeof patterns[1] !== 'undefined') {\n          object.stroke = patterns[1];\n        }\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    }\n    else {\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n      return instance;\n    }\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n\n    /**\n    * Callback; invoked right before object is about to go from active to inactive\n    */\n    onDeselect: function() {\n      /* NOOP */\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n            this.getCoords(absolute, calculate),\n            other.getCoords(absolute, calculate)\n          );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n        calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n      ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appear on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true)) {\n        return true;\n      }\n      // worst case scenario the object is so big that contanins the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n     // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * to be renamed in 2.0\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = absolute ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = absolute ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!absolute) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        // trying to keep rounding error small, ugly but it works.\n        if (cos === 6.123233995736766e-17 || cos === -1.8369701987210297e-16) {\n          cos = 0;\n        }\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      var center = this.getCenterPoint(),\n          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n          matrix;\n      if (this.group && !skipGroup) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), translateMatrix);\n      }\n      else {\n        matrix = translateMatrix;\n      }\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      if (this.group && this.group.type === 'path-group') {\n        return '';\n      }\n      var toFixed = fabric.util.toFixed,\n          angle = this.getAngle(),\n          skewX = (this.getSkewX() % 360),\n          skewY = (this.getSkewY() % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      /* eslint-disable camelcase */\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n      /* eslint-enable camelcase */\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor || this.group || !this.active ||\n        (this.canvas && !this.canvas.interactive)) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      ctx.strokeStyle = this.borderColor;\n      this._setLineDash(ctx, this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, this.borderDashArray, null);\n      ctx.strokeStyle = this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'x1',\n    'x2',\n    'y1',\n    'y2'\n  );\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint(),\n            offset = this.strokeWidth / 2;\n        ctx.translate(\n          cp.x - (this.strokeLineCap === 'butt' && this.height === 0 ? 0 : offset),\n          cp.y - (this.strokeLineCap === 'butt' && this.width === 0 ? 0 : offset)\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ', this.getSvgId(),\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    options.originX = 'left';\n    options.originY = 'top';\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object, callback, forceAsync) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    var line = fabric.Object._fromObject('Line', options, _callback, forceAsync, 'points');\n    if (line) {\n      delete line.points;\n    }\n    return line;\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'radius'\n  );\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('radius', options && options.radius || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ', this.getSvgId(),\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Circle', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('width', options && options.width || 100)\n          .set('height', options && options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Triangle}\n   */\n  fabric.Triangle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Triangle', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'rx',\n    'ry'\n  );\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Ellipse', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('rx', 'ry');\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('rx', 'ry');\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ', this.getSvgId(),\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Rect', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('points');\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n      this.pathOffset = {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n      this.minX = minX || 0;\n      this.minY = minY || 0;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [],\n          diffX = 0,\n          diffY = 0,\n          markup = this._createBaseSVGMarkup();\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        diffX = this.pathOffset.x;\n        diffY = this.pathOffset.y;\n      }\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    commonRender: function(ctx, noTransform) {\n      var point, len = this.points.length,\n          x = noTransform ? 0 : this.pathOffset.x,\n          y = noTransform ? 0 : this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polyline', object, callback, forceAsync, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polygon', object, callback, forceAsync, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('path');\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('path', 'fillRule');\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    stateProperties: stateProperties,\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<path ', this.getSvgId(),\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   */\n  fabric.Path.fromObject = function(object, callback, forceAsync) {\n    // remove this pattern rom 2.0, accept just object.\n    var path;\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var pathUrl = object.path;\n        path = elements[0];\n        delete object.path;\n\n        path.setOptions(object);\n        path.setSourcePath(pathUrl);\n\n        callback && callback(path);\n      });\n    }\n    else {\n      return fabric.Object._fromObject('Path', object, callback, forceAsync, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Pathgroups are container, do not render anything on theyr own, ence no cache properties\n     * @type Boolean\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [], yC = [], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      ctx.save();\n      ctx.translate(-this.width / 2, -this.height / 2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n      this.caching = parentCache;\n      if (parentCache) {\n        for (var i = 0, len = this.paths.length; i < len; i++) {\n          if (this.paths[i].willDrawShadow()) {\n            this.caching = false;\n            return false;\n          }\n        }\n      }\n      return parentCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return true;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isCaching: function() {\n      return this.caching || this.group && this.group.isCaching();\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {*} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var pathsToObject = this.paths.map(function(path) {\n        var originalDefaults = path.includeDefaultValues;\n        path.includeDefaultValues = path.group.includeDefaultValues;\n        var obj = path.toObject(propertiesToInclude);\n        path.includeDefaultValues = originalDefaults;\n        return obj;\n      });\n      var o = extend(this.callSuper('toObject', ['sourcePath'].concat(propertiesToInclude)), {\n        paths: pathsToObject\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(),\n        'style=\"', this.getSvgStyles(), '\" ',\n        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n        '>\\n'\n      );\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push('\\t', objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = this.getObjects()[0].get('fill') || '';\n      if (typeof firstPathFill !== 'string') {\n        return false;\n      }\n      firstPathFill = firstPathFill.toLowerCase();\n      return this.getObjects().every(function(path) {\n        var pathFill = path.get('fill') || '';\n        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    var originalPaths = object.paths;\n    delete object.paths;\n    if (typeof originalPaths === 'string') {\n      fabric.loadSVGFromURL(originalPaths, function (elements) {\n        var pathUrl = originalPaths;\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n        object.paths = originalPaths;\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(originalPaths, function(enlivenedObjects) {\n        var pathGroup = new fabric.PathGroup(enlivenedObjects, object);\n        object.paths = originalPaths;\n        callback(pathGroup);\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Boolean\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n        this._updateObjectsACoords();\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      var center = this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, center, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      stroke:           true,\n      strokeWidth:      true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toDatalessObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not.\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var parentCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isCaching());\n      this.caching = parentCache;\n      if (parentCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.caching = false;\n            return false;\n          }\n        }\n      }\n      return parentCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.callSuper('willDrawShadow')) {\n        return true;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isCaching: function() {\n      return this.caching || this.group && this.group.isCaching();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {*}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'alignX',\n    'alignY',\n    'meetOrSlice'\n  );\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 can be used in case we want to scale with some filter above\n     * the natural image dimensions\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options, callback) {\n      options || (options = { });\n      this.filters = [];\n      this.resizeFilters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options, callback);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n\n      var _callback, _this;\n\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.resizeFilters.length === 0) {\n        _callback = callback;\n      }\n      else {\n        _this = this;\n        _callback = function() {\n          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n        };\n      }\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(_callback);\n      }\n      else if (_callback) {\n        _callback(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [], resizeFilters = [],\n          scaleX = 1, scaleY = 1;\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          if (filterObj.type === 'Resize') {\n            scaleX *= filterObj.scaleX;\n            scaleY *= filterObj.scaleY;\n          }\n          filters.push(filterObj.toObject());\n        }\n      });\n\n      this.resizeFilters.forEach(function(filterObj) {\n        filterObj && resizeFilters.push(filterObj.toObject());\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n          resizeFilters: resizeFilters,\n        });\n\n      object.width /= scaleX;\n      object.height /= scaleY;\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none', filtered = true;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        return fabric.isLikelyNode ? element._src : element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @param {Array} filters to be applied\n     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n     * @param {Boolean} forResizing\n     * @return {CanvasElement} canvasEl to be drawn immediately\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var replacement = fabric.util.createImage(),\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n          minimumScale = this.minimumScaleTrigger / retinaScaling,\n          _this = this, scaleX, scaleY;\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback(this);\n        return imgElement;\n      }\n\n      var canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = imgElement.width;\n      canvasEl.height = imgElement.height;\n      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\n      filters.forEach(function(filter) {\n        if (!filter) {\n          return;\n        }\n        if (forResizing) {\n          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n          if (scaleX * retinaScaling < 1) {\n            scaleX *= retinaScaling;\n          }\n          if (scaleY * retinaScaling < 1) {\n            scaleY *= retinaScaling;\n          }\n        }\n        else {\n          scaleX = filter.scaleX;\n          scaleY = filter.scaleY;\n        }\n        filter.applyTo(canvasEl, scaleX, scaleY);\n        if (!forResizing && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback(_this);\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback(_this);\n          replacement.onload = canvasEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._stroke(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options, callback) {\n      this.setElement(fabric.util.getById(element), callback, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [];\n          return new fabric.Image(img, object, callback);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        preserveAR;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n      extend(parsedAttributes, preserveAR);\n    }\n\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n          output = context.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt;\n\n      for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n   // eslint-disable-next-line max-len\n  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Grayscale';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Invert';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = canvasEl.width;\n      maskCanvasEl.height = canvasEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 0;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i += 4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia2';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Blend} Instance of fabric.Image.filters.Blend\n   */\n  fabric.Image.filters.Blend.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n      if (scaleX === 1 && scaleY === 1) {\n        return;\n      }\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = oW, stepH = oH,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      dW = floor(dW);\n      dH = floor(dH);\n      tmpCanvas.width = max(dW, oW);\n      tmpCanvas.height = max(dH, oH);\n\n      if (dW > oW) {\n        multW = 2;\n        signW = -1;\n      }\n      if (dH > oH) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, oW, oH);\n      canvasEl.width = max(dW, oW);\n      canvasEl.height = max(dH, oH);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, oW, oH);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n     * @param {Object} [options] Options object\n     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n     */\n    initialize: function( options ) {\n      options || ( options = {} );\n      this.matrix = options.matrix || [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function( canvasEl ) {\n      var context = canvasEl.getContext( '2d' ),\n          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n          data = imageData.data,\n          iLen = data.length,\n          i,\n          r,\n          g,\n          b,\n          a,\n          m = this.matrix;\n\n      for ( i = 0; i < iLen; i += 4 ) {\n        r = data[ i ];\n        g = data[ i + 1 ];\n        b = data[ i + 2 ];\n        a = data[ i + 3 ];\n\n        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n      }\n\n      context.putImageData( imageData, 0, 0 );\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        type: this.type,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.contrast = options.contrast || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        contrast: this.contrast\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturate({\n   *   saturate: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.saturate = options.saturate || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          max, adjust = -this.saturate * 0.01;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        saturate: this.saturate\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n      MIN_TEXT_WIDTH = 2;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing'\n  );\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing',\n    'styles'\n  );\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign'\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:      stateProperties,\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties:      cacheProperties,\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this._initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n      this.height = this._getTextHeight(ctx);\n      this.setCoords();\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._renderTextLinesBackground(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4), _char, width;\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      if (this.charSpacing !== 0) {\n        var additionalSpace = this._getWidthOfCharSpacing();\n        chars = chars.split('');\n        for (var i = 0, len = chars.length; i < len; i++) {\n          _char = chars[i];\n          width = ctx.measureText(_char).width + additionalSpace;\n          ctx[method](_char, left, top);\n          left += width > 0 ? width : 0;\n        }\n      }\n      else {\n        ctx[method](chars, left, top);\n      }\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      var lineWidth = this._getLineWidth(ctx, lineIndex);\n      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      // stretch the line\n      var words = line.split(/\\s+/),\n          charOffset = 0,\n          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          leftOffset = 0, word;\n\n      for (var i = 0, len = words.length; i < len; i++) {\n        while (line[charOffset] === ' ' && charOffset < line.length) {\n          charOffset++;\n        }\n        word = words[i];\n        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n        charOffset += word.length;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} word\n     */\n    _getWidthOfWords: function (ctx, word) {\n      var width = ctx.measureText(word).width, charCount, additionalSpace;\n      if (this.charSpacing !== 0) {\n        charCount = word.split('').length;\n        additionalSpace = charCount * this._getWidthOfCharSpacing();\n        width += additionalSpace;\n      }\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * Returns true because text has no style\n     */\n    isEmptyStyles: function() {\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight,\n            lineWidth = this._getLineWidth(ctx, i),\n            leftOffset = this._getLineLeftOffset(lineWidth);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && this.isEmptyStyles()) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line\n     */\n    _getHeightOfLine: function() {\n      return this._getHeightOfSingleLine() * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line without lineHeight\n     */\n    _getHeightOfSingleLine: function() {\n      return this.fontSize * this._fontSizeMult;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        lineWidth = this._getLineWidth(ctx, i);\n        if (lineWidth > 0) {\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\n        this.dirty = true;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n      }\n\n      var width, wordCount, line = this._textLines[lineIndex];\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        width = this._measureLine(ctx, lineIndex);\n      }\n      this.__lineWidths[lineIndex] = width;\n\n      if (width && this.textAlign === 'justify') {\n        wordCount = line.split(/\\s+/);\n        if (wordCount.length > 1) {\n          this.__lineWidths[lineIndex] = -1;\n        }\n      }\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      var line = this._textLines[lineIndex],\n          width = ctx.measureText(line).width,\n          additionalSpace = 0, charCount, finalWidth;\n      if (this.charSpacing !== 0) {\n        charCount = line.split('').length;\n        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n      }\n      finalWidth = width + additionalSpace;\n      return finalWidth > 0 ? finalWidth : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i);\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this._setTextStyles(ctx);\n        this._initDimensions(ctx);\n      }\n      this.callSuper('render', ctx, noTransform);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'textDecoration',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing'\n      ].concat(propertiesToInclude);\n      return this.callSuper('toObject', additionalProperties);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      if (!this.ctx) {\n        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      }\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n          style, '>\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text xml:space=\"preserve\" ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n            textAndBg.textSpans.join(''),\n          '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      if (this.textAlign === 'justify') {\n        // i call from here to do not intefere with IText\n        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n        return;\n      }\n      textSpans.push(\n        '\\t\\t\\t<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>\\n'\n      );\n    },\n\n    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this._setTextStyles(ctx);\n\n      var line = this._textLines[i],\n          words = line.split(/\\s+/),\n          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          word, attributes = this._getFillAttributes(this.fill),\n          len;\n\n      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\n      for (i = 0, len = words.length; i < len; i++) {\n        word = words[i];\n        textSpans.push(\n          '\\t\\t\\t<tspan x=\"',\n            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n            'y=\"',\n            toFixed(yPos, NUM_FRACTION_DIGITS),\n            '\" ',\n            // doing this on <tspan> elements since setting opacity\n            // on containing <text> one doesn't work in Illustrator\n            attributes, '>',\n            fabric.util.string.escapeXml(word),\n          '</tspan>\\n'\n        );\n        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n      }\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        top/left properties in Fabric correspond to center point of text bounding box\n    */\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Text', object, callback, forceAsync, 'text');\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__widthOfSpace = [];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (!ctx) {\n        this.clearContextTop();\n      }\n      this.callSuper('_initDimensions', ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      this.clearContextTop();\n      this.callSuper('render', ctx, noTransform);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      var chars = this.text.split(''),\n          boundaries, ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset = 0,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: leftOffset > 0 ? leftOffset : 0,\n        lineLeft: lineLeftOffset\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = boundaries.leftOffset,\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset - cursorWidth / 2,\n        boundaries.top + boundaries.topOffset,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n          if (j === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n          if (end.charIndex === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth > 0 ? boxWidth : 0,\n          lineHeight);\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      charOffset = charOffset || 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          prevStyle,\n          thisStyle,\n          charsToRender = '';\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i - charOffset];\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight, shouldFill, shouldStroke,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset, textDecoration, chars, additionalSpace, _charWidth;\n\n      if (decl) {\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n        shouldStroke = decl.stroke;\n        shouldFill = decl.fill;\n        textDecoration = decl.textDecoration;\n      }\n      else {\n        charHeight = this.fontSize;\n      }\n\n      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\n      decl && ctx.save();\n\n      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n      textDecoration = textDecoration || this.textDecoration;\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (this.charSpacing !== 0) {\n        additionalSpace = this._getWidthOfCharSpacing();\n        chars = _char.split('');\n        charWidth = 0;\n        for (var j = 0, len = chars.length, jChar; j < len; j++) {\n          jChar = chars[j];\n          shouldFill && ctx.fillText(jChar, left + charWidth, top);\n          shouldStroke && ctx.strokeText(jChar, left + charWidth, top);\n          _charWidth = ctx.measureText(jChar).width + additionalSpace;\n          charWidth += _charWidth > 0 ? _charWidth : 0;\n        }\n      }\n      else {\n        shouldFill && ctx.fillText(_char, left, top);\n        shouldStroke && ctx.strokeText(_char, left, top);\n      }\n\n      if (textDecoration || textDecoration !== '') {\n        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n      }\n\n      decl && ctx.restore();\n      ctx.translate(charWidth, 0);\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\n      if (!textDecoration) {\n        return;\n      }\n\n      var decorationWeight = charHeight / 15,\n          positions = {\n            underline: top + charHeight / 10,\n            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n          },\n          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\n      for (i = 0; i < decorations.length; i++) {\n        decoration = decorations[i];\n        if (textDecoration.indexOf(decoration) > -1) {\n          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      this.callSuper('_renderTextLinesBackground', ctx);\n\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          colorCache = '',\n          line, _char, style, leftCache,\n          topCache, widthCache, heightCache;\n      ctx.save();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        line = this._textLines[i];\n\n        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        lineWidth = this._getLineWidth(ctx, i);\n        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n        leftCache = topCache = widthCache = heightCache = 0;\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          style = this._getStyleDeclaration(i, j) || {};\n\n          if (colorCache !== style.textBackgroundColor) {\n            if (heightCache && widthCache) {\n              ctx.fillStyle = colorCache;\n              ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n            }\n            leftCache = topCache = widthCache = heightCache = 0;\n            colorCache = style.textBackgroundColor || '';\n          }\n\n          if (!style.textBackgroundColor) {\n            colorCache = '';\n            continue;\n          }\n          _char = line[j];\n\n          if (colorCache === style.textBackgroundColor) {\n            colorCache = style.textBackgroundColor;\n            if (!leftCache) {\n              leftCache = leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j);\n            }\n            topCache = topOffset + lineTopOffset;\n            widthCache += this._getWidthOfChar(ctx, _char, i, j);\n            heightCache = heightOfLine / this.lineHeight;\n          }\n        }\n        // if a textBackgroundColor ends on the last character of a line\n        if (heightCache && widthCache) {\n          ctx.fillStyle = colorCache;\n          ctx.fillRect(leftCache, topCache, widthCache, heightCache);\n          leftCache = topCache = widthCache = heightCache = 0;\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {String} fontFamily name\n     * @return {Object} reference to cache\n     */\n    _getFontCache: function(fontFamily) {\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      return fabric.charWidthsCache[fontFamily];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n          styleDeclaration = clone(charDecl),\n          width, cacheProp, charWidthsCache;\n\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles for this char\n      // global style from object is always applyed and handled by save and restore\n      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\n      //if we want this._setShadow.call to work with styleDeclarion\n      //we have to add those references\n      if (styleDeclaration.shadow) {\n        styleDeclaration.scaleX = this.scaleX;\n        styleDeclaration.scaleY = this.scaleY;\n        styleDeclaration.canvas = this.canvas;\n        styleDeclaration.getObjectScaling = this.getObjectScaling;\n        this._setShadow.call(styleDeclaration, ctx);\n      }\n\n      if (!this.caching || !charWidthsCache[cacheProp]) {\n        width = ctx.measureText(_char).width;\n        this.caching && (charWidthsCache[cacheProp] = width);\n        return width;\n      }\n\n      return charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n      ctx.save();\n      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n      }\n      ctx.restore();\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      this._isMeasuring = true;\n      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      if (this.charSpacing !== 0) {\n        width -= this._getWidthOfCharSpacing();\n      }\n      this._isMeasuring = false;\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this._getHeightOfLine(ctx, i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clone(this.styles, true)\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('IText', object, callback, forceAsync, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n      this.callSuper('onDeselect');\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear) {\n        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this.text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n      this.selected = true;\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.renderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea || this.inCompositionMode) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n        this.hiddenTextarea.style.fontSize = style.fontSize;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var chars = this.text.split(''),\n          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n          cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.selectionStart = start;\n      this.selectionEnd = start;\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n      }\n      //short circuit for block paste\n      if (!useCopiedStyle && this.isEmptyStyles()) {\n        this.insertChar(_chars, false);\n        return;\n      }\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.util.object.clone(fabric.copiedTextStyle[i], true);\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.selectionStart += _char.length;\n      this.selectionEnd = this.selectionStart;\n      if (skipUpdate) {\n        return;\n      }\n      this._updateTextarea();\n      this.setCoords();\n      this._fireSelectionChanged();\n      this.fire('changed');\n      this.restartCursorIfNeeded();\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.renderAll();\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine && currentCharStyle) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        var somethingAdded = false;\n        for (var index in this.styles[lineIndex]) {\n          var numIndex = parseInt(index, 10);\n          if (numIndex >= charIndex) {\n            somethingAdded = true;\n            newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        somethingAdded && (this.styles[lineIndex + 1] = newLineStyles);\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      var newStyle = style || clone(currentLineStyles[charIndex - 1]);\n      newStyle && (this.styles[lineIndex][charIndex] = newStyle);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward or downward\n      var clonedStyles = clone(this.styles);\n      for (var line in clonedStyles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine <= lineIndex) {\n          delete clonedStyles[numericLine];\n        }\n      }\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    },\n\n    _getTextOnPreviousLine: function(lIndex) {\n      return this._textLines[lIndex - 1];\n    },\n\n    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n        }\n        var currentLineStylesCloned = clone(currentLineStyles);\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer, options.e)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e) || (options.e.button && options.e.button !== 1)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.renderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        offsetEnd = this.selectionEnd || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff, charsToInsert, start;\n    if (newTextLength > textLength) {\n      //we added some character\n      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n      diff = newTextLength - textLength;\n      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n    }\n    else {\n      //we selected a portion of text and then input something else.\n      //Internet explorer does not trigger this else\n      diff = newTextLength - textLength + offsetEnd - offset;\n      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    }\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n    this.prevCompositionLength = 0;\n    this.compositionStart = this.selectionStart;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  /**\n   * Composition update\n   */\n  onCompositionUpdate: function(e) {\n    var data = e.data;\n    this.selectionStart = this.compositionStart;\n    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n    this.insertChars(data, false);\n    this.prevCompositionLength = data.length;\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd);\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy(e);\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\n    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n      _char = textBeforeCursor[i];\n      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * find for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        textOnLine = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\n      var _char = textOnLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnLine += widthOfChar;\n\n      if (widthOfCharsOnLine > width) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnLine - widthOfChar,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = textOnLine.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n    ? this.selectionStart + offset\n    : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this.text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.set('dirty', true);\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this._getLineStyle(lineIndex)) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n'\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text',\n        getSvgFilter: fabric.Object.prototype.getSvgFilter\n      }, styleDecl));\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n        'style=\"', fillStyles, '\">',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingY: true,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n\n      this.callSuper('initialize', text, options);\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n      // add width to this list of props that effect line wrapping.\n      this._dimensionAffectingProps.push('width');\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n        this.clearContextTop();\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines(ctx);\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n      this.setCoords();\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ' && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return returnCloneOrEmpty ? { } : null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = text.length; i < len; i++) {\n        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var lineWidth        = 0,\n          lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n\n      for (var i = 0; i < words.length; i++) {\n        word = words[i];\n        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= this.width && !lineJustStarted) {\n          lines.push(line);\n          line = '';\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line += infix;\n        }\n        line += word;\n\n        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && lines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return lines;\n    },\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function(ctx) {\n      ctx = ctx || this.ctx;\n      var originalAlign = this.textAlign;\n      this._styleMap = null;\n      ctx.save();\n      this._setTextStyles(ctx);\n      this.textAlign = 'left';\n      var lines = this._wrapText(ctx, this.text);\n      this.textAlign = originalAlign;\n      ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {*} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Textbox', object, callback, forceAsync, 'text');\n  };\n\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var map = this._styleMap[lineIndex];\n      // adjust line index\n      lineIndex = map.line;\n      fabric.IText.prototype.shiftLineStyles.call(this, lineIndex, offset);\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = require('xmldom').DOMParser,\n      URL = require('url'),\n      HTTP = require('http'),\n      HTTPS = require('https'),\n\n      Canvas = require('canvas'),\n      Image = require('canvas').Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      // eslint-disable-next-line no-eval\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  // fabric.util.createCanvasElement = function(_, width, height) {\n  //   return new Canvas(width, height);\n  // }\n\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n    options = options || { };\n    options.nodeCanvas = nodeCanvas;\n    options.nodeCacheCanvas = nodeCacheCanvas;\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n    fabricCanvas.Font = Canvas.Font;\n    return fabricCanvas;\n  };\n\n  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n    el = el || fabric.document.createElement('canvas');\n    this.nodeCanvas = new Canvas(el.width, el.height);\n    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n    originaInitStatic.call(this, el, options);\n    this.contextContainer = this.nodeCanvas.getContext('2d');\n    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n    this.Font = Canvas.Font;\n  };\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n    if (!this._isRetinaScaling()) {\n      return;\n    }\n\n    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n  }\n\n  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n    origSetBackstoreDimension.call(this, prop, value);\n    this.nodeCanvas[prop] = value;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  }\n\n})();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fabric/dist/fabric.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prop-types/index.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {fabric} from 'fabric';\nimport diff from 'deep-diff';\nimport observable from '../mixin/observable.js';\n\nexport default class FabricObject extends React.Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\t// Observable\n\t\tobservable(this);\n\n\t\t//Object\n\t\tthis.adjustPosition = to => this.state.object &&\n\t\t\tthis.state.object.adjustPosition(to);\n\t\tthis.animate = (property, value, opts) => this.state.object &&\n\t\t\tthis.state.object.animate(property, value, opts);\n\t\tthis.bringForward = intersecting => this.state.object &&\n\t\t\tthis.state.object.bringForward(intersecting);\n\t\tthis.bringToFront = () => this.state.object &&\n\t\t\tthis.state.object.bringToFront();\n\t\tthis.center = () => this.state.object &&\n\t\t\tthis.state.object.center();\n\t\tthis.centerH = () => this.state.object &&\n\t\t\tthis.state.object.centerH();\n\t\tthis.centerV = () => this.state.object &&\n\t\t\tthis.state.object.centerV();\n\t\tthis.clone = (callback, propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.clone(callback, propertiesToInclude);\n\t\tthis.cloneAsImage = (callback) => this.state.object &&\n\t\t\tthis.state.object.cloneAsImage(callback);\n\t\tthis.complexity = () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t\tthis.containsPoint = (point) => this.state.object &&\n\t\t\tthis.state.object.containsPoint(point);\n\t\tthis.drawBorders = (ctx) => this.state.object &&\n\t\t\tthis.state.object.drawBorders(ctx);\n\t\tthis.drawControls = (ctx) => this.state.object &&\n\t\t\tthis.state.object.drawControls(ctx);\n\t\tthis.fxStraighten = (callbacks) => this.state.object &&\n\t\t\tthis.state.object.fxStraighten(callbacks);\n\t\tthis.get = (property) => this.state.object &&\n\t\t\tthis.state.object.get(property);\n\t\tthis.getAngle = () => this.state.object &&\n\t\t\tthis.state.object.getAngle();\n\t\tthis.getBoundingRect = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRect();\n\t\tthis.getBoundingRectHeight = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRectHeight();\n\t\tthis.getBoundingRectWidth = () => this.state.object &&\n\t\t\tthis.state.object.getBoundingRectWidth();\n\t\tthis.getCenterPoint = () => this.state.object &&\n\t\t\tthis.state.object.getCenterPoint();\n\t\tthis.getClipTo = () => this.state.object &&\n\t\t\tthis.state.object.getClipTo();\n\t\tthis.getFill = () => this.state.object &&\n\t\t\tthis.state.object.getFill();\n\t\tthis.getFlipX = () => this.state.object &&\n\t\t\tthis.state.object.getFlipX();\n\t\tthis.getFlipY = () => this.state.object &&\n\t\t\tthis.state.object.getFlipY();\n\t\tthis.getLeft = () => this.state.object &&\n\t\t\tthis.state.object.getLeft();\n\t\tthis.getLocalPointer = (e, pointer) => this.state.object &&\n\t\t\tthis.state.object.getLocalPointer(e, pointer);\n\t\tthis.getOpacity = () => this.state.object &&\n\t\t\tthis.state.object.getOpacity();\n\t\tthis.getOriginX = () => this.state.object &&\n\t\t\tthis.state.object.getOriginX();\n\t\tthis.getOriginY = () => this.state.object &&\n\t\t\tthis.state.object.getOriginY();\n\t\tthis.getPointByOrigin = (originX, originY) => this.state.object &&\n\t\t\tthis.state.object.getPointByOrigin(originX, originY);\n\n\t\tthis.getScaleX = () => this.state.object &&\n\t\t\tthis.state.object.getScaleX();\n\t\tthis.getScaleY = () => this.state.object &&\n\t\t\tthis.state.object.getScaleY();\n\t\tthis.getShadow = () => this.state.object &&\n\t\t\tthis.state.object.getShadow();\n\t\tthis.getStrokeWidth = () => this.state.object &&\n\t\t\tthis.state.object.getStrokeWidth();\n\t\tthis.getSvgStyles = () => this.state.object &&\n\t\t\tthis.state.object.getSvgStyles();\n\t\tthis.getSvgTransform = () => this.state.object &&\n\t\t\tthis.state.object.getSvgTransform();\n\t\tthis.getSvgTransformMatrix = () => this.state.object &&\n\t\t\tthis.state.object.getSvgTransformMatrix();\n\t\tthis.getTop = () => this.state.object &&\n\t\t\tthis.state.object.getTop();\n\t\tthis.getTransformMatrix = () => this.state.object &&\n\t\t\tthis.state.object.getTransformMatrix();\n\t\tthis.getViewportTransform = () => this.state.object &&\n\t\t\tthis.state.object.getViewportTransform();\n\t\tthis.getVisible = () => this.state.object &&\n\t\t\tthis.state.object.getVisible();\n\t\tthis.getWidth = () => this.state.object &&\n\t\t\tthis.state.object.getWidth();\n\t\tthis.hasStateChanged = () => this.state.object &&\n\t\t\tthis.state.object.hasStateChanged();\n\t\tthis.intersectsWithObject = (other) => this.state.object &&\n\t\t\tthis.state.object.intersectsWithObject(other);\n\t\tthis.intersectsWithRect = (pointTL, pointBR) => this.state.object &&\n\t\t\tthis.state.object.intersectsWithRect(pointTL, pointBR);\n\t\tthis.isContainedWithinObject = (other) => this.state.object &&\n\t\t\tthis.state.object.isContainedWithinObject(other);\n\t\tthis.isContainedWithinRect = (pointTL, pointBR) => this.state.object &&\n\t\t\tthis.state.object.isContainedWithinRect(pointTL, pointBR);\n\t\tthis.isControlVisible = (controlName) => this.state.object &&\n\t\t\tthis.state.object.isControlVisible(controlName);\n\t\tthis.isType = (type) => this.state.object &&\n\t\t\tthis.state.object.isType(type);\n\t\tthis.moveTo = (index) => this.state.object &&\n\t\t\tthis.state.object.moveTo(index);\n\t\tthis.remove = () => this.state.object &&\n\t\t\tthis.state.object.remove();\n\t\tthis.renderf = (ctx, noTransform) => this.state.object &&\n\t\t\tthis.state.object.render(ctx, noTransform);\n\t\tthis.saveState = (options) => this.state.object &&\n\t\t\tthis.state.object.saveState(options);\n\t\tthis.scale = (value) => this.state.object &&\n\t\t\tthis.state.object.scale(value);\n\t\tthis.scaleToHeight = (value) => this.state.object &&\n\t\t\tthis.state.object.scaleToHeight(value);\n\t\tthis.scaleToWidth = (value) => this.state.object &&\n\t\t\tthis.state.object.scaleToWidth(value);\n\t\tthis.sendBackwards = () => this.state.object &&\n\t\t\tthis.state.object.sendBackwards();\n\t\tthis.sendToBack = () => this.state.object &&\n\t\t\tthis.state.object.sendToBack();\n\t\tthis.set = (key, value) => this.state.object &&\n\t\t\tthis.state.object.set(key, value);\n\t\tthis.setAngle = (value) => this.state.object &&\n\t\t\tthis.state.object.setAngle(value);\n\t\tthis.setClipTo = (clipTo) => this.state.object &&\n\t\t\tthis.state.object.setClipTo(clipTo);\n\t\tthis.setColor = (color) => this.state.object &&\n\t\t\tthis.state.object.setColor(color);\n\t\tthis.setControlsVisibility = (options) => this.state.object &&\n\t\t\tthis.state.object.setControlsVisibility(options);\n\t\tthis.setControlVisible = (controlName, visible) => this.state.object &&\n\t\t\tthis.state.object.setControlVisible(controlName, visible);\n\t\tthis.setCoords = (value) => this.state.object &&\n\t\t\tthis.state.object.setCoords(value);\n\t\tthis.setFill = (value) => this.state.object &&\n\t\t\tthis.state.object.setFill(value);\n\t\tthis.setFlipX = (value) => this.state.object &&\n\t\t\tthis.state.object.setFlipX(value);\n\t\tthis.setFlipY = (value) => this.state.object &&\n\t\t\tthis.state.object.setFlipY(value);\n\t\tthis.setGradient = (property, options) => this.state.object &&\n\t\t\tthis.state.object.setGradient(property, options);\n\t\tthis.setLeft = (value) => this.state.object &&\n\t\t\tthis.state.object.setLeft(value);\n\t\tthis.setOpacity = (value) => this.state.object &&\n\t\t\tthis.state.object.setOpacity(value);\n\t\tthis.setOptions = (options) => this.state.object &&\n\t\t\tthis.state.object.setOptions(options);\n\t\tthis.setOriginX = (value) => this.state.object &&\n\t\t\tthis.state.object.setOriginX(value);\n\t\tthis.setOriginY = (value) => this.state.object &&\n\t\t\tthis.state.object.setOriginY(value);\n\t\tthis.setPatternFill = (options) => this.state.object &&\n\t\t\tthis.state.object.setPatternFill(options);\n\t\tthis.setPositionByOrigin = (pos, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.setPositionByOrigin(pos, originX, originY);\n\t\tthis.setScaleX = (value) => this.state.object &&\n\t\t\tthis.state.object.setScaleX(value);\n\t\tthis.setScaleY = (value) => this.state.object &&\n\t\t\tthis.state.object.setScaleY(value);\n\t\tthis.setShadow = (options) => this.state.object &&\n\t\t\tthis.state.object.setShadow(options);\n\t\tthis.setSourcePath = (value) => this.state.object &&\n\t\t\tthis.state.object.setSourcePath(value);\n\t\tthis.setStroke = (value) => this.state.object &&\n\t\t\tthis.state.object.setStroke(value);\n\t\tthis.setStrokeWidth = (value) => this.state.object &&\n\t\t\tthis.state.object.setStrokeWidth(value);\n\t\tthis.setTop = (value) => this.state.object &&\n\t\t\tthis.state.object.setTop(value);\n\t\tthis.setTransformMatrix = (transformMatrix) => this.state.object &&\n\t\t\tthis.state.object.setTransformMatrix(transformMatrix);\n\t\tthis.setupState = () => this.state.object &&\n\t\t\tthis.state.object.setupState(value);\n\t\tthis.setVisible = (value) => this.state.object &&\n\t\t\tthis.state.object.setVisible(value);\n\t\tthis.straighten = () => this.state.object &&\n\t\t\tthis.state.object.straighten();\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toDatalessObject();\n\t\tthis.toDataURL = () => this.state.object &&\n\t\t\tthis.state.object.toDataURL(options);\n\t\tthis.toggle = (property) => this.state.object &&\n\t\t\tthis.state.object.toggle(property);\n\t\tthis.toJSON = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toJSON(propertiesToInclude);\n\t\tthis.toLocalPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.toLocalPoint(point, originX, originY);\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.transform = (ctx, fromLeft) => this.state.object &&\n\t\t\tthis.state.object.transform(ctx, fromLeft);\n\t\tthis.translateToCenterPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.translateToCenterPoint(point, originX, originY);\n\t\tthis.translateToOriginPoint = (point, originX, originY) => this.state.object &&\n\t\t\tthis.state.object.translateToOriginPoint(point, originX, originY);\n\n\t\t// React\n\t\tthis.getObject = () => this.state.object;\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst difference = diff(this.props, nextProps);\n\t\tif (difference) {\n\t\t\tdifference.forEach(comparsion => {\n\t\t\t\tthis.set(comparsion.path[0], comparsion.rhs);\n\t\t\t});\n\t\t}\n\n\t\tthis.eventChanged(nextProps);\n\t}\n\n\tdraw(object, cb) {\n\t\tthis.setState({object}, () => {\n\t\t\tcb && cb(object);\n\t\t\t// canvas.add(object);\n\t\t\tthis.initEvent();\n\t\t});\n\t}\n\n\tinitEvent() {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tif (this.props.onAdded instanceof Function) {\n\t\t\tobject.on('added', this.props.onAdded);\n\t\t}\n\t\tif (this.props.onRemoved instanceof Function) {\n\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t}\n\t\tif (this.props.onSelected instanceof Function) {\n\t\t\tobject.on('selected', this.props.onSelected);\n\t\t}\n\t\tif (this.props.onModified instanceof Function) {\n\t\t\tobject.on('modified', this.props.onModified);\n\t\t}\n\t\tif (this.props.onRotating instanceof Function) {\n\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t}\n\t\tif (this.props.onScaling instanceof Function) {\n\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t}\n\t\tif (this.props.onMoving instanceof Function) {\n\t\t\tobject.on('moving', this.props.onMoving);\n\t\t}\n\t\tif (this.props.onMousedown instanceof Function) {\n\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t}\n\t\tif (this.props.onMouseup instanceof Function) {\n\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t}\n\n\t}\n\n\teventChanged(nextProps) {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tif (this.props.onAdded && !nextProps.onAdded) {\n\t\t\tobject.off('added');\n\t\t} else if (nextProps.onAdded instanceof Function) {\n\t\t\tobject.on('added', this.props.onAdded);\n\t\t}\n\n\t\tif (this.props.onRemoved && !nextProps.onRemoved) {\n\t\t\tobject.off('removed');\n\t\t} else if (nextProps.onRemoved instanceof Function) {\n\t\t\tobject.on('removed', this.props.onRemoved);\n\t\t}\n\n\t\tif (this.props.onSelected && !nextProps.onSelected) {\n\t\t\tobject.off('selected');\n\t\t} else if (nextProps.onSelected instanceof Function) {\n\t\t\tobject.on('selected', this.props.onSelected);\n\t\t}\n\n\t\tif (this.props.onModified && !nextProps.onModified) {\n\t\t\tobject.off('modified');\n\t\t} else if (nextProps.onModified instanceof Function) {\n\t\t\tobject.on('modified', this.props.onModified);\n\t\t}\n\n\t\tif (this.props.onRotating && !nextProps.onRotating) {\n\t\t\tobject.off('rotating');\n\t\t} else if (nextProps.onRotating instanceof Function) {\n\t\t\tobject.on('rotating', this.props.onRotating);\n\t\t}\n\n\t\tif (this.props.onScaling && !nextProps.onScaling) {\n\t\t\tobject.off('scaling');\n\t\t} else if (nextProps.onScaling instanceof Function) {\n\t\t\tobject.on('scaling', this.props.onScaling);\n\t\t}\n\n\t\tif (this.props.onMoving && !nextProps.onMoving) {\n\t\t\tobject.off('moving');\n\t\t} else if (nextProps.onMoving instanceof Function) {\n\t\t\tobject.on('moving', this.props.onMoving);\n\t\t}\n\n\t\tif (this.props.onMousedown && !nextProps.onMousedown) {\n\t\t\tobject.off('mousedown');\n\t\t} else if (nextProps.onMousedown instanceof Function) {\n\t\t\tobject.on('mousedown', this.props.onMousedown);\n\t\t}\n\n\t\tif (this.props.onMouseup && !nextProps.onMouseup) {\n\t\t\tobject.off('mouseup');\n\t\t} else if (nextProps.onMouseup instanceof Function) {\n\t\t\tobject.on('mouseup', this.props.onMouseup);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nFabricObject.__uid = fabric.Object.__uid;\nFabricObject.NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\nFabricObject.rotate = fabric.Object.rotate;\n\nFabricObject.propTypes = {\n\tangle: PropTypes.number,\n\tbackgroundColor: PropTypes.string,\n\tborderColor: PropTypes.string,\n\tborderOpacityWhenMoving: PropTypes.number,\n\tborderScaleFactor: PropTypes.number,\n\tcenteredRotation: PropTypes.bool,\n\tcenteredScaling: PropTypes.bool,\n\tclipTo: PropTypes.func,\n\tcornerColor: PropTypes.string,\n\tcornerSize: PropTypes.number,\n\tevented: PropTypes.bool,\n\tfill: PropTypes.string,\n\tfillRule: PropTypes.string,\n\tflipX: PropTypes.bool,\n\tflipY: PropTypes.bool,\n\tglobalCompositeOperation: PropTypes.string,\n\thasBorders: PropTypes.bool,\n\thasControls: PropTypes.bool,\n\thasRotatingPoint: PropTypes.bool,\n\theight: PropTypes.number,\n\thoverCursor: PropTypes.string,\n\tincludeDefaultValues: PropTypes.bool,\n\tleft: PropTypes.number,\n\tlockMovementX: PropTypes.bool,\n\tlockMovementY: PropTypes.bool,\n\tlockRotation: PropTypes.bool,\n\tlockScalingFlip: PropTypes.bool,\n\tlockScalingX: PropTypes.bool,\n\tlockScalingY: PropTypes.bool,\n\tlockUniScaling: PropTypes.bool,\n\tminScaleLimit: PropTypes.number,\n\toCoords: PropTypes.object,\n\topacity: PropTypes.number,\n\toriginX: PropTypes.oneOf(['left', 'right', 'center']),\n\toriginY: PropTypes.oneOf(['top', 'bottom', 'center']),\n\tpadding: PropTypes.number,\n\tperPixelTargetFind: PropTypes.bool,\n\trotatingPointOffset: PropTypes.number,\n\tscaleX: PropTypes.number,\n\tscaleY: PropTypes.number,\n\tselectable: PropTypes.bool,\n\tshadow: PropTypes.oneOfType([PropTypes.instanceOf(fabric.Shadow), PropTypes.string]),\n\tstateProperties: PropTypes.array,\n\tstroke: PropTypes.string,\n\tstrokeDashArray: PropTypes.array,\n\tstrokeLineCap: PropTypes.oneOf(['butt', 'round', 'square']),\n\tstrokeLineJoin: PropTypes.oneOf(['bevil', 'round', 'miter']),\n\tstrokeMiterLimit: PropTypes.number,\n\tstrokeWidth: PropTypes.number,\n\ttop: PropTypes.number,\n\ttransformMatrix: PropTypes.array,\n\ttransparentCorners: PropTypes.bool,\n\ttype: PropTypes.string,\n\tvisible: PropTypes.bool,\n\twidth: PropTypes.number,\n};\n\nFabricObject.defaultProps = {\n\ttype: 'object',\n\toriginX: 'left',\n\toriginY: 'top',\n\ttop: 0,\n\tleft: 0,\n\twidth: 0,\n\theight: 0,\n\tscaleX: 1,\n\tscaleY: 1,\n\tflipX: false,\n\tflipY: false,\n\topacity: 1,\n\tangle: 0,\n\tskewX: 0,\n\tskewY: 0,\n\tcornerSize: 12,\n\ttransparentCorners: true,\n\thoverCursor: null,\n\tpadding: 0,\n\tborderColor: 'rgba(102,153,255,0.75)',\n\tcornerColor: 'rgba(102,153,255,0.5)',\n\tcenteredScaling: false,\n\tcenteredRotation: true,\n\tfill: 'rgb(0,0,0)',\n\tfillRule: 'nonzero',\n\tglobalCompositeOperation: 'source-over',\n\tbackgroundColor: '',\n\tstroke: null,\n\tstrokeWidth: 1,\n\tstrokeDashArray: null,\n\tstrokeLineCap: 'butt',\n\tstrokeLineJoin: 'miter',\n\tstrokeMiterLimit: 10,\n\tshadow: null,\n\tborderOpacityWhenMoving: 0.4,\n\tborderScaleFactor: 1,\n\ttransformMatrix: null,\n\tminScaleLimit: 0.01,\n\tselectable: true,\n\tevented: true,\n\tvisible: true,\n\thasControls: true,\n\thasBorders: true,\n\thasRotatingPoint: true,\n\trotatingPointOffset: 40,\n\tperPixelTargetFind: false,\n\tincludeDefaultValues: true,\n\n\tclipTo: null,\n\n\tlockMovementX: false,\n\tlockMovementY: false,\n\tlockRotation: false,\n\tlockScalingX: false,\n\tlockScalingY: false,\n\tlockUniScaling: false,\n\tlockSkewingX: false,\n\tlockSkewingY: false,\n\tlockScalingFlip: false,\n\n\t// oCoords: null,\n\n\tstateProperties:  (\n\t\t'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t\t'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t\t'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t\t'alignX alignY meetOrSlice skewX skewY'\n\t).split(' ')\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/base/Object.jsx\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/inherits/inherits_browser.js\n ** module id = 4\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js\n ** module id = 5\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/buffer/index.js\n ** module id = 6\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 7\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/index.js\n ** module id = 8\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-util-is/lib/util.js\n ** module id = 9\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/events/events.js\n ** module id = 10\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_transform.js\n ** module id = 11\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_writable.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {fabric} from 'fabric';\nimport diff from 'deep-diff';\nimport collection from './mixin/collection.js';\nimport observable from './mixin/observable.js';\n\nexport default class StaticCanvas extends React.Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tcanvas: null,\n\t\t};\n\n\t\tcollection(this);\n\t\tobservable(this);\n\n\t\t//Static Canvas\n\t\tthis.absolutePan = (point) => this.state.canvas &&\n\t\t\tthis.state.canvas.absolutePan(point);\n\t\tthis.bringForward = (object, intersecting) => this.state.canvas &&\n\t\t\tthis.state.canvas.bringForward(object, intersecting);\n\t\tthis.bringToFront = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.bringToFront(object);\n\t\tthis.centerObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObject(object);\n\t\tthis.centerObjectH = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObjectH(object);\n\t\tthis.centerObjectV = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.centerObjectV(object);\n\t\tthis.clear = () => this.state.canvas &&\n\t\t\tthis.state.canvas.clear();\n\t\tthis.clearContext = (ctx) => this.state.canvas &&\n\t\t\tthis.state.canvas.clearContext(ctx);\n\t\tthis.clone = (callback, properties) => this.state.canvas &&\n\t\t\tthis.state.canvas.clone(callback, properties);\n\t\tthis.cloneWithoutData = (callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.cloneWithoutData(callback);\n\t\tthis.dispose = () => this.state.canvas &&\n\t\t\tthis.state.canvas.dispose();\n\t\tthis.fxCenterObjectH = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxCenterObjectH(object, callbacks);\n\t\tthis.fxCenterObjectV = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxCenterObjectV(object, callbacks);\n\t\tthis.fxRemove = (object, callbacks) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxRemove(object, callbacks);\n\t\tthis.fxStraightenObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.fxStraightenObject(object);\n\t\tthis.getActiveGroup = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveGroup();\n\t\tthis.getActiveObject = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveObject();\n\t\tthis.getCenter = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getCenter();\n\t\tthis.getContext = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getContext();\n\t\tthis.getElement = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getElement();\n\t\tthis.getHeight = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getHeight();\n\t\tthis.getWidth = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getWidth();\n\t\tthis.getZoom = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getZoom();\n\t\tthis.loadFromDatalessJSON = (json, callback, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.loadFromDatalessJSON(json, callback, reviver);\n\t\tthis.loadFromJSON = (json, callback, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.loadFromJSON(json, callback, reviver);\n\t\tthis.moveTo = (object, index) => this.state.canvas &&\n\t\t\tthis.state.canvas.moveTo(object, index);\n\t\tthis.onBeforeScaleRotate = () => this.state.canvas &&\n\t\t\tthis.state.canvas.onBeforeScaleRotate();\n\t\tthis.relativePan = (point) => this.state.canvas &&\n\t\t\tthis.state.canvas.relativePan(point);\n\t\tthis.renderAll = (allOnTop) => this.state.canvas &&\n\t\t\tthis.state.canvas.renderAll(allOnTop);\n\t\tthis.renderTop = () => this.state.canvas &&\n\t\t\tthis.state.canvas.renderTop();\n\t\tthis.sendBackwards = (object, intersecting) => this.state.canvas &&\n\t\t\tthis.state.canvas.sendBackwards(object, intersecting);\n\t\tthis.sendToBack = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.sendToBack(object);\n\t\tthis.setBackgroundColor = (backgroundColor, callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.setBackgroundColor(backgroundColor, callback);\n\t\tthis.setBackgroundImage = (image, callback, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setBackgroundImage(image, callback, options);\n\t\tthis.setDimensions = (dimensions, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setDimensions(dimensions, options);\n\t\tthis.setHeight = (value, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setHeight(value, options);\n\t\tthis.setOverlayColor = (overlayColor, callback) => this.state.canvas &&\n\t\t\tthis.state.canvas.setOverlayColor(overlayColor, callback);\n\t\tthis.setOverlayImage = (image, callback, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setOverlayImage(image, callback, options);\n\t\tthis.setViewportTransform = (vpt) => this.state.canvas &&\n\t\t\tthis.state.canvas.setViewportTransform(vpt);\n\t\tthis.setWidth = (value, options) => this.state.canvas &&\n\t\t\tthis.state.canvas.setWidth(value, options);\n\t\tthis.setZoom = (value) => this.state.canvas &&\n\t\t\tthis.state.canvas.setZoom(value);\n\t\tthis.straightenObject = (object) => this.state.canvas &&\n\t\t\tthis.state.canvas.straightenObject(object);\n\t\tthis.toDatalessJSON = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDatalessJSON(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDatalessObject(propertiesToInclude);\n\t\tthis.toDataURL = (options) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDataURL(options);\n\t\tthis.toDataURLWithMultiplier = (format, multiplier, quality) => this.state.canvas &&\n\t\t\tthis.state.canvas.toDataURLWithMultiplier(format, multiplier, quality);\n\t\tthis.toJSON = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toJSON(propertiesToInclude);\n\t\tthis.toObject = (propertiesToInclude) => this.state.canvas &&\n\t\t\tthis.state.canvas.toObject(propertiesToInclude);\n\t\tthis.toString = () => this.state.canvas &&\n\t\t\tthis.state.canvas.toString();\n\t\tthis.toSVG = (options, reviver) => this.state.canvas &&\n\t\t\tthis.state.canvas.toSVG(options, reviver);\n\t\tthis.zoomToPoint = (point, value) => this.state.canvas &&\n\t\t\tthis.state.canvas.zoomToPoint(point, value);\n\n\t\t// React\n\t\tthis.getChild = this.getChild.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst canvas = new fabric.Canvas(this.props.id);\n\n\t\tthis.setState({canvas}, () => {\n\t\t\tthis.initEvent.call(this);\n\t\t\tObject.keys(this.ref).forEach(key => {\n\t\t\t\tconst ref = this.ref[key];\n\t\t\t\tref.draw(obj => this.add(obj));\n\t\t\t});\n\t\t});\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.prevRef = {};\n\t\tObject.keys(this.ref).forEach(key => {\n\t\t\tthis.prevRef[key] = this.ref[key];\n\t\t});\n\t\tthis.ref = {};\n\n\t\t/* Options Changed */\n\t\tif (diff(this.props.backgroundColor, nextProps.backgroundColor)) {\n\t\t\tthis.setBackgroundColor(nextProps.backgroundColor);\n\t\t}\n\t\tif (diff(this.props.backgroundImage, nextProps.backgroundImage)) {\n\t\t\tthis.setBackgroundImage(nextProps.backgroundImage);\n\t\t}\n\n\t\tif (this.props.height !== nextProps.height) {\n\t\t\tthis.state.canvas.setHeight(nextProps.height);\n\t\t}\n\t\tif (this.props.width !== nextProps.width) {\n\t\t\tthis.state.canvas.setWidth(nextProps.width);\n\t\t}\n\n\t\tif (diff(this.props.overlayColor, nextProps.overlayColor)) {\n\t\t\tthis.setOverlayColor(nextProps.overlayColor);\n\t\t}\n\t\tif (diff(this.props.overlayImage, nextProps.overlayImage)) {\n\t\t\tthis.setOverlayImage(nextProps.overlayImage);\n\t\t}\n\n\t\tif (diff(this.props.viewportTransform, nextProps.viewportTransform)) {\n\t\t\tthis.setViewportTransform(nextProps.viewportTransform);\n\t\t}\n\n\t\t/* TODO: Event Changed */\n\t\tthis.eventChanged(nextProps);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t/* TODO: Children Changed */\n\n\t\tif (prevState.canvas) {\n\t\t\tReact.Children.map(\n\t\t\t\tthis.props.children,\n\t\t\t\t(child, i) => {\n\t\t\t\t\tif (!child) return;\n\n\t\t\t\t\tconst key = child.ref ? child.ref : `layer${i}`;\n\t\t\t\t\tconst ref = this.ref[key];\n\t\t\t\t\tref.draw(obj => {\n\t\t\t\t\t\t// because this callback is called asynchronously, if multiple updates occur in quick\n\t\t\t\t\t\t// succession then it's possible we'll attempt to remove an object (below) before it has been\n\t\t\t\t\t\t// added (here) - the result of which is duplicate objects on the canvas\n\t\t\t\t\t\tif (!obj.doNotAdd) {\n\t\t\t\t\t\t\tthis.add(obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tObject.keys(this.prevRef).forEach(key => {\n\t\t\t\tconst object = this.prevRef[key].getObject();\n\t\t\t\t// in case this object hasn't actually been added yet, set a flag so that we don't add it later\n\t\t\t\tobject.doNotAdd = true;\n\t\t\t\tthis.remove(object);\n\t\t\t});\n\t\t}\n\n\t\tthis.state.canvas && this.state.canvas.renderAll();\n\t}\n\n\t// childAddedrRemove(oldChild, child, index) {\n\t\t// \tconst ref = child.ref ? this.ref[child.ref] : this.ref[`layer${index}`];\n\t\t// \tref.draw(obj => this.insertAt(obj, index));\n\t\t// } else if (oldChild && !child) {\n\t\t// \tconst key = oldChild.ref;\n\t\t// \tconst ref = key ? this.ref[key] : this.ref[`layer${index}`];\n\t\t// \tconst obj = ref.getObject();\n\t\t//\n\t\t// \tthis.remove(obj);\n\t\t// \tthis.ref[ref] = null;\n\t\t// }\n\t// }\n\n\tinitEvent() {\n\t\tconst {canvas} = this.state;\n\t\tif (!canvas) return;\n\n\t\tif (this.props.beforeRender instanceof Function) {\n\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t}\n\t\tif (this.props.afterRender instanceof Function) {\n\t\t\tcanvas.on('after:render', this.props.afterRender);\n\t\t}\n\t\tif (this.props.onCanvasCleared instanceof Function) {\n\t\t\tcanvas.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t}\n\t\tif (this.props.onObjectAdded instanceof Function) {\n\t\t\tcanvas.on('object:added', this.props.onObjectAdded);\n\t\t}\n\t\tif (this.props.onObjectRemoved instanceof Function) {\n\t\t\tcanvas.on('object:removed', this.props.onObjectRemoved);\n\t\t}\n\n\t}\n\n\teventChanged(nextProps) {\n\t\tconst {canvas} = this.state;\n\t\tif (!canvas) return;\n\n\t\tif (this.props.beforeRender && !nextProps.beforeRender) {\n\t\t\tcanvas.off('before:render');\n\t\t} else if (nextProps.beforeRender instanceof Function) {\n\t\t\tcanvas.on('before:render', this.props.beforeRender);\n\t\t}\n\n\t\tif (this.props.afterRender && !nextProps.afterRender) {\n\t\t\tobject.off('after:render');\n\t\t} else if (nextProps.afterRender instanceof Function) {\n\t\t\tobject.on('after:render', this.props.afterRender);\n\t\t}\n\n\t\tif (this.props.onCanvasCleared && !nextProps.onCanvasCleared) {\n\t\t\tobject.off('canvas:cleared');\n\t\t} else if (nextProps.onCanvasCleared instanceof Function) {\n\t\t\tobject.on('canvas:cleared', this.props.onCanvasCleared);\n\t\t}\n\n\t\tif (this.props.onObjectAdded && !nextProps.onObjectAdded) {\n\t\t\tobject.off('object:added');\n\t\t} else if (nextProps.onObjectAdded instanceof Function) {\n\t\t\tobject.on('object:added', this.props.onObjectAdded);\n\t\t}\n\n\t\tif (this.props.onObjectRemoved && !nextProps.onObjectRemoved) {\n\t\t\tobject.off('object:removed');\n\t\t} else if (nextProps.onObjectRemoved instanceof Function) {\n\t\t\tobject.on('object:removed', this.props.onObjectRemoved);\n\t\t}\n\t}\n\n\tgetChild(ref) {\n\t\treturn this.ref[ref];\n\t}\n\n\trender() {\n\t\tconst {id, children} = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<canvas id={id} width={this.props.width} height={this.props.height}/>\n\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.canvas &&\n\t\t\t\t\t\tReact.Children.map(\n\t\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t\t(child, i) => child && React.cloneElement(child, {\n\t\t\t\t\t\t\t\tref: c => {\n\t\t\t\t\t\t\t\t\tif (c) {\n\t\t\t\t\t\t\t\t\t\tthis.ref[child.ref||`layer${i}`] = c;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\n\t}\n}\n\nStaticCanvas.emptyJSON = fabric.StaticCanvas.EMPTY_JSON;\nStaticCanvas.supports = (methodName) =>  fabric.StaticCanvas.supports(methodName);\n\nStaticCanvas.propTypes = {\n\tallowTouchScrolling: PropTypes.bool,\n\tbackgroundColor: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(fabric.Pattern)\n\t]),\n\tbackgroundImage: PropTypes.instanceOf(fabric.Image),\n\tclipTo: PropTypes.func,\n\tcontrolsAboveOverlay: PropTypes.bool,\n\tFX_DURATION: PropTypes.number,\n\timageSmoothingEnabled: PropTypes.bool,\n\tincludeDefaultValues: PropTypes.bool,\n\toverlayColor: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.instanceOf(fabric.Pattern)\n\t]),\n\toverlayImage: PropTypes.instanceOf(fabric.Image),\n\tpreserveObjectStacking: PropTypes.bool,\n\trenderOnAddRemove: PropTypes.bool,\n\tstateful: PropTypes.bool,\n\tsvgViewportTransformation: PropTypes.bool,\n\tviewportTransform: PropTypes.array,\n\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]),\n\n\theight: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]),\n\n\tid: PropTypes.string,\n\tbeforeRender: PropTypes.func,\n\tafterRender: PropTypes.func,\n\tonCanvasCleared: PropTypes.func,\n\tonObjectAdded: PropTypes.func,\n\tonObjectRemoved: PropTypes.func,\n};\n\nStaticCanvas.defaultProps = {\n\tallowTouchScrolling: false,\n\tbackgroundColor: '',\n\tbackgroundImage: null,\n\tclipTo: null,\n\tcontrolsAboveOverlay: false,\n\tFX_DURATION: 500,\n\timageSmoothingEnabled: true,\n\tincludeDefaultValues: true,\n\toverlayColor: '',\n\toverlayImage: null,\n\tpreserveObjectStacking: false,\n\trenderOnAddRemove: true,\n\tstateful: true,\n\tsvgViewportTransformation: true,\n\tviewportTransform: null,\n\n\twidth: 100,\n\theight: 100,\n\n\tid: 'c',\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/StaticCanvas.jsx\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from './base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Text extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {object: null};\n\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.isEmptyStyles = () => this.state.object &&\n\t\t\tthis.state.object.isEmptyStyles();\n\t\tthis.renderf = (ctx) => this.state.object &&\n\t\t\tthis.state.object.render(ctx);\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Text.fromObject(this.props.object);\n\t\t} else if (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Text.fromElement(this.props.element, this.props);\n\t\t} else {\n\t\t\tobject = new fabric.Text(this.props.text, this.props);\n\t\t}\n\n\t\tsuper.draw(object, cb);\n\t}\n}\n\nText.attribute = fabric.Text.ATTRIBUTE_NAMES;\nText.defaultSvgFontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\nText.fromElement = (element, options) => fabric.Text.fromElement(element, options);\nText.fromObject = (object) => fabric.Text.fromObject(object);\n\nText.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tfontSize: PropTypes.number,\n\tfontWeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tfontFamily: PropTypes.string,\n\ttextDecoration: PropTypes.oneOf(['', 'underline', 'overline', 'line-through']),\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right', 'justify']),\n\tfontStyle: PropTypes.oneOf(['', 'normal', 'italic', 'oblique']),\n\tlineHeight: PropTypes.number,\n\ttextBackgroundColor: PropTypes.string,\n});\n\nText.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'text',\n\tstateProperties: FabricObject.defaultProps.stateProperties.concat(['fontFamily',\n\t\t'fontWeight',\n\t\t'fontSize',\n\t\t'text',\n\t\t'textDecoration',\n\t\t'textAlign',\n\t\t'fontStyle',\n\t\t'lineHeight',\n\t\t'textBackgroundColor',\n  ]),\n\tfontSize: 40,\n\tfontWeight: 'normal',\n\tfontFamily: 'Times New Roman',\n\ttextDecoration: '',\n\ttextAlign: 'left',\n\tfontStyle: '',\n\tlineHeight: 1.16,\n\ttextBackgroundColor: '',\n\tstroke: null,\n\tshadow: null,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Text.jsx\n **/","function observableMixin(delgete) {\n\tdelgete.observe = (eventName, handler) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.observe(eventName, handler);\n\tdelgete.stopObserving = (eventName, handler) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.stopObserving(eventName, handler);\n\tdelgete.fire = (eventName, options) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.fire(eventName, options);\n\tdelgete.on = delgete.observe;\n\tdelgete.off = delgete.stopObserving;\n\tdelgete.trigger = delgete.fire;\n}\n\nexport default observableMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixin/observable.js\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Path extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) =>\n\t\t\tthis.state.object.toDatalessObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.complexity = () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t}\n\n\tdraw(cb) {\n\t\tif (this.props.element instanceof Object) {\n\t\t\tfabric.Path.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.Path.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else {\n\t\t\tconst object = new fabric.Path(this.props.path, this.props);\n\t\t\tsuper.draw(object, cb);\n\n\t\t\treturn object;\n\t\t}\n\t}\n\n}\n\nPath.fromElement = (element, callback, options) => fabric.Path.fromElement(element, callback, options);\nPath.fromObject = (object, callback) => fabric.Path.fromObject(object, callback);\nPath.attribute = fabric.Path.ATTRIBUTE_NAMES;\n\nPath.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tpath: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPath.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'path',\n\tpath: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Path.jsx\n **/","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.DeepDiff = factory());\n}(this, (function () { 'use strict';\n\nvar $scope;\nvar conflict;\nvar conflictResolution = [];\nif (typeof global === 'object' && global) {\n  $scope = global;\n} else if (typeof window !== 'undefined') {\n  $scope = window;\n} else {\n  $scope = {};\n}\nconflict = $scope.DeepDiff;\nif (conflict) {\n  conflictResolution.push(\n    function() {\n      if ('undefined' !== typeof conflict && $scope.DeepDiff === accumulateDiff) {\n        $scope.DeepDiff = conflict;\n        conflict = undefined;\n      }\n    });\n}\n\n// nodejs compatible on server side and in the browser.\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nfunction Diff(kind, path) {\n  Object.defineProperty(this, 'kind', {\n    value: kind,\n    enumerable: true\n  });\n  if (path && path.length) {\n    Object.defineProperty(this, 'path', {\n      value: path,\n      enumerable: true\n    });\n  }\n}\n\nfunction DiffEdit(path, origin, value) {\n  DiffEdit.super_.call(this, 'E', path);\n  Object.defineProperty(this, 'lhs', {\n    value: origin,\n    enumerable: true\n  });\n  Object.defineProperty(this, 'rhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffEdit, Diff);\n\nfunction DiffNew(path, value) {\n  DiffNew.super_.call(this, 'N', path);\n  Object.defineProperty(this, 'rhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffNew, Diff);\n\nfunction DiffDeleted(path, value) {\n  DiffDeleted.super_.call(this, 'D', path);\n  Object.defineProperty(this, 'lhs', {\n    value: value,\n    enumerable: true\n  });\n}\ninherits(DiffDeleted, Diff);\n\nfunction DiffArray(path, index, item) {\n  DiffArray.super_.call(this, 'A', path);\n  Object.defineProperty(this, 'index', {\n    value: index,\n    enumerable: true\n  });\n  Object.defineProperty(this, 'item', {\n    value: item,\n    enumerable: true\n  });\n}\ninherits(DiffArray, Diff);\n\nfunction arrayRemove(arr, from, to) {\n  var rest = arr.slice((to || from) + 1 || arr.length);\n  arr.length = from < 0 ? arr.length + from : from;\n  arr.push.apply(arr, rest);\n  return arr;\n}\n\nfunction realTypeOf(subject) {\n  var type = typeof subject;\n  if (type !== 'object') {\n    return type;\n  }\n\n  if (subject === Math) {\n    return 'math';\n  } else if (subject === null) {\n    return 'null';\n  } else if (Array.isArray(subject)) {\n    return 'array';\n  } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n    return 'date';\n  } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n    return 'regexp';\n  }\n  return 'object';\n}\n\nfunction deepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n  path = path || [];\n  stack = stack || [];\n  var currentPath = path.slice(0);\n  if (typeof key !== 'undefined') {\n    if (prefilter) {\n      if (typeof(prefilter) === 'function' && prefilter(currentPath, key)) {\n        return; } else if (typeof(prefilter) === 'object') {\n        if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n          return; }\n        if (prefilter.normalize) {\n          var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n          if (alt) {\n            lhs = alt[0];\n            rhs = alt[1];\n          }\n        }\n      }\n    }\n    currentPath.push(key);\n  }\n\n  // Use string comparison for regexes\n  if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n    lhs = lhs.toString();\n    rhs = rhs.toString();\n  }\n\n  var ltype = typeof lhs;\n  var rtype = typeof rhs;\n\n  var ldefined = ltype !== 'undefined' || (stack && stack[stack.length - 1].lhs && stack[stack.length - 1].lhs.hasOwnProperty(key));\n  var rdefined = rtype !== 'undefined' || (stack && stack[stack.length - 1].rhs && stack[stack.length - 1].rhs.hasOwnProperty(key));\n\n  if (!ldefined && rdefined) {\n    changes(new DiffNew(currentPath, rhs));\n  } else if (!rdefined && ldefined) {\n    changes(new DiffDeleted(currentPath, lhs));\n  } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n    changes(new DiffEdit(currentPath, lhs, rhs));\n  } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n    changes(new DiffEdit(currentPath, lhs, rhs));\n  } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n    if (!stack.filter(function(x) {\n        return x.lhs === lhs; }).length) {\n      stack.push({ lhs: lhs, rhs: rhs });\n      if (Array.isArray(lhs)) {\n        var i, len = lhs.length;\n        for (i = 0; i < lhs.length; i++) {\n          if (i >= rhs.length) {\n            changes(new DiffArray(currentPath, i, new DiffDeleted(undefined, lhs[i])));\n          } else {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack);\n          }\n        }\n        while (i < rhs.length) {\n          changes(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i++])));\n        }\n      } else {\n        var akeys = Object.keys(lhs);\n        var pkeys = Object.keys(rhs);\n        akeys.forEach(function(k, i) {\n          var other = pkeys.indexOf(k);\n          if (other >= 0) {\n            deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack);\n            pkeys = arrayRemove(pkeys, other);\n          } else {\n            deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack);\n          }\n        });\n        pkeys.forEach(function(k) {\n          deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack);\n        });\n      }\n      stack.length = stack.length - 1;\n    } else if (lhs !== rhs) {\n      // lhs is contains a cycle at this element and it differs from rhs\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    }\n  } else if (lhs !== rhs) {\n    if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n      changes(new DiffEdit(currentPath, lhs, rhs));\n    }\n  }\n}\n\nfunction accumulateDiff(lhs, rhs, prefilter, accum) {\n  accum = accum || [];\n  deepDiff(lhs, rhs,\n    function(diff) {\n      if (diff) {\n        accum.push(diff);\n      }\n    },\n    prefilter);\n  return (accum.length) ? accum : undefined;\n}\n\nfunction applyArrayChange(arr, index, change) {\n  if (change.path && change.path.length) {\n    var it = arr[index],\n      i, u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        delete it[change.path[i]];\n        break;\n      case 'E':\n      case 'N':\n        it[change.path[i]] = change.rhs;\n        break;\n    }\n  } else {\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(arr[index], change.index, change.item);\n        break;\n      case 'D':\n        arr = arrayRemove(arr, index);\n        break;\n      case 'E':\n      case 'N':\n        arr[index] = change.rhs;\n        break;\n    }\n  }\n  return arr;\n}\n\nfunction applyChange(target, source, change) {\n  if (target && source && change && change.kind) {\n    var it = target,\n      i = -1,\n      last = change.path ? change.path.length - 1 : 0;\n    while (++i < last) {\n      if (typeof it[change.path[i]] === 'undefined') {\n        it[change.path[i]] = (typeof change.path[i] === 'number') ? [] : {};\n      }\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n        break;\n      case 'D':\n        delete it[change.path[i]];\n        break;\n      case 'E':\n      case 'N':\n        it[change.path[i]] = change.rhs;\n        break;\n    }\n  }\n}\n\nfunction revertArrayChange(arr, index, change) {\n  if (change.path && change.path.length) {\n    // the structure of the object at the index has changed...\n    var it = arr[index],\n      i, u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        revertArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'E':\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'N':\n        delete it[change.path[i]];\n        break;\n    }\n  } else {\n    // the array item is different...\n    switch (change.kind) {\n      case 'A':\n        revertArrayChange(arr[index], change.index, change.item);\n        break;\n      case 'D':\n        arr[index] = change.lhs;\n        break;\n      case 'E':\n        arr[index] = change.lhs;\n        break;\n      case 'N':\n        arr = arrayRemove(arr, index);\n        break;\n    }\n  }\n  return arr;\n}\n\nfunction revertChange(target, source, change) {\n  if (target && source && change && change.kind) {\n    var it = target,\n      i, u;\n    u = change.path.length - 1;\n    for (i = 0; i < u; i++) {\n      if (typeof it[change.path[i]] === 'undefined') {\n        it[change.path[i]] = {};\n      }\n      it = it[change.path[i]];\n    }\n    switch (change.kind) {\n      case 'A':\n        // Array was modified...\n        // it will be an array...\n        revertArrayChange(it[change.path[i]], change.index, change.item);\n        break;\n      case 'D':\n        // Item was deleted...\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'E':\n        // Item was edited...\n        it[change.path[i]] = change.lhs;\n        break;\n      case 'N':\n        // Item is new...\n        delete it[change.path[i]];\n        break;\n    }\n  }\n}\n\nfunction applyDiff(target, source, filter) {\n  if (target && source) {\n    var onChange = function(change) {\n      if (!filter || filter(target, source, change)) {\n        applyChange(target, source, change);\n      }\n    };\n    deepDiff(target, source, onChange);\n  }\n}\n\nObject.defineProperties(accumulateDiff, {\n\n  diff: {\n    value: accumulateDiff,\n    enumerable: true\n  },\n  observableDiff: {\n    value: deepDiff,\n    enumerable: true\n  },\n  applyDiff: {\n    value: applyDiff,\n    enumerable: true\n  },\n  applyChange: {\n    value: applyChange,\n    enumerable: true\n  },\n  revertChange: {\n    value: revertChange,\n    enumerable: true\n  },\n  isConflict: {\n    value: function() {\n      return 'undefined' !== typeof conflict;\n    },\n    enumerable: true\n  },\n  noConflict: {\n    value: function() {\n      if (conflictResolution) {\n        conflictResolution.forEach(function(it) {\n          it();\n        });\n        conflictResolution = null;\n      }\n      return accumulateDiff;\n    },\n    enumerable: true\n  }\n});\n\nreturn accumulateDiff;\n\n})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/deep-diff/index.js\n ** module id = 19\n ** module chunks = 0\n **/","var http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/index.js\n ** module id = 20\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js\n ** module id = 21\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_readable.js\n ** module id = 22\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/string_decoder/index.js\n ** module id = 23\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/url.js\n ** module id = 24\n ** module chunks = 0\n **/",";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Base64/base64.js\n ** module id = 25\n ** module chunks = 0\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport StaticCanvas from './StaticCanvas.jsx';\n\nexport default class Canvas extends StaticCanvas {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {\n\t\t\tcanvas: null,\n\t\t};\n\n\t\tthis.ref = {};\n\t\tthis.containsPoint = (e, target) => this.state.canvas &&\n\t\t\tthis.state.canvas.containsPoint(e, target);\n\t\tthis.isTargetTransparent = (target, x, y) => this.state.canvas &&\n\t\t\tthis.state.canvas.isTargetTransparent(target, x, y);\n\t\tthis.setCursor = (value) => this.state.canvas &&\n\t\t\tthis.state.canvas.setCursor(value);\n\t\tthis.findTarget = (e, skipGroup) => this.state.canvas &&\n\t\t\tthis.state.canvas.findTarget(e, skipGroup);\n\t\tthis.getPointer = (e, ignoreZoom, upperCanvasEl) => this.state.canvas &&\n\t\t\tthis.state.canvas.getPointer(e, ignoreZoom, upperCanvasEl);\n\t\tthis.getSelectionContext = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getSelectionContext();\n\t\tthis.getSelectionElement = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getSelectionElement();\n\t\tthis.setActiveObject = (object, e) => this.state.canvas &&\n\t\t\tthis.state.canvas.setActiveObject(object, e);\n\t\tthis.getActiveObject = () => this.state.canvas &&\n\t\t\tthis.state.canvas.getActiveObject();\n\t\tthis.discardActiveObject = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.discardActiveObject(e);\n\t\tthis.setActiveGroup = (group, e) => this.state.canvas &&\n\t\t\tthis.state.canvas.setActiveGroup(group, e);\n\t\tthis.discardActiveGroup = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.discardActiveGroup(e);\n\t\tthis.deactivateAll = () => this.state.canvas &&\n\t\t\tthis.state.canvas.deactivateAll();\n\t\tthis.deactivateAllWithDispatch = (e) => this.state.canvas &&\n\t\t\tthis.state.canvas.deactivateAllWithDispatch(e);\n\t\tthis.dispose = () => this.state.canvas &&\n\t\t\tthis.state.canvas.dispose();\n\t\tthis.drawControls = (ctx) => this.state.canvas &&\n\t\t\tthis.state.canvas.drawControls(ctx);\n\t}\n}\n\nCanvas.propTypes = Object.assign({}, StaticCanvas.propTypes, {\n\tuniScaleTransform: PropTypes.bool,\n\tcenteredScaling: PropTypes.bool,\n\tcenteredRotation: PropTypes.bool,\n\tinteractive: PropTypes.bool,\n\tselection: PropTypes.bool,\n\tselectionColor: PropTypes.string,\n\tselectionDashArray: PropTypes.array,\n\tselectionBorderColor: PropTypes.string,\n\tselectionLineWidth: PropTypes.number,\n\thoverCursor: PropTypes.string,\n\tmoveCursor: PropTypes.string,\n\tdefaultCursor: PropTypes.string,\n\tfreeDrawingCursor: PropTypes.string,\n\trotationCursor: PropTypes.string,\n\tcontainerClass: PropTypes.string,\n\tperPixelTargetFind: PropTypes.bool,\n\ttargetFindTolerance: PropTypes.number,\n\tskipTargetFind: PropTypes.bool,\n\tisDrawingMode: PropTypes.bool,\n});\n\nCanvas.defaultProps = Object.assign({}, StaticCanvas.defaultProps, {\n\tuniScaleTransform: false,\n\tcenteredScaling: false,\n\tcenteredRotation: false,\n\tinteractive: true,\n\tselection: true,\n\tselectionColor: 'rgba(100, 100, 255, 0.3)',\n\tselectionDashArray: [],\n\tselectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\tselectionLineWidth: 1,\n\thoverCursor: 'move',\n\tmoveCursor: 'move',\n\tdefaultCursor: 'default',\n\tfreeDrawingCursor: 'crosshair',\n\trotationCursor: 'crosshair',\n\tcontainerClass: 'canvas-container',\n\tperPixelTargetFind: false,\n\ttargetFindTolerance: 0,\n\tskipTargetFind: false,\n\tisDrawingMode: false,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Canvas.jsx\n **/","'use strict';\n\nimport {fabric} from 'fabric';\nexport default fabric.Color;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Color.js\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport Text from './Text';\nimport {fabric} from 'fabric';\n\nexport default class IText extends Text {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {object: null};\n\n\t\tthis.isEmptyStyles = () => this.state.object &&\n\t\t\tthis.state.object.isEmptyStyles();\n\t\tthis.setSelectionStart = (index) => this.state.object &&\n\t\t\tthis.state.object.setSelectionStart(index);\n\t\tthis.setSelectionEnd = (index) => this.state.object &&\n\t\t\tthis.state.object.setSelectionEnd(index);\n\t\tthis.getSelectionStyles = () => this.state.object &&\n\t\t\tthis.state.object.getSelectionStyles();\n\t\tthis.setSelectionStyles = (styles) => this.state.object &&\n\t\t\tthis.state.object.setSelectionStyles(styles);\n\t\tthis.renderCursorOrSelection = () => this.state.object &&\n\t\t\tthis.state.object.renderCursorOrSelection();\n\t\tthis.get2DCursorLocation = (selectionStart) => this.state.object &&\n\t\t\tthis.state.object.get2DCursorLocation(selectionStart);\n\t\tthis.getCurrentCharStyle = (lineIndex, charIndex) => this.state.object &&\n\t\t\tthis.state.object.getCurrentCharStyle(lineIndex, charIndex);\n\t\tthis.getCurrentCharFontSize = (lineIndex, charIndex) => this.state.object &&\n\t\t\tthis.state.object.getCurrentCharFontSize(lineIndex, charIndex);\n\t\tthis.getCurrentCharColor = (lineIndex, charIndex) => this.state.object &&\n\t\t\tthis.state.object.getCurrentCharColor(lineIndex, charIndex);\n\t\tthis.renderCursor = (boundaries, ctx) => this.state.object &&\n\t\t\tthis.state.object.renderCursor(boundaries, ctx);\n\t\tthis.renderSelection = (chars, boundaries, ctx) => this.state.object &&\n\t\t\tthis.state.object.renderSelection(chars, boundaries, ctx);\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t}\n\n\tdraw(canvas) {\n\t\tlet object;\n\t\tif (this.props.object instanceof Object) {\n\t\t\tobject = fabric.IText.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.IText(this.props.text, this.props);\n\t\t}\n\n\t\tsuper.draw(canvas, object);\n\t}\n\n\tinitEvent() {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tsuper.initEvent();\n\t\tif (this.props.onChanged instanceof Function) {\n\t\t\tobject.on('changed', this.props.onChanged);\n\t\t}\n\t\tif (this.props.onSelectionChanged instanceof Function) {\n\t\t\tobject.on('selection:changed', this.props.onSelectionChanged);\n\t\t}\n\t\tif (this.props.onEditingEntered instanceof Function) {\n\t\t\tobject.on('editing:entered', this.props.onEditingEntered);\n\t\t}\n\t\tif (this.props.onEditingExited instanceof Function) {\n\t\t\tobject.on('editing:exited', this.props.onEditingExited);\n\t\t}\n\t}\n\n\teventChanged(nextProps) {\n\t\tconst {object} = this.state;\n\t\tif (!(object instanceof fabric.Object)) return;\n\n\t\tsuper.eventChanged(nextProps);\n\t\tif (this.props.onChanged && !nextProps.onChanged) {\n\t\t\tobject.off('changed');\n\t\t} else if (nextProps.onChanged instanceof Function) {\n\t\t\tobject.on('changed', this.props.onChanged);\n\t\t}\n\t\tif (this.props.onSelectionChanged && !nextProps.onSelectionChanged) {\n\t\t\tobject.off('selection:changed');\n\t\t} else if (nextProps.onSelectionChanged instanceof Function) {\n\t\t\tobject.on('selection:changed', this.props.onSelectionChanged);\n\t\t}\n\t\tif (this.props.onEditingEntered && !nextProps.onEditingEntered) {\n\t\t\tobject.off('editing:entered');\n\t\t} else if (nextProps.onEditingEntered instanceof Function) {\n\t\t\tobject.on('editing:entered', this.props.onEditingEntered);\n\t\t}\n\t\tif (this.props.onEditingExited && !nextProps.onEditingExited) {\n\t\t\tobject.off('editing:exited');\n\t\t} else if (nextProps.onEditingExited instanceof Function) {\n\t\t\tobject.on('editing:exited', this.props.onEditingExited);\n\t\t}\n\t}\n}\nIText.fromObject = (object) => fabric.IText.fromObject(object);\n\nIText.propTypes = Object.assign({}, Text.propTypes, {\n\tselectionStart: PropTypes.number,\n\tselectionEnd: PropTypes.number,\n\tselectionColor: PropTypes.string,\n\tisEditing: PropTypes.bool,\n\teditable: PropTypes.bool,\n\teditingBorderColor: PropTypes.string,\n\tcursorWidth: PropTypes.number,\n\tcursorColor: PropTypes.string,\n\tcursorDelay: PropTypes.number,\n\tcursorDuration: PropTypes.number,\n\tstyles: PropTypes.object,\n\tcaching: PropTypes.bool,\n});\n\nIText.defaultProps = Object.assign({}, Text.defaultProps, {\n\ttype: 'i-text',\n\tselectionStart: 0,\n\tselectionEnd: 0,\n\tselectionColor: 'rgba(17,119,255,0.3)',\n\tisEditing: false,\n\teditable: true,\n\teditingBorderColor: 'rgba(102,153,255,0.25)',\n\tcursorWidth: 2,\n\tcursorColor: '#333',\n\tcursorDelay: 1000,\n\tcursorDuration: 600,\n\t// styles: [],\n\t// caching: true,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/IText.jsx\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from './base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Image extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis.state = {object: null};\n\n\t\tthis.getElement = () => this.state.object &&\n\t\t\tthis.state.object.getElement();\n\t\tthis.setElement = (element, callback, options) => this.state.object &&\n\t\t\tthis.state.object.setElement(element, callback, options);\n\t\tthis.setCrossOrigin = (value) => this.state.object &&\n\t\t\tthis.state.object.setCrossOrigin(value);\n\t\tthis.getOriginalSize = () => this.state.object &&\n\t\t\tthis.state.object.getOriginalSize();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.getSrc = () => this.state.object &&\n\t\t\tthis.state.object.getSrc();\n\t\tthis.setSrc = (src, callback, options) => this.state.object &&\n\t\t\tthis.state.object.setSrc(src, callback, options);\n\t\tthis.toString = () => this.state.object &&\n\t\t\tthis.state.object.toString();\n\t\tthis.clone = (callback, propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.clone(callback, propertiesToInclude);\n\t\tthis.applyFilters = (callback, filters, imgElement, forResizing) => this.state.object &&\n\t\t\tthis.state.object.applyFilters(callback, filters, imgElement, forResizing);\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tif (typeof(this.props.src) === 'string') {\n\t\t\tfabric.Image.fromURL(\n\t\t\t\tthis.props.src,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.Image.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else if (this.props.element instanceof Object) {\n\t\t\tfabric.Image.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else {\n\t\t\tconst instance = new fabric.Image(this.props.imgElement, this.props);\n\t\t\tsuper.draw(instance, cb);\n\t\t}\n\t}\n}\n\nImage.getSvgSrc = fabric.Image.prototype.getSrc;\nImage.css = fabric.Image.CSS_CANVAS;\nImage.fromObject = (object, callback) => fabric.Image.fromObject(object, callback);\nImage.fromURL = (url, callback, imgOptions) => fabric.Image.fromURL(url, callback, imgOptions);\nImage.fromElement = (element, callback, options) => fabric.Image.fromElement(element, callback, options);\nImage.attribute = fabric.Image.ATTRIBUTE_NAMES;\nImage.async = true;\nImage.pngCompression = 1;\n\nImage.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tcrossOrigin: PropTypes.oneOf(['', 'anonymous', 'use-credentials']),\n\talignX: PropTypes.oneOf(['none', 'mid', 'min', 'max']),\n\talignY: PropTypes.oneOf(['none', 'mid', 'min', 'max']),\n\tmeetOrSlice: PropTypes.oneOf(['meet', 'slice']),\n});\n\nImage.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'image',\n\tcrossOrigin: '',\n\talignX: 'none',\n\talignY: 'none',\n\tmeetOrSlice: 'meet',\n\tstrokeWidth: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Image.jsx\n **/","'use strict';\n\nimport {fabric} from 'fabric';\n\nexport const BaseFilter = fabric.Image.filters.BaseFilter;\nexport const Brightness = fabric.Image.filters.Brightness;\nexport const Convolute = fabric.Image.filters.Convolute;\nexport const GradientTransparency = fabric.Image.filters.GradientTransparency;\nexport const Grayscale = fabric.Image.filters.Grayscale;\nexport const Invert = fabric.Image.filters.Invert;\nexport const Mask = fabric.Image.filters.Mask;\nexport const Multiply = fabric.Image.filters.Multiply;\n\nexport const Noise = fabric.Image.filters.Noise;\nexport const Pixelate = fabric.Image.filters.Pixelate;\nexport const RemoveWhite = fabric.Image.filters.RemoveWhite;\nexport const Resize = fabric.Image.filters.Resize;\nexport const Sepia = fabric.Image.filters.Sepia;\nexport const Sepia2 = fabric.Image.filters.Sepia2;\nexport const Tint = fabric.Image.filters.Tint;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ImageFilters.js\n **/","function collectionMixin(delgete) {\n\tdelgete.add = (...args) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.add(...args);\n\tdelgete.insertAt = (object, index, nonSplicing) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.insertAt(object, index, nonSplicing);\n\tdelgete.remove = (...args) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.remove(...args);// arguments\n\tdelgete.forEachObject = (callback, context) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.forEachObject(callback, context);\n\tdelgete.getObjects = (type) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.getObjects(type);\n\tdelgete.item = (index) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.item(index);\n\tdelgete.isEmpty = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.isEmpty();\n\tdelgete.size = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.size();\n\tdelgete.contains = (object) => delgete.state.canvas &&\n\t\tdelgete.state.canvas.contains(object);\n\tdelgete.complexity = () => delgete.state.canvas &&\n\t\tdelgete.state.canvas.complexity(object);\n};\n\nexport default collectionMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/mixin/collection.js\n **/","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\nconst PI = Math.PI;\n\nexport default class Circle extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.getRadiusX = () => this.state.object &&\n\t\t\tthis.state.object.getRadiusX();\n\t\tthis.getRadiusY = () => this.state.object &&\n\t\t\tthis.state.object.getRadiusY();\n\t\tthis.setRadius = (value) => this.state.object &&\n\t\t\tthis.state.object.setRadius(value);\n\t\tthis.renderf = (ctx, noTransform) => this.state.object &&\n\t\t\tthis.state.object.render(ctx, noTransform);\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Circle.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Circle.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Circle(this.props);\n\t\t}\n\n\t\tsuper.draw(object, cb);\n\t}\n}\n\nCircle.fromElement = (element, options) => fabric.Circle.fromElement(element, options);\nCircle.fromObject = (object) => fabric.Circle.fromObject(object);\nCircle.attribute = fabric.Circle.ATTRIBUTE_NAMES;\n\nCircle.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tendAngle: PropTypes.number,\n\tradius: PropTypes.number,\n\tstartAngle: PropTypes.number,\n});\n\nCircle.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\tendAngle: 2 * PI,\n\tradius: 0,\n\tstartAngle: 0,\n\ttype: 'circle',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Circle.jsx\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Ellipse extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.getRx = () => this.state.object &&\n\t\t\tthis.state.object.getRx();\n\t\tthis.getRy = () => this.state.object &&\n\t\t\tthis.state.object.getRy();\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toObject(reviver);\n\t\tthis.renderf = () => this.state.object &&\n\t\t\t\tthis.state.object.render();\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Ellipse.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Ellipse.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Ellipse(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nEllipse.fromElement = (element, options) => fabric.Ellipse.fromElement(element, options);\nEllipse.fromObject = (object) => fabric.Ellipse.fromObject(object);\nEllipse.attribute = fabric.Ellipse.ATTRIBUTE_NAMES;\n\nEllipse.propTypes = Object.assign({}, FabricObject.propTypes, {\n\trx: PropTypes.number,\n\try: PropTypes.number,\n});\n\nEllipse.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\trx: 0,\n\try: 0,\n\ttype: 'ellipse',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Ellipse.jsx\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Line extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.calcLinePoints = () => this.state.object &&\n\t\t\tthis.state.object.calcLinePoints();\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.complexity = () => 1;\n\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Line.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Line.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Line(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nLine.fromElement = (element, options) => fabric.Line.fromElement(element, options);\nLine.fromObject = (object) => fabric.Line.fromObject(object);\nLine.attribute = fabric.Line.ATTRIBUTE_NAMES;\n\nLine.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tx1: PropTypes.number,\n\ty1: PropTypes.number,\n\tx2: PropTypes.number,\n\ty2: PropTypes.number,\n});\n\nLine.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'line',\n\tx1: 0,\n\ty1: 0,\n\tx2: 0,\n\ty2: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Line.jsx\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport Path from './Path';\nimport {fabric} from 'fabric';\n\nexport default class PathGroup extends Path {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.parseDimensionsFromPaths = (options) => this.state.object &&\n\t\t\tthis.state.object.parseDimensionsFromPaths(options);\n\t\tthis.renderf = (ctx) => this.state.object &&\n\t\t\tthis.state.object.renderf(ctx);\n\t\tthis.toObject = (propertiesToInclude) =>\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toDatalessObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toDatalessObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.toString =  () => this.state.object &&\n\t\t\tthis.state.object.toSVG();\n\t\tthis.isSameColor =  () => this.state.object &&\n\t\t\tthis.state.object.isSameColor();\n\t\tthis.complexity =  () => this.state.object &&\n\t\t\tthis.state.object.complexity();\n\t\tthis.getObjects =  () => this.state.object &&\n\t\t\tthis.state.object.getObjects();\n\n\t}\n\n\tdraw(cb) {\n\t\tif (this.props.element instanceof Object) {\n\t\t\tfabric.PathGroup.fromElement(\n\t\t\t\tthis.props.element,\n\t\t\t\t(instance) => super.draw(instance, cb),\n\t\t\t\tthis.props\n\t\t\t);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tfabric.PathGroup.fromObject(\n\t\t\t\tthis.props.object,\n\t\t\t\t(instance) => super.draw(instance, cb)\n\t\t\t);\n\t\t} else {\n\t\t\tconst paths = [];\n\t\t\tif (this.props.children instanceof Array) {\n\t\t\t\tthis.props.children.forEach(child => paths.push(new fabric.Path(child.props.path, child.props)));\n\t\t\t} else {\n\t\t\t\tpaths.push(new fabric.Path(this.props.children.props.path, this.props.children.props));\n\t\t\t}\n\n\t\t\tconst object = new fabric.PathGroup(paths, this.props);\n\t\t\tsuper.draw(object, cb);\n\t\t}\n\t}\n\n}\n\nPathGroup.fromElement = (element, callback, options) => fabric.PathGroup.fromElement(element, callback, options);\nPathGroup.fromObject = (object, callback) => fabric.PathGroup.fromObject(object, callback);\nPathGroup.attribute = fabric.PathGroup.ATTRIBUTE_NAMES;\n\nPathGroup.defaultProps = Object.assign({}, Path.defaultProps, {\n\ttype: 'path-group',\n\tfill: '',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/PathGroup.jsx\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Polygon extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\t\tthis.commonRender = () => this.state.object &&\n\t\t\tthis.state.object.commonRender();\n\n\t\tthis.complexity = () => this.props.points ? this.props.points.length : 0;\n\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Polygon.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Polygon.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Polygon(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n}\n\nPolygon.fromElement = (element, options) => fabric.Polygon.fromElement(element, options);\nPolygon.fromObject = (object) => fabric.Polygon.fromObject(object);\nPolygon.attribute = fabric.Polygon.ATTRIBUTE_NAMES;\n\nPolygon.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tpoints: PropTypes.array,\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPolygon.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'polygon',\n\tpoints: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Polygon.jsx\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Polyline extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => this.props.points ? this.props.points.length : 0;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Polyline.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Polyline.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Polyline(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nPolyline.fromElement = (element, options) => fabric.Polyline.fromElement(element, options);\nPolyline.fromObject = (object) => fabric.Polyline.fromObject(object);\nPolyline.attribute = fabric.Polyline.ATTRIBUTE_NAMES;\n\nPolyline.propTypes = Object.assign({}, FabricObject.propTypes, {\n\tpoints: PropTypes.array,\n\tminX: PropTypes.number,\n\tminY: PropTypes.number,\n});\n\nPolyline.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'polyline',\n\tpoints: null,\n\tminX: 0,\n\tminY: 0,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Polyline.jsx\n **/","'use strict';\n\nimport PropTypes from 'prop-types';\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Rect extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toObject = (propertiesToInclude) => this.state.object &&\n\t\t\tthis.state.object.toObject(propertiesToInclude);\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Rect.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Rect.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Rect(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nRect.fromElement = (element, options) => fabric.Rect.fromElement(element, options);\nRect.fromObject = (object) => fabric.Rect.fromObject(object);\nRect.attribute = fabric.Rect.ATTRIBUTE_NAMES;\n\nRect.propTypes = Object.assign({}, FabricObject.propTypes, {\n\trx: PropTypes.number,\n\try: PropTypes.number,\n});\n\nRect.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'rect',\n\trx: 0,\n\try: 0,\n\tstrokeDashArray: null,\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Rect.jsx\n **/","'use strict';\n\nimport FabricObject from '../base/Object.jsx';\nimport {fabric} from 'fabric';\n\nexport default class Triangle extends FabricObject {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\tobject: null,\n\t\t};\n\n\t\tthis.draw = this.draw.bind(this);\n\n\t\tthis.toSVG = (reviver) => this.state.object &&\n\t\t\tthis.state.object.toSVG(reviver);\n\n\t\tthis.complexity = () => 1;\n\t}\n\n\tdraw(cb) {\n\t\tlet object;\n\t\tif (this.props.element instanceof Object) {\n\t\t\tobject = fabric.Triangle.fromElement(this.props.element, this.props);\n\t\t} else if (this.props.object instanceof Object) {\n\t\t\tobject = fabric.Triangle.fromObject(this.props.object);\n\t\t} else {\n\t\t\tobject = new fabric.Triangle(this.props);\n\t\t}\n\t\tsuper.draw(object, cb);\n\t}\n\n}\n\nTriangle.fromObject = (object) => fabric.Triangle.fromObject(object);\n\nTriangle.propTypes = Object.assign({}, FabricObject.propTypes);\nTriangle.defaultProps = Object.assign({}, FabricObject.defaultProps, {\n\ttype: 'triangle',\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shape/Triangle.jsx\n **/","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-js/index.js\n ** module id = 40\n ** module chunks = 0\n **/","var Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/request.js\n ** module id = 41\n ** module chunks = 0\n **/","var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/response.js\n ** module id = 42\n ** module chunks = 0\n **/","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    return http.request.call(this, params, cb);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/https-browserify/index.js\n ** module id = 43\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ieee754/index.js\n ** module id = 44\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isarray/index.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prop-types/factoryWithThrowingShims.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prop-types/lib/ReactPropTypesSecret.js\n ** module id = 47\n ** module chunks = 0\n **/","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prop-types/~/fbjs/lib/emptyFunction.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prop-types/~/fbjs/lib/invariant.js\n ** module id = 49\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/decode.js\n ** module id = 50\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/encode.js\n ** module id = 51\n ** module chunks = 0\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/index.js\n ** module id = 52\n ** module chunks = 0\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/isarray/index.js\n ** module id = 53\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_duplex.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/duplex.js\n ** module id = 54\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_passthrough.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/passthrough.js\n ** module id = 55\n ** module chunks = 0\n **/","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/readable.js\n ** module id = 56\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_transform.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/transform.js\n ** module id = 57\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_writable.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/writable.js\n ** module id = 58\n ** module chunks = 0\n **/","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/~/punycode/punycode.js\n ** module id = 59\n ** module chunks = 0\n **/","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/support/isBufferBrowser.js\n ** module id = 61\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/util.js\n ** module id = 62\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 63\n ** module chunks = 0\n **/"],"sourceRoot":""}